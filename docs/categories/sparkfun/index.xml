<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" href="/xml/base.min.xml" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sparkfun on xkyle.com</title>
    <link>/categories/sparkfun/</link>
    <description>Recent content in sparkfun on xkyle.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Apr 2010 03:50:33 +0000</lastBuildDate>
    <atom:link href="/categories/sparkfun/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My Sunjar - An esp8266-Powered Light Alarm Clock</title>
      <link>/My-Sunjar-An-esp8266-Powered-Light-Alarm-Clock/</link>
      <pubDate>Thu, 26 Mar 2020 12:54:42 -0700</pubDate>
      <guid>/My-Sunjar-An-esp8266-Powered-Light-Alarm-Clock/</guid>
      <description>&lt;p&gt;This is my Sunjar (&lt;a href=&#34;https://github.com/solarkennedy/sunjar&#34;&gt;code&lt;/a&gt;).
Inspired by those (expensive) &lt;a href=&#34;https://www.amazon.com/Philips-Simulation-Headspace-Subscription-HF3520/dp/B0093162RM&#34;&gt;light alarm clocks&lt;/a&gt;, my Sunjar gently wakes me up in the morning to this (click to see a youtube version):&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fExAfrpSHGU&#34;&gt;&lt;img src=&#34;../../uploads/sunjar_ocean.gif&#34; alt=&#34;Sunjar ocean pattern&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And then fall asleep to flames:
&lt;a href=&#34;https://www.youtube.com/watch?v=G6xP6r_RCTU&#34;&gt;&lt;img src=&#34;../../uploads/sunjar_flames.gif&#34; alt=&#34;Sunjar fire pattern&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;p&gt;This is &lt;em&gt;my&lt;/em&gt; alarm clock, so I can put in the features that &lt;em&gt;I&lt;/em&gt; want:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NTP-synced time. Never forget about DST again. Always accurate.&lt;/li&gt;
&lt;li&gt;Wakeup by ocean light, with a 1-hour brightness ramp-up.&lt;/li&gt;
&lt;li&gt;Capacitive touch-sensitive override - snooze if I want to, just touch the jar&lt;/li&gt;
&lt;li&gt;1-hour red-light sleep timer for going to bed&lt;/li&gt;
&lt;li&gt;Cool patterns during the day&lt;/li&gt;
&lt;li&gt;Over the air (OTA) firmware updates&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An esp8266 (Wemos W1 Clone)&lt;/li&gt;
&lt;li&gt;5 WS2812 LEDs&lt;/li&gt;
&lt;li&gt;1 50M ohm resistor&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;wakeup--sleep-time-algorithm&#34;&gt;Wakeup / Sleep Time Algorithm&lt;/h2&gt;
&lt;p&gt;I decided I only needed two different wakeup times, one for weekedays, one for weekends.&lt;/p&gt;
&lt;p&gt;If you would like to see a fancier light alarm clock with a web interface to set custom alarms, check out &lt;a href=&#34;https://www.instructables.com/id/SootheRefresh-Smart-Lamp/&#34;&gt;this soothing alarm clock&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;capacitive-touch-sensor&#34;&gt;Capacitive Touch Sensor&lt;/h2&gt;
&lt;p&gt;The Sunjar is just a heavily frosted mason jar and it has a stainless steal rim.
By connecting this rim to particular pins on the microcontroller, I can use the rim as a capacitive touch sensor, detecting when humans touch the jar.&lt;/p&gt;
&lt;p&gt;The electrical schematic for this is extremely simple, requiring only two pins and a resistor:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/sunjar_schematic.png&#34;&gt;&lt;img src=&#34;../../uploads/sunjar_schematic.png&#34; alt=&#34;Sunjar Schematic&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My code easy to write thanks to a &lt;a href=&#34;https://github.com/PaulStoffregen/CapacitiveSensor&#34;&gt;library&lt;/a&gt; that handles the hard parts.&lt;/p&gt;
&lt;p&gt;This touch sensor serves to override the lamp, for when I want to sleep early, use it as a night light, or need to snooze in the morning.&lt;/p&gt;
&lt;h2 id=&#34;a-love-letter-to-pacifica-the-ocean-pattern&#34;&gt;A Love Letter to &amp;ldquo;Pacifica&amp;rdquo;, the ocean pattern&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Pacifica&amp;rdquo; is the name of the ocean pattern. It powers the wakeup mode (with the ocean-inspired palette) as well as the sleep mode (with a fire-inspired palette):&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/379376339&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/kriegsman/36a1e277f5b4084258d9af1eae29bac4&#34;&gt;Written by Mark Kriegsman&lt;/a&gt; for the art piece &amp;ldquo;&lt;a href=&#34;https://vimeo.com/379376339&#34;&gt;Beneath These Waves Lies Light&lt;/a&gt;&amp;quot;, it still looks beautiful on 5 leds:&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/fExAfrpSHGU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Its beauty comes from its complexity and depth.
There are four simultaneous &amp;ldquo;waves&amp;rdquo; intersecting each other with extra effects for darker hues and whitecaps.&lt;/p&gt;
&lt;h2 id=&#34;future-improvements&#34;&gt;Future Improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I think eventually I will want an easier way to change the alarm times&lt;/li&gt;
&lt;li&gt;Maybe I can make the touch sensor detect long holds or double taps for more interesting commands&lt;/li&gt;
&lt;li&gt;Synchronized color schemes for special events copied from a &lt;a href=&#34;https://github.com/solarkennedy/fadecandycal&#34;&gt;different project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>The Case Against Kubernetes Sidecars</title>
      <link>/The-Case-Against-Kubernetes-Sidecars/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      <guid>/The-Case-Against-Kubernetes-Sidecars/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;The Kubernetes (k8s) ecosystem has gone crazy for sidecar containers.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/clowncar.gif&#34;&gt;&lt;img src=&#34;../../uploads/clowncar.gif&#34; alt=&#34;clowncar.gif&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sidecar containers (sidecars) are auxiliary containers, not part of your application, that provide additional support to make it work.
Along with your application, sidecars can be used to &lt;a href=&#34;https://www.hashicorp.com/blog/injecting-vault-secrets-into-kubernetes-pods-via-a-sidecar/&#34;&gt;inject secrets&lt;/a&gt;, &lt;a href=&#34;https://blog.powerupcloud.com/kubernetes-pod-management-using-fluentd-as-a-sidecar-container-and-prestop-lifecycle-hook-part-iv-428b5f4f7fc7?gi=5221437166e4&#34;&gt;ship logs&lt;/a&gt;, or power a &lt;a href=&#34;https://aws.amazon.com/blogs/containers/using-sidecar-injection-on-amazon-eks-with-aws-app-mesh/&#34;&gt;service mesh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Although there are some advantages to Sidecars over traditional daemons, I would like to make the case that they are actually and inferior solution for a company that has the resources to provide a platform to its developers.
The alternative is what I will call &amp;ldquo;the daemon pattern&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m a general believer that strong platform teams at a company are (can be) development multipliers. These platform teams build infrastructure, shared tooling, and heck probably the k8s cluster that these sidecars run on! If you live in a world where this is no separation between an infrastructure team and a application team, then maybe this blog post is not for you.&lt;/p&gt;
&lt;h2 id=&#34;sidecars-con-deploying-n-x-m-things&#34;&gt;Sidecars Con: Deploying N x M Things&lt;/h2&gt;
&lt;p&gt;The very first thought I had when I heard about the sidecar pattern (as compared to the traditional &amp;ldquo;daemon pattern&amp;rdquo; was: &amp;ldquo;wow, that sounds like a lot more resources required to run the same things!&lt;/p&gt;
&lt;p&gt;Certain compared to the existing platform I worked on, which had daemons for doing all the normal supplemental things (logging, metrics, service discovery, secrets, etc), the sidecar pattern represented a potential &lt;strong&gt;explosion&lt;/strong&gt; of processes to get (on the surface of it), the same job done.&lt;/p&gt;
&lt;p&gt;Given a cluster of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;100 Nodes&lt;/li&gt;
&lt;li&gt;1000 pods&lt;/li&gt;
&lt;li&gt;5 auxiliary processes to run&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Would you rather have 5000 things (sidecars) running, or 500 (daemons)? Don&amp;rsquo;t forget to add sidecars to all your cron jobs, spark executors, and stateful sets too!&lt;/p&gt;
&lt;p&gt;What about configuring, getting the logs of, and monitoring those things?&lt;/p&gt;
&lt;p&gt;With the daemon pattern, the auxiliary processes scale with the number of nodes, and in general goes down as servers get larger over time. With the sidecar pattern, the number of processes scales &lt;strong&gt;up&lt;/strong&gt; with the number of pods you want to run, and usually goes up as you add more things.&lt;/p&gt;
&lt;p&gt;Compared to the daemon pattern, the sidecar pattern consumes more compute resources as well as management resources.&lt;/p&gt;
&lt;h2 id=&#34;sidecar-con-whose-job-is-it-anyway-to-run-these-things&#34;&gt;Sidecar Con: Whose Job is it Anyway to Run These Things?&lt;/h2&gt;
&lt;p&gt;I really do feel bad for those organizations where the &amp;ldquo;platform team&amp;rdquo; provides only a raw k8s base, or maybe a team that &amp;ldquo;just uses {cloud provider&amp;rsquo;s k8s as a service}&amp;quot;. Whose job is it to actually add, upgrade, configure, monitor, and maintain all these sidecars?&lt;/p&gt;
&lt;p&gt;With the daemon pattern it is pretty clear to me that it is &lt;em&gt;not&lt;/em&gt; the application developer&amp;rsquo;s job to maintain system daemons. Maybe a logging subteam is responsible for keeping the logging platform up (even if it isn&amp;rsquo;t literally a daemon on the local host). Maybe it is just a big catchall for the &amp;ldquo;ops&amp;rdquo; team.&lt;/p&gt;
&lt;p&gt;With the sidecar pattern, it isn&amp;rsquo;t as clear. On the plus side, it is empowering for a dev team to copy paste some YAML to get a &lt;a href=&#34;https://www.hashicorp.com/blog/injecting-vault-secrets-into-kubernetes-pods-via-a-sidecar/&#34;&gt;Vault Sidecar&lt;/a&gt;, but maybe every app shouldn&amp;rsquo;t need to have them?&lt;/p&gt;
&lt;p&gt;I think the daemon pattern provides better separation between &amp;ldquo;infrastructure versus application&amp;rdquo;, which should unburden application developers and let them provide more business value.&lt;/p&gt;
&lt;h2 id=&#34;sidecar-con-the-burden-is-on-the-developer-to-understand-their-lifecycle&#34;&gt;Sidecar Con: The Burden is on the Developer to Understand their Lifecycle&lt;/h2&gt;
&lt;p&gt;As noted &lt;a href=&#34;https://banzaicloud.com/blog/k8s-sidecars/&#34;&gt;elsewhere&lt;/a&gt;, at the time of this writing, developers have to be aware of the interaction (lifecycle) of containers in a k8s pod, otherwise weird things happen. Developers cannot safely assume that the sidecars are ready before their application is. They also cannot assume a particular shutdown order. Also for jobs, the main job must kill the sidecars.&lt;/p&gt;
&lt;p&gt;This &lt;a href=&#34;https://github.com/kubernetes/enhancements/blob/master/keps/sig-apps/sidecarcontainers.md&#34;&gt;kep&lt;/a&gt; will fix these things by making &amp;ldquo;sidecar lifecycles&amp;rdquo; a first-class object in the pod spec.&lt;/p&gt;
&lt;p&gt;But you know, what if developers &lt;em&gt;never&lt;/em&gt; had to worry about that, and instead could always safely assume that they could emit logs, or that secrets would be available, or that service discovery would be up?
With the daemon pattern, developers can take for granted that all the necessary daemons are already warm by the time their application starts, and that their application can also shut down gracefully without having to interact with anything else. With the daemon pattern, the only process the application developer needs to worry about is their own.&lt;/p&gt;
&lt;h2 id=&#34;sidecar-con-platform-teams-have-less-control-over-the-infrastructure&#34;&gt;Sidecar Con: Platform Teams Have Less Control Over the Infrastructure&lt;/h2&gt;
&lt;p&gt;If the company is in a situation where there is Security Team that oversees the Vault containers, sidecars, security best practices, etc, what is their experience like in the sidecar world compared to the daemon world? Likewise with a logging team or a service discovery team.&lt;/p&gt;
&lt;p&gt;In the sidecar world, how do you perform an upgrade of say, the service mesh? Unless you are going to do manual changes, the normal way you would do this is with a &lt;a href=&#34;https://istio.io/docs/setup/upgrade/cni-helm-upgrade/#sidecar-upgrade&#34;&gt;rolling restart&lt;/a&gt;. This sounds straightforward: it uses the existing safety built into k8s, the pods go up and down in a structured way.&lt;/p&gt;
&lt;p&gt;But what if you &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; want to roll every application to do an infrastructure upgrade. What if you &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; want to restart that 48hour batch job, or your database team doesn&amp;rsquo;t want you to restart their stateful sets (even with pod disruption budget).&lt;/p&gt;
&lt;p&gt;With the daemon pattern, upgrading and managing those daemons is mostly a solved problem (I really like this &lt;a href=&#34;https://github.com/facebookincubator/pystemd/blob/master/_docs/daemon.md&#34;&gt;hitless systemd fd handoff thing&lt;/a&gt;). Upgrading daemons in general doesn&amp;rsquo;t require impacting the application. Infrastructure teams usually don&amp;rsquo;t have to ask permission from the application team to do things. They are much more decoupled, and I think that is a good thing.&lt;/p&gt;
&lt;h2 id=&#34;sidecar-pro-dragging-along-exactly-what-you-need&#34;&gt;Sidecar Pro: Dragging Along Exactly What you Need&lt;/h2&gt;
&lt;p&gt;On the plus side, sidecars &lt;em&gt;do&lt;/em&gt; allow you to deploy auxiliary processes in a much more focused way. This is especially important for service-mesh sidecars: the configuration is tailored to fit the application. The logging daemon only is responsible for your application logs, and can&amp;rsquo;t be overwhelmed by a noisy neighbor, etc.&lt;/p&gt;
&lt;p&gt;Sidecars do make it so that your application is 100% self-contained. You can use any k8s-as-a-service, and deploy your pod as-is (maybe). You can use a k8s node with minimal system services (all you need is the kubelet).&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I see the appeal of sidecars: they make it simple to add new functionality to your pod. I think they can also &lt;a href=&#34;https://youtu.be/XQjOhJtw1wg?t=1239&#34;&gt;get out of hand&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t know what the future holds.
I could easily see the industry double down on more sidecars, or relax and move to more daemon sets with more sophisticated ways of doing calls between the pods and those daemons.&lt;/p&gt;
&lt;p&gt;I know that for at least the things I build, I&amp;rsquo;ll be advocating for as few sidecars as possible, for the sake of the developers and for the sake of the infrastructure engineers.&lt;/p&gt;
&lt;h3 id=&#34;appendix-the-link-local-ip-trick&#34;&gt;Appendix: The Link-Local IP Trick&lt;/h3&gt;
&lt;p&gt;The &amp;ldquo;Link-Local&amp;rdquo; IP trick is using an IP from the &lt;a href=&#34;https://en.wikipedia.org/wiki/Link-local_address&#34;&gt;169.254.0.0/16&lt;/a&gt; space to get an IP that can be reached by other local pods.&lt;/p&gt;
&lt;p&gt;Amazon AWS uses &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html&#34;&gt;169.254.169.254&lt;/a&gt; for this, but you can pick your own at your own organization.&lt;/p&gt;
&lt;p&gt;With a little network glue, you can run your local daemons on your nodes using a link-local IP, then all your pods will be able to reach it (you can&amp;rsquo;t use a 127.x IP, because each pod will have its own network namespace and its own localhost). I&amp;rsquo;ll leave it as an exercise to the reader to handle security and proper service attestation for requests to that IP.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Etched Team Straws</title>
      <link>/Etched-Team-Straws/</link>
      <pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/Etched-Team-Straws/</guid>
      <description>&lt;p&gt;I recently etched reusable metal straws for my team at work.&lt;/p&gt;
&lt;p&gt;I used a &lt;a href=&#34;https://hackaday.com/2015/01/15/etching-steel-with-a-dc-wall-wort/&#34;&gt;low-tech&lt;/a&gt; procedure to etch the metal using electricity after applying a vinyl mask made with a hobby vinyl cutter.&lt;/p&gt;
&lt;p&gt;The glass straws used food-safe ceramic paint baked in an oven, also using the same vinyl stencil.&lt;/p&gt;
&lt;p&gt;The results are great. Click on any of the images below for a larger version. The last few are videos.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;a href=&#34;../uploads/straws//IMG_20191222_162104.jpg&#34;&gt;
    &lt;img src=&#34;../uploads/straws/IMG_20191222_162104-thumb.jpg&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;a href=&#34;../uploads/straws//IMG_20191222_162643.jpg&#34;&gt;
    &lt;img src=&#34;../uploads/straws/IMG_20191222_162643-thumb.jpg&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;a href=&#34;../uploads/straws//IMG_20191223_100055.jpg&#34;&gt;
    &lt;img src=&#34;../uploads/straws/IMG_20191223_100055-thumb.jpg&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;a href=&#34;../uploads/straws/MOV_0001.MP4&#34;&gt;
    &lt;img src=&#34;../uploads/straws/MOV_0001-thumb.jpg&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;a href=&#34;../uploads/straws/MOV_0002.MP4&#34;&gt;
    &lt;img src=&#34;../uploads/straws/MOV_0002-thumb.jpg&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;a href=&#34;../uploads/straws/MOV_0003.MP4&#34;&gt;
    &lt;img src=&#34;../uploads/straws/MOV_0003-thumb.jpg&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;a href=&#34;../uploads/straws/VID_20191222_162215.mp4&#34;&gt;
    &lt;img src=&#34;../uploads/straws/VID_20191222_162215-thumb.jpg&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    <item>
      <title>What Kubernetes Got Right, and Mesos Got Wrong</title>
      <link>/What-Kubernetes-Got-Right-and-Mesos-Got-Wrong/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/What-Kubernetes-Got-Right-and-Mesos-Got-Wrong/</guid>
      <description>&lt;figure&gt;
    &lt;img src=&#34;../../uploads/distributed-systems-management/type3.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;I&amp;rsquo;ve worked at Yelp for about six years, working with our container platform in production for about four of those years.
The plaform is called &amp;ldquo;PaaSTA&amp;rdquo; and there are a number of public talks about it. It is also &lt;a href=&#34;https://github.com/Yelp/paasta&#34;&gt;open source&lt;/a&gt;.
When we started PaaSTA, it ran on Mesos, and now we are most of the way through our migration to use Kubernetes (k8s).
I&amp;rsquo;m in a relatively unique position to have production experience with both technologies.
This blog post will have some personal opinions on both platforms, which derive from experience, and also just thinking about the two a lot.&lt;/p&gt;
&lt;p&gt;This post is not some sort of feature comparison.
If you are actually evaluating these schedulers, I recommend reading more about the actual technical differences between the two systems, like &lt;a href=&#34;https://www.stratoscale.com/blog/kubernetes/kubernetes-vs-mesos-architects-perspective/&#34;&gt;this comparison&lt;/a&gt; and &lt;a href=&#34;https://platform9.com/blog/kubernetes-vs-mesos-marathon/&#34;&gt;this one&lt;/a&gt;.
My blog post, however, is not supposed to &amp;ldquo;inform&amp;rdquo; you about the differences between Mesos and k8s, it is &amp;ldquo;persuade&amp;rdquo; you to use and adopt the same principles that k8s uses, instead of the Mesos &amp;ldquo;approach&amp;rdquo; (where approach here is a combination of community, timing, and lots of tiny decisions along the way).&lt;/p&gt;
&lt;h2 id=&#34;mesos-vs-k8s-im-not-actually-not-that-interested-in-the-community-support&#34;&gt;Mesos vs k8s: I&amp;rsquo;m not actually not that interested in the Community Support&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Community&amp;rdquo; is often cited as an important reason for picking a particular technology.
You want to pick the winning horse! 12,000 Kubecon attendees can&amp;rsquo;t be wrong!&lt;/p&gt;
&lt;p&gt;In this case, I&amp;rsquo;m not suggesting that this is something that Mesos got wrong and k8s got right.
I think they both got it right.
My point here is that I don&amp;rsquo;t want you to judge the technical book here by its community cover. You know what has a huge community of users: Microsoft Windows, Openstack, and JQuery.&lt;/p&gt;
&lt;p&gt;It is true that with a large community of users, new feature are developed, bugs get squashed, etc.
But equally, a project can make a turn into a direction that is not useful for your organization, or its leadership can get diluted with committees, etc.&lt;/p&gt;
&lt;p&gt;Sorry for the mini rant before we actually get started.&lt;/p&gt;
&lt;h2 id=&#34;mesos-vs-k8s-the-failure-of-the-two-layer-scheduler-model&#34;&gt;Mesos vs k8s: The failure of the two-layer scheduler model&lt;/h2&gt;
&lt;p&gt;I remember being at Mesoscon 2015 and being excited at the handful of new frameworks coming to Mesos, and being enamoured with its &lt;a href=&#34;https://stackoverflow.com/questions/47779352/what-are-the-advantages-and-disadvantages-of-two-level-scheduler-like-in-apache&#34;&gt;two-level&lt;/a&gt; scheduling model.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;What a great design&amp;rdquo;, &amp;ldquo;such great separation of concerns&amp;rdquo;, were thoughts I had at the time.
I even felt a tinge of smugness. It kinda felt like when I first understood the &amp;ldquo;reversed&amp;rdquo; server/client model of &lt;a href=&#34;https://en.wikipedia.org/wiki/X_Window_System#Client%E2%80%93server_separation&#34;&gt;X&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But why do I consider this model a failure?&lt;/p&gt;
&lt;p&gt;The limitations of this model become apparent when you need to do something like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mesosphere/marathon/issues/846&#34;&gt;A &amp;ldquo;*&amp;rdquo; Constraint for unique should exist&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is the Mesos equivilant to a &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/&#34;&gt;k8s DaemonSet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But this is not possible on Mesos:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We can&amp;rsquo;t ensure that a task is running on all slaves in the cluster for following reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we can&amp;rsquo;t guarantee that there are enough resources on every machine&lt;/li&gt;
&lt;li&gt;in a multi framework cluster, we don&amp;rsquo;t know if we will ever receive offers for all the machines&lt;/li&gt;
&lt;li&gt;we could never tell if it has been deployed successfully, because we don&amp;rsquo;t know about all the machines in the cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think this would need direct support from Mesos.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It just isn&amp;rsquo;t possible is Mesos, and will never be. Why? Because the two-layer scheduler model means that schedulers on Mesos &lt;em&gt;are not supposed to know&lt;/em&gt; about the nodes that are out there. Separation of concerns of course.&lt;/p&gt;
&lt;p&gt;In k8s, all the schedulers / operators / controllers can see the entire state of the world. They have unrestricted access and are expected to play nice together. This blurring of concerns allows k8s to have much more rich capabilties, like DaemonSets, StatefulSets, etc.
This is only possible because of this blurring of layers, and is one thing that k8s got right that Mesos got wrong.&lt;/p&gt;
&lt;h2 id=&#34;mesos-vs-k8s-client-libraries&#34;&gt;Mesos vs k8s: Client Libraries&lt;/h2&gt;
&lt;p&gt;What is the official Mesos Client Library
? &lt;a href=&#34;http://mesos.apache.org/documentation/latest/api-client-libraries/&#34;&gt;libmesos&lt;/a&gt;, as c++ .so file. There is also an officially supported Java wrapper around libmesos. Everything else is community-contributed. That means &amp;gt;3 golang libraries, &amp;gt;2 python libraries, and at least one Scala one.&lt;/p&gt;
&lt;p&gt;For k8s? &lt;a href=&#34;https://kubernetes.io/docs/reference/using-api/client-libraries/&#34;&gt;Official&lt;/a&gt; libraries for Go, Python, Java, dotnet, JavaScript and Haskell. Sure, they are leveraging the fact that they have OpenAPI specs. There are even more user-contributed ones, but honestly I&amp;rsquo;m not really sure why they exist.&lt;/p&gt;
&lt;p&gt;Mesos never really got this right. Writing &lt;em&gt;&lt;strong&gt;good&lt;/strong&gt;&lt;/em&gt; Mesos frameworks was always hard, and continued to be hard because the API and associated client libraries were never great. K8s gets this right by having a solid api &lt;em&gt;&lt;strong&gt;and&lt;/strong&gt;&lt;/em&gt; having solid, official, and up-to-date client library languages for the most popular languages in the industry.&lt;/p&gt;
&lt;p&gt;Client libraries should not be left to the community. It create fragmentation and raises the barrier to entry when it comes to integration with your thing. k8s realises the power of good apis and good client libraries, it got this right when Mesos only ever supported libmesos, and the Mesos framework explosion never happened.&lt;/p&gt;
&lt;h2 id=&#34;mesos-vs-k8s-providing-the-kernel-versus-providing-the-distro&#34;&gt;Mesos vs k8s: Providing the Kernel Versus Providing the Distro&lt;/h2&gt;
&lt;p&gt;Mesos was always touted as &amp;ldquo;the kernel of the datacenter&amp;rdquo;. It is true, in the same sense that the Linux kernel does process scheduling, so does Mesos. Linux was successful in the industry, why not Mesos?&lt;/p&gt;
&lt;p&gt;But wait. In a different sense, &amp;ldquo;Linux&amp;rdquo; isn&amp;rsquo;t successful per-se, but Android is. RedHat is. Ubuntu is. These are Linux distros. Linux (a kernel) by itself is almost useless!&lt;/p&gt;
&lt;p&gt;K8s did this right by providing a Distro, which was useful to real end users. This &amp;ldquo;distro&amp;rdquo; provided:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A kernel (the k8s scheduler, not the Mesos scheduler)&lt;/li&gt;
&lt;li&gt;A solution for daemons&lt;/li&gt;
&lt;li&gt;A solution for stateful processes&lt;/li&gt;
&lt;li&gt;A way to run cron jobs as well as long-running services&lt;/li&gt;
&lt;li&gt;Service discovery and routing&lt;/li&gt;
&lt;li&gt;Secret handling&lt;/li&gt;
&lt;li&gt;And much much more&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://dcos.io/&#34;&gt;DC/OS&lt;/a&gt; is the only Mesos distro I&amp;rsquo;m aware of. Why didn&amp;rsquo;t it take off? My best guess is that it was too targeted towards Enterprise customers first. There was never &amp;ldquo;DC/OS: The Hard Way&amp;rdquo;. Mesosphere&amp;rsquo;s Marathon did get some advanced features, but there was never a great way to provide these kind of useful primitives (load balancing, scheduled jobs, secrets) to be useful to other frameworks too.&lt;/p&gt;
&lt;p&gt;What k8s got right was providing a lot of services you need to get going, even if they are simple implementations of them, and made all those services available to every other k8s&amp;rsquo;y thing via a common API. Everything on k8s could assume there was an etcd cluster available, that there was load balancing and services, and secret handling. On Mesos, no such assumptions were safe.&lt;/p&gt;
&lt;h2 id=&#34;mesos-vs-k8s-mesos-framework-libraries-versus-operator-sdks&#34;&gt;Mesos vs k8s: Mesos Framework Libraries versus Operator SDKs&lt;/h2&gt;
&lt;p&gt;This is sorta like the client libraries issue, but at the next level. How does one write automation integration with Mesos? You go through the difficult task of writing a framework. Sure it may take seconds to get something running, but it will take a long time before the operator is production ready. Writing a good Mesos Framework isn&amp;rsquo;t easy.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://mesosphere.github.io/dcos-commons/&#34;&gt;DC/OS Commons&lt;/a&gt; as the closest thing to a good Mesos Framework SDK. It also never really took off.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;When this blog post is titled &amp;ldquo;what k8s does &amp;lsquo;right&amp;rsquo;&amp;quot;, you should ask, &amp;ldquo;right for who?&amp;quot;. The answer to me is, right for most infrastructure engineers want a platform to run all their different workloads on. &lt;em&gt;Not&lt;/em&gt; a distributed systems SDK (Mesos).&lt;/p&gt;
&lt;p&gt;The next thing you should ask is: &amp;ldquo;Isn&amp;rsquo;t this an unfair comparison? K8s is more like DC/OS, Mesos is more like the k8s-scheduler component.&amp;rdquo; To which I say: Kinda. I think it is more like Mesos is k8s just without the replica-set/deployment controllers and good API (those were left to frameworks like Marathon to implement). But sure, it isn&amp;rsquo;t fair.&lt;/p&gt;
&lt;p&gt;In a sense, Mesos is a tool that does &amp;ldquo;one thing well. In the right circumstance, it can be the right tool for the job.&lt;/p&gt;
&lt;p&gt;Kubernetes do one thing well, it does a lot of stuff &amp;ldquo;ok&amp;rdquo;, but leaves room for infrastructure engineers to replace parts and integrate. It also met developers where they are at, by giving them good client libraries in their native language, primitives to build operators on, and lots of the &amp;ldquo;things you just need to get going&amp;rdquo; (secrets, service discovery, etc) to make things work.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Can Infrastructure Teams Do Better Than AWS? Yes, Sometimes.</title>
      <link>/Can-Infrastructure-Teams-Do-Better-Than-AWS-Yes-Sometimes./</link>
      <pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/Can-Infrastructure-Teams-Do-Better-Than-AWS-Yes-Sometimes./</guid>
      <description>&lt;p&gt;AWS likes to use the pharse
&amp;ldquo;&lt;a href=&#34;https://www.cio.co.nz/article/466635/amazon_cto_stop_spending_money_undifferentiated_heavy_lifting_/&#34;&gt;undifferentiated heavy lifting&lt;/a&gt;&amp;rdquo;
to describe what AWS does best: all the things that everyone hast to do anyway with computers. Commonly these are things like running servers for you, hosting files, and managing a network.
Let AWS handle the boring things so that you can focus on what matters most for your business.
Sounds great! I certainly do not want a job that could otherwise be commonditized and turned into an API.&lt;/p&gt;
&lt;p&gt;In the world of &amp;ldquo;Cloud&amp;rdquo; providers, who&amp;rsquo;s mission is to provide
&amp;ldquo;undifferentiated heavy lifting&amp;rdquo; for other companies, is there even room for
infrastructure teams to provide value to their organizations? Or are they just barriers to the onramp that is the Cloud-computing-dream?&lt;/p&gt;
&lt;p&gt;Some firmly believe the answer is unequivocally &amp;ldquo;No.&amp;rdquo; They believe that
developers should be given an AWS account and then let loose, given
all the freedom, flexibility, and power to do their thing.
Some believe that any &amp;ldquo;wrapper&amp;rdquo; or &amp;ldquo;abstraction&amp;rdquo; or &amp;ldquo;glue&amp;rdquo; on top of AWS is a type of gatekeeping, a relic of old types of beliefs that no longer apply in the new DevOps world.&lt;/p&gt;
&lt;p&gt;Others believe that companies need a &amp;ldquo;platform team&amp;rdquo; to build abstractions on top of cloud providers. Examples of company platforms include Target&amp;rsquo;s &lt;a href=&#34;https://www.linkedin.com/pulse/counting-down-zero-time-takes-launch-app-target-tom-kadlec-1/&#34;&gt;TAP&lt;/a&gt; and Atlassian&amp;rsquo;s &lt;a href=&#34;https://blog.developer.atlassian.com/why-atlassian-uses-an-internal-paas-to-regulate-aws-access/&#34;&gt;Micros&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Where do infra teams fit in? Should they be the gatekeepers to all things AWS
or metal? Should they re-invent all of AWS&amp;rsquo;s wheels? Should they be handing out
root access to developers? Should developers even need root access?
Where should the line be drawn when it comes to giving developers the &amp;ldquo;power of the cloud&amp;rdquo; and giving them an abstraction layer? A more famous engineer says that building internal PaaS&amp;rsquo;s is an &lt;a href=&#34;https://www.lastweekinaws.com/blog/an-internal-paas-to-manage-aws-dont-do-it/&#34;&gt;Anti-pattern&lt;/a&gt;, but maybe there is a more nuanced answer.&lt;/p&gt;
&lt;h2 id=&#34;start-by-drawing-a-line&#34;&gt;Start By Drawing A Line&lt;/h2&gt;
&lt;p&gt;This line represents the abstraction layer over your servers, whether that be physical servers or cloud-provided ones. It also includes the abstraction layer over services, like on-prem load balancers or cloud-provided ones.&lt;/p&gt;
&lt;h3 id=&#34;when-the-line-is-null&#34;&gt;When The Line is &amp;ldquo;null&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;At first, with no infra team, the line is all the way towards the raw
resources. Developers are given an AWS account, a &lt;a href=&#34;https://aws.amazon.com/aws-cost-management/aws-budgets/&#34;&gt;budget&lt;/a&gt; and the docs.
In AWS developers might use &lt;a href=&#34;https://aws.amazon.com/codedeploy/&#34;&gt;Code Deploy&lt;/a&gt; or &lt;a href=&#34;https://aws.amazon.com/elasticbeanstalk/&#34;&gt;Beanstalk&lt;/a&gt; to get their
code out.
Great! Sometimes this is called &amp;ldquo;NoOps&amp;rdquo;, because there is no &amp;ldquo;operations&amp;rdquo; or infrastructure teams at all, it is just developers living blissfully in the cloud with no restraints :).&lt;/p&gt;
&lt;p&gt;If there is only one development team, and one application, this is a great way
to start. No need to setup Kubernetes (k8s), microservices, or install a
service mesh. Even if there is only one person on the team who setup these AWS
resources, that can be fine, because there isn&amp;rsquo;t much else to do? Until there
is.&lt;/p&gt;
&lt;h3 id=&#34;when-one-team-grows-into-two&#34;&gt;When One Team Grows Into Two&lt;/h3&gt;
&lt;p&gt;With two developer teams, you will have your first opportunity to leverage gains through sharing. Maybe it will be a library you both share for interacting with infrastructure. Maybe it will be shared terraform modules to help reduce boilerplate. Maybe it will be a shared Ansible repo with playbooks.&lt;/p&gt;
&lt;p&gt;Certainly at this stage, it doesn&amp;rsquo;t &amp;ldquo;feel&amp;rdquo; like one team is trying to isolate, hide, or gatekeep them from the underlying infrastructure, right?&lt;/p&gt;
&lt;h3 id=&#34;when-two-dev-teams-grow-into-ten&#34;&gt;When Two Dev Teams Grow Into Ten&lt;/h3&gt;
&lt;p&gt;With Ten development teams doing their thing, it will become pretty clear that there is shared code or infrastructure components that are now powering your business. Things are spreading and diverging. Maybe one team wants to try out k8s and these new &amp;ldquo;containers&amp;rdquo; that everyone keeps talking about. Maybe one team has found &amp;ldquo;Spinnaker&amp;rdquo; for doing pipelines and thinks the other nine teams should try it.&lt;/p&gt;
&lt;p&gt;As a organization, you are ready to make a call: Should we let the ten teams just do their thing and let things evolve organically, or should there be a dedicated team that is just in charge of building and maintaining the shared stuff?&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t think I need to make the case that, at a certain scale, some sort of shared-infrastructure-core-compute-platform-devops team is worth it. Infrastructure at scale is complex, and expertise in infra can be a tide that raises all boats. But how do you prevent that tide from drowning your other teams, or even worse, holding them back from the &amp;ldquo;sunken treasures&amp;rdquo; that are the native cloud technologies? Where do you draw that infrastructure line boundary?&lt;/p&gt;
&lt;h2 id=&#34;push-that-line-where-it-makes-the-biggest-impact&#34;&gt;Push That Line Where It Makes The Biggest Impact&lt;/h2&gt;
&lt;p&gt;As with most things, the answer is nuanced. Where the line is drawn between raw resources and your users will depend on your business, and how much you stand to gain by building abstractions.&lt;/p&gt;
&lt;p&gt;The trick is this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;With each abstraction you build, ensure that the users of
that abstraction are empowerd to build bigger things on top
of it, and not held back by it.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For example, let&amp;rsquo;s say you built a Terraform module that abstracts away the fact that you deploy to an east and west EC2 region. Is that module empowering your users because now they don&amp;rsquo;t have to be concerned about which region to deploy to (because it is figured out automatically), or does it hold them back, because the design of the module limits the fields they can use, which limits their ability to &amp;ldquo;beak out&amp;rdquo; of the module?&lt;/p&gt;
&lt;p&gt;Example 2: Your &amp;ldquo;devops team&amp;rdquo; builds and supports tooling to do deploys via Ansible using custom playbooks. Is that set of tooling empowering your dev teams by providing a safe experience when deploying, providing for rollbacks, hitless deploys, and standardized tooling? Or is it holding teams back, because the tool isn&amp;rsquo;t actually very good and doesn&amp;rsquo;t deploy things in a way that is conducive to the actual type of application the devs are using?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/bulge.jpg&#34;&gt;&lt;img src=&#34;../../uploads/bulge.jpg&#34; alt=&#34;Fight the front where you can provide the most business value&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The mission of infrastructure teams is to push &amp;ldquo;against&amp;rdquo; (work with) infrastructure as a service to make it more useful to their company.&lt;/p&gt;
&lt;p&gt;They do this by boiling away the unnecessary parts of &amp;ldquo;the cloud&amp;rdquo; till all that is left is exactly what developers need, &amp;ldquo;getting out of the way&amp;rdquo; of the business.&lt;/p&gt;
&lt;p&gt;At the same time, infrastructure teams need to always be sure that they are not unintentionally preventing developers from doing their jobs through restrictive and crappy tooling.&lt;/p&gt;
&lt;p&gt;In the end, the best tooling is the kind where developers don&amp;rsquo;t even know they are restricted in what they can do, because all their actual needs are taken care of. They are not held back by the inability to make custom tags, because all the tags they need are automatically generated for them. They are not held back by the inability to launch a custom EC2 instance, because whatever need they had to launch it in the first place is already met.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Kubernetes as a Universal Infrastructure API</title>
      <link>/Kubernetes-as-a-Universal-Infrastructure-API/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
      <guid>/Kubernetes-as-a-Universal-Infrastructure-API/</guid>
      <description>&lt;p&gt;Recently the Kubernetes (k8s) &lt;a href=&#34;https://github.com/kubernetes/community/tree/master/sig-cluster-lifecycle&#34;&gt;Cluster Lifecycle Special Interest
Group&lt;/a&gt;
(SIG) release their &lt;a href=&#34;https://blogs.vmware.com/cloudnative/2019/05/14/cluster-api-kubernetes-lifecycle-management/&#34;&gt;first
Alpha&lt;/a&gt;
of their Cluster API.&lt;/p&gt;
&lt;p&gt;What does this thing do? It is kinda like a k8s
&lt;a href=&#34;https://enterprisersproject.com/article/2019/2/kubernetes-operators-plain-english&#34;&gt;operator&lt;/a&gt; (it&amp;rsquo;s a controller) that
has custom resource definitions for things to launch &lt;strong&gt;another&lt;/strong&gt; k8s
cluster, with a bunch of
cloud &lt;a href=&#34;https://github.com/kubernetes-sigs/cluster-api#provider-implementations&#34;&gt;providers&lt;/a&gt;.
It is kinda like if Terraform was re-imagined as a k8s operator, but
only for launching other k8s clusters, and not general purpose.&lt;/p&gt;
&lt;p&gt;It supports a couple of
&lt;a href=&#34;https://kubernetes-sigs.github.io/cluster-api/common_code/architecture.html#cluster-api-resources&#34;&gt;resources&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cluster&lt;/li&gt;
&lt;li&gt;Machine&lt;/li&gt;
&lt;li&gt;MachineSet&lt;/li&gt;
&lt;li&gt;MachineDeployment&lt;/li&gt;
&lt;li&gt;MachineClass&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are already familiar with k8s, these may look familiar! It isn&#39;t
a coincidence of course. This is what it looks like when k8s users try
to make an API for launching machines.&lt;/p&gt;
&lt;p&gt;But in general, it provides an k8s API endpoint to launch more k8s
clusters in a declarative way, just like anything else in k8s.&lt;/p&gt;
&lt;h2 id=&#34;how-does-the-k8s-cluster-lifecycle-api-solve-this-problem&#34;&gt;How Does the k8s Cluster Lifecycle API Solve This Problem?&lt;/h2&gt;
&lt;p&gt;The k8s lifecycle thing is very new, and a very specific goal: implement
enough &amp;quot;cloud&amp;quot; api calls to be able to get a k8s cluster running.&lt;/p&gt;
&lt;p&gt;They provide a couple of AMIs, but encourage you to bring your
&lt;a href=&#34;https://github.com/kubernetes-sigs/cluster-api-provider-aws#kubernetes-versions-with-published-amis&#34;&gt;own&lt;/a&gt;.
They are working on a &lt;code&gt;clusterctl&lt;/code&gt; command, analogous to kubectl.&lt;/p&gt;
&lt;p&gt;Like Terraform (and any other k8s&#39;y things), the API is declarative; you
tell k8s what kind of clusters you want to exist, then the controller
takes over and reconciles that with what is out there.&lt;/p&gt;
&lt;p&gt;Also like Terraform, you still have to provide all the details about
what you want to launch, like AMIs, security groups, vpcs, etc.&lt;/p&gt;
&lt;p&gt;Unlike Terraform, the Cluster Lifecycle API will never be a general
purpose infrastructure thing, it will only ever launch what they need to
get a k8s cluster up (ec2 nodes).&lt;/p&gt;
&lt;h2 id=&#34;is-this-a-good-thing&#34;&gt;Is This a Good Thing?&lt;/h2&gt;
&lt;p&gt;Good for who?&lt;/p&gt;
&lt;p&gt;While I do like the pattern of empowering k8s to launch it&#39;s own
infrastructure (a la &lt;a href=&#34;https://spotinst.com/products/ocean/&#34;&gt;Spotinst Ocean&lt;/a&gt;),
I don&#39;t think this Cluster API is right approach for intermediate-level
infrastructure team.&lt;/p&gt;
&lt;p&gt;I think the nuances of what to launch and how to launch are massive.
I don&#39;t think the Cluster API will ever be nuanced enough to do
all the things that are required to run all the things.&lt;/p&gt;
&lt;p&gt;That is OK. If all you need to do is launch other k8s clusters, then this API
is for you! If you need to launch any other &amp;ldquo;cloud&amp;rdquo; resource, then you will
have to end up reaching for another tool. Are you willing to have two different
ways to launch things? I don&amp;rsquo;t know, maybe I just really like Terraform.&lt;/p&gt;
&lt;p&gt;On the other hand, Terraform is flexible, but not dynamic. It doesn&#39;t respond
to events.  It has the benefit of git-commiting the state and being easier to
reason about, but it can&#39;t really make new k8s clusters &amp;quot;on the fly&amp;quot;. It has
no &amp;ldquo;API&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I think that is OK. Do we need to launch new k8s clusters on
the fly? I think we need to be able to launch things &lt;em&gt;on&lt;/em&gt; k8s
dynamically, but I don&#39;t think we need whole clusters to exist without
human interaction.&lt;/p&gt;
&lt;p&gt;But I do think that the thing that launches k8s nodes should be the same
thing that is doing the cluster autoscaling control loop, and should be
empowered to launch instances that it needs.&lt;/p&gt;
&lt;h2 id=&#34;k8s-as-a-universal-infrastructure-control-plane&#34;&gt;K8s as a Universal Infrastructure Control Plane?&lt;/h2&gt;
&lt;p&gt;The pattern of using the k8s API machinery and custom resource
definitions to control things that are not &amp;quot;native&amp;quot; k8s objects, kinda
reminds me of New Relic&#39;s
&lt;a href=&#34;https://www.youtube.com/watch?v=eja7b3tahMg&#34;&gt;Inventory Service&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It keeps track of their hosts, and works like a
&lt;a href=&#34;https://en.wikipedia.org/wiki/Configuration_management_database&#34;&gt;CMDB&lt;/a&gt;,
using just the k8s api server and custom resource definitions. &lt;strong&gt;They
don&#39;t even run any kublets!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This idea is articulated a bit more in this blog post about k8s being a
general purpose
&amp;quot;&lt;a href=&#34;https://medium.com/@allingeek/kubernetes-as-a-common-ops-data-plane-f8f2cf40cd59&#34;&gt;Ops&lt;/a&gt;&amp;quot;
control plane.&lt;/p&gt;
&lt;p&gt;The k8s pattern provides a bunch of things at once that are opening up
new ways of thinking about general infrastructure problems. I think
these things are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A highly available hosted REST api with validation, schemas, CRUD,
etc, with custom endpoints, &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;hosted by k8s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A pattern of declarative YAML-based resource definitions&lt;/li&gt;
&lt;li&gt;A tight control loop running for these things, reconciling state
with the world, with watchers, queues, and all the
&lt;a href=&#34;https://github.com/operator-framework/getting-started&#34;&gt;things&lt;/a&gt; you
would need to write this loop efficiently and correctly&lt;/li&gt;
&lt;li&gt;A centralized place for that control loop to run, in a singleton way&lt;/li&gt;
&lt;li&gt;A decent key/value store to host stuff&lt;/li&gt;
&lt;li&gt;A free CLI to interact with those resources (&lt;code&gt;kubectl get tronjob&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Authentication (authn) and Authorization (authz) + Role-based Access
Control (RBAC)&lt;/li&gt;
&lt;li&gt;Secret storage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a great pattern to build general purpose infrastructure stuff.
It is starting with k8s objects now, but as you can see it is expanding
to store and launch k8s clusters,
&lt;a href=&#34;https://aws.amazon.com/blogs/opensource/aws-service-operator-kubernetes-available/&#34;&gt;arbitrary AWS resources&lt;/a&gt;,
&lt;a href=&#34;https://github.com/sensu/sensu-operator&#34;&gt;Sensu Clusters&lt;/a&gt;, New Relic&#39;s
inventory data, &lt;a href=&#34;https://github.com/sensu/sensu-operator&#34;&gt;SSL Certificates&lt;/a&gt;, etc.&lt;/p&gt;
&lt;p&gt;I predict that we&#39;ll see this as a Universal Infrastructure Control
Plane, because it is just so convenient, and the declarative pattern is
so often what you want in infrastructure!&lt;br&gt;
I think many infray things could be re-imagined in the CRD + Operator
world, and would be way easier to implement.&lt;/p&gt;
&lt;p&gt;It will take time though. k8s will have to become ubiquitous first, then
the operator pattern will have to become well established, &lt;strong&gt;then&lt;/strong&gt; we&#39;ll start to
see infrastructure teams want to piggyback on all the goodness and
extensibility that k8s provides.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>epaper-watch: Cleaning the Literary Quotes Database</title>
      <link>/epaper-watch-Cleaning-the-Literary-Quotes-Database/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/epaper-watch-Cleaning-the-Literary-Quotes-Database/</guid>
      <description>&lt;h1 id=&#34;paper-watch-intro&#34;&gt;paper-watch intro&lt;/h1&gt;
&lt;p&gt;My &lt;a href=&#34;https://github.com/solarkennedy/epaper-watch/&#34;&gt;epaper-watch&lt;/a&gt; is an attempt to build a watch with an &lt;a href=&#34;https://en.wikipedia.org/wiki/Electronic_paper&#34;&gt;epaper&lt;/a&gt; display.&lt;/p&gt;
&lt;p&gt;It tells time by displaying a quote from a book:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../uploads/epaper-watch-alpha1.jpg&#34; alt=&#34;Exteremely early epaper-watch output&#34;&gt;&lt;/p&gt;
&lt;p&gt;(don&amp;rsquo;t mind the graphical glitches)&lt;/p&gt;
&lt;p&gt;The dataset with all the quotes needs some data cleaning love though.&lt;/p&gt;
&lt;h2 id=&#34;cleaning-the-dataset&#34;&gt;Cleaning The Dataset&lt;/h2&gt;
&lt;p&gt;The CSV has over 1,400 quotes in it. For every minute, there may be multiple quotes (&amp;ldquo;Midnight&amp;rdquo; has 26 unique quotes). Some minutes of the day do not have any quotes.&lt;/p&gt;
&lt;p&gt;As much as possible I used tools to programmatically clean this data and used &lt;code&gt;git diff&lt;/code&gt; to check the output at each step.&lt;/p&gt;
&lt;p&gt;The original database of quotes comes from quotes collected by
&lt;a href=&#34;https://www.theguardian.com/books/booksblog/2011/apr/15/christian-marclay-the-clock-literature&#34;&gt;The Guardian&lt;/a&gt;
for an art installation.&lt;/p&gt;
&lt;p&gt;I used an annotated version from of that database built by Jaap Meijers for a
&lt;a href=&#34;https://www.instructables.com/id/Literary-Clock-Made-From-E-reader/&#34;&gt;Kindle-based&lt;/a&gt;
version of this clock.&lt;/p&gt;
&lt;p&gt;To fit on my tiny epaper display, I had to clean up the dataset.&lt;/p&gt;
&lt;h2 id=&#34;quotation-mark-cleaning&#34;&gt;Quotation Mark Cleaning&lt;/h2&gt;
&lt;p&gt;The database is full of lots of quotes, as in quotation marks. Lots of them. Triple-double quotes, smart quotes, smart single quotes, backticks, etc.&lt;/p&gt;
&lt;p&gt;Vim macros help me manually clean up the zoo of quotation marks and strip out all the extra ones. Given the limited number of characters I can display on the watch face, I don&amp;rsquo;t think there is any need to put quotes around the quote itself, just print the thing:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;#34;&amp;#34;&amp;#34;I am going to lock you in. It is-&amp;#34;&amp;#34; he consulted his watch,
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;#34;&amp;#34;five minutes to midnight. Miss Granger, three turns should do it.
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-Good luck.&amp;#34;&amp;#34;&amp;#34;|Harry Potter and the Prisoner of Azkaban|J. K. Rowling
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&amp;#34;I am going to lock you in. It is-&amp;#34; he consulted his watch,
&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&amp;#34;five minutes to midnight. Miss Granger, three turns should do it.
&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+Good luck.&amp;#34;|Harry Potter and the Prisoner of Azkaban|J. K.  Rowling
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;#34;We have heard the chimes at midnight.&amp;#34;|Henry IV
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+We have heard the chimes at midnight.|Henry IV
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;duplicates&#34;&gt;Duplicates&lt;/h2&gt;
&lt;p&gt;By sorting the dataset, duplicate quotes become more visible. Literally identical quotes can be removed programmatically:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-generic&#34; data-lang=&#34;generic&#34;&gt;sort litclock_annotated.csv | uniq &amp;gt; tmp &amp;amp;&amp;amp; mv tmp litclock_annotated.csv
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Many quotes are used multiple times for multiple minutes, so it isn&amp;rsquo;t safe to blindly remove any quote that is used more than once.&lt;/p&gt;
&lt;h2 id=&#34;manually-shrinking-the-text&#34;&gt;Manually Shrinking the Text&lt;/h2&gt;
&lt;p&gt;Many quotes are very long and contain lots of context. Some quotes are very floral and contain long run-on sentences.&lt;/p&gt;
&lt;p&gt;I couldn&amp;rsquo;t think of a programmatic way of reducing the length of the quote to less than 180 characters.&lt;/p&gt;
&lt;p&gt;This step was mostly manual work, tool-assisted by having the code generation python script raise an exception if it parsed a quote longer than 180 chars:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-It was eight minutes to midnight. Just nice time, I said to myself.
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-Indoors, everything was quiet and in darkness. Splendid. I went to
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-the bar and fetched a tumbler, a siphon of soda and a bottle of
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-Glen Grant, took a weak drink and a pill, and settled down in the
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-public dining-room to wait the remaining two minutes
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-|The Green Man|Kingsley Amis
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+It was eight minutes to midnight. Just nice time, I said to myself.
&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+Indoors, everything was quiet and in darkness.
&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+|The Green Man|Kingsley Amis
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I tried to keep the time string located somewhere in the middle of the quote, with context around it. I took some artistic license in shortening the quotes and replacing the missing text with &lt;code&gt;...&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;removing-non-ascii-characters&#34;&gt;Removing Non-ASCII Characters&lt;/h2&gt;
&lt;p&gt;I didn&amp;rsquo;t bother updating the epaper library to support Unicode characters on
custom fonts. That would be a nice addition someday.&lt;/p&gt;
&lt;p&gt;Till then I used &lt;code&gt;sed&lt;/code&gt; to replace non-ascii characters en-masse with a
&lt;a href=&#34;https://github.com/solarkennedy/epaper-watch/blob/master/replace-non-ascii.sh&#34;&gt;script&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/é/e/&amp;#39;&lt;/span&gt; $1 | &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s/’/&amp;#39;/g&amp;#34;&lt;/span&gt; | &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/—/-/g&amp;#39;&lt;/span&gt; | &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;duplicating-am--pm-timed-quotes&#34;&gt;Duplicating AM / PM Timed Quotes&lt;/h2&gt;
&lt;p&gt;Many of the quotes in the quote database do not have any indication that they are specific to AM or PM. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-generic&#34; data-lang=&#34;generic&#34;&gt;&amp;quot;15:23&amp;quot;: &amp;quot;Three twenty-three! Is that all? Doesn&#39;t time - no, I&#39;ve already said that..&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There is no particular reason this quote couldn&amp;rsquo;t also work for &lt;code&gt;03:23&lt;/code&gt; as well.&lt;/p&gt;
&lt;p&gt;This procedure is fuzzy, and I required &lt;a href=&#34;https://github.com/solarkennedy/epaper-watch/blob/master/Duplicate%20AM%20and%20PM%20Quotes.ipynb&#34;&gt;jupyter notebook&lt;/a&gt; to accomplish it.&lt;/p&gt;
&lt;p&gt;The end result allowed me to add 480 more quotes:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-generic&#34; data-lang=&#34;generic&#34;&gt;$ wc litclock_expanded_meridiem.csv 
  1886  54488 354781 litclock_expanded_meridiem.csv
$ wc litclock_annotated.csv 
  1406  40357 261004 litclock_annotated.csv
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And it added 104 new unique minute entries.&lt;/p&gt;
&lt;p&gt;In other words, out of the 1440 unique minutes of the day, before duplicating
ambiguous AM/PM quotes, I only had quotes for 895 of those minute slots, and
now I have 999 minutes out of those 1440 unique slots. Now there are only 441
minutes were I do not have a quote.&lt;/p&gt;
&lt;h2 id=&#34;analysis&#34;&gt;Analysis&lt;/h2&gt;
&lt;p&gt;If there are 441 missing slots, then how inaccurate is this watch?&lt;/p&gt;
&lt;p&gt;Using the same &lt;a href=&#34;https://github.com/solarkennedy/epaper-watch/blob/master/Duplicate%20AM%20and%20PM%20Quotes.ipynb&#34;&gt;notebook&lt;/a&gt;, we can iterate through the minutes of the day, and find the longest gap between quotes.&lt;/p&gt;
&lt;p&gt;After AM/PM duplication, the longest gap is 6(!) minutes, between &amp;ldquo;05:46&amp;rdquo; and &amp;ldquo;05:52&amp;rdquo;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;In [268]:
print(newbuckets[&amp;quot;05:46&amp;quot;])
&amp;quot;He wrote a legal-sounding phrase to the effect that the sentence had been
carried out at 5.46am, adding, &#39;without a snag&#39;.&amp;quot;

In [269]:
print(newbuckets[&amp;quot;05:52&amp;quot;])
&amp;quot;At 5.52am paramedics from the St. Petersburg Fire Department and SunStar
Medic One ambulance service responded to a medical emergency call...&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;But what about the histogram?&lt;/p&gt;
&lt;p&gt;If I&amp;rsquo;ve done the math right:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../uploads/epaper-watch-off-by-minute-histogram.png&#34; alt=&#34;Histogram of minute errors&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;68.7374749498998 of the time is within 1 minutes
90.08016032064128 of the time is within 2 minutes
97.59519038076152 of the time is within 3 minutes
99.49899799599199 of the time is within 4 minutes
99.8997995991984 of the time is within 5 minutes
100.0 of the time is within 6 minutes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Not the most accurate time-piece?&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Build Versus Buy: You Are Always Building, Always Buying</title>
      <link>/Build-Versus-Buy-You-Are-Always-Building-Always-Buying/</link>
      <pubDate>Sat, 25 May 2019 19:35:56 +0000</pubDate>
      <guid>/Build-Versus-Buy-You-Are-Always-Building-Always-Buying/</guid>
      <description>&lt;h2 id=&#34;tldr&#34;&gt;TL;DR:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Build-vs-Buy&amp;rdquo; is a false dichotomy, you are always building, always buying&lt;/li&gt;
&lt;li&gt;&amp;ldquo;This is not your &amp;lsquo;Core Competency&amp;rsquo;&amp;rdquo; is a faux trump-card, everything is a spectrum&lt;/li&gt;
&lt;li&gt;Past experience is overrated, what matters for hiring is your ability to learn&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;understanding-the-trade-off&#34;&gt;Understanding The Trade-Off&lt;/h2&gt;
&lt;p&gt;Fully understanding the &lt;strong&gt;build-versus-buy&lt;/strong&gt; trade-off requires a bunch of
different context to really get right. At first glance you might think that
you only need to really understand:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The problem you are trying to solve&lt;/li&gt;
&lt;li&gt;How the thing you are looking to buy solves the problem&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But in reality it is much more nuanced than that. Most of the reading out there
about the build-versus-buy trade-off is written with &amp;ldquo;enterprise&amp;rdquo; software in
mind, and evaluate things on a very first-order level. Concerns like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How well can this software integrate with other things?&lt;/li&gt;
&lt;li&gt;How much does this software cost?&lt;/li&gt;
&lt;li&gt;How much time will it take to integrate the software and make it meet your
organizations&amp;rsquo; needs?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are all important questions to ask, but there are higher-order concerns
that take some time to fully appreciate like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the long run, can your developers build a solution that provides more
long-term value to your organization? (even if in the short-term it costs
more and takes longer to build?)&lt;/li&gt;
&lt;li&gt;How will your (in-house or external) users &amp;ldquo;feel&amp;rdquo; when they notice that your
solution is based on an off-the-shelf (bought) product?&lt;/li&gt;
&lt;li&gt;Can you account for the in-house skills and expertise that would be
simultaneously developed (and required) if the solution was developed
in-house?&lt;/li&gt;
&lt;li&gt;Will there be any developer or user attrition if you built versus if you bought?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are not as easy to answer, but the answers to them may be even more
significant than the $$$ figures your vendor may come up with.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve never been really satisfied with the &amp;ldquo;build-versus-buy&amp;rdquo; trade-off in
general, mostly because throughout my entire career, it has never been a
dichotomy: I was always building, and always buying.&lt;/p&gt;
&lt;h3 id=&#34;understanding-the-false-dichotomy&#34;&gt;Understanding the False Dichotomy&lt;/h3&gt;
&lt;p&gt;The false-dichotomy comes from the fact that everything &amp;ldquo;bought&amp;rdquo; requires
integration, and it is &lt;em&gt;building&lt;/em&gt; of that integration that actually builds
the value to your organization.&lt;/p&gt;
&lt;p&gt;At the same time, we are always buying. Even when it seems like we are
choosing the &amp;ldquo;Build&amp;rdquo; option, are are still buying, it just the we are buying
libraries, frameworks, and other components to build the solution. Things are
not built in a vacuum.&lt;/p&gt;
&lt;p&gt;It is all building, and all buying. There is no such thing as a turn-key
solution, it is just a spectrum between simpler and more complex products.&lt;/p&gt;
&lt;p&gt;It is in the building that you provide value to your organization and to your
users. It is in the buying that you &amp;ldquo;stand on the shoulders of giants&amp;rdquo; and
become a more powerful engineer by building on top of existing engineering.&lt;/p&gt;
&lt;h3 id=&#34;core-competency-the-ultimate-faux-trump-card&#34;&gt;&amp;ldquo;Core Competency&amp;rdquo;: The Ultimate Faux Trump-Card&lt;/h3&gt;
&lt;p&gt;Sometimes it is &amp;ldquo;simple&amp;rdquo; to describe some build-versus-buy decisions by framing
them in terms of what the organization&amp;rsquo;s &amp;ldquo;core competency&amp;rdquo; is. Sometimes it is
so simple as &amp;ldquo;if it is within our core competency, then we build, otherwise we
buy&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;What does &amp;ldquo;core competency&amp;rdquo; really mean? Before software was &lt;a href=&#34;https://www.wsj.com/articles/SB10001424053111903480904576512250915629460&#34;&gt;eating the
world&lt;/a&gt;,
&amp;ldquo;core competency&amp;rdquo; could have meant something very different. But now software
is seen as a universal multiplier for every business, regardless of what they
do. What does software have to do with &lt;a href=&#34;https://engineering.nike.com/&#34;&gt;Nike&amp;rsquo;s&lt;/a&gt;
core competency? Are computer servers Amazon&amp;rsquo;s core competency? What would the
core competency be of any retail organization? How about a game design company?
What about a high-frequency trading firm?&lt;/p&gt;
&lt;p&gt;The answer is blurry in this world, because software in so fundamental to the
world we live in. Software is a multiplier for all levels of any business, from
HR to Product to Manufacturing to Retail, it knows no bounds and powers all the
things. Discarding an opportunity to build something that enhances your
business is a mistake.&lt;/p&gt;
&lt;h3 id=&#34;case-study-game-design-and-looking-at-game-engines&#34;&gt;Case Study: Game Design and Looking at Game Engines&lt;/h3&gt;
&lt;p&gt;Game design, like any other software engineering pursuit, also involves many
build-versus-buy decisions. From assets, to engines, to voice acting, to motion
capture, there are many many micro build-versus-buy decisions to make when
developing a game. In some sense, &lt;em&gt;every one&lt;/em&gt; of these decisions fits into
their &amp;ldquo;core competency&amp;rdquo;. In another sense, building your own game engine for
example, sounds like a decision that 90% of game studios should choose &amp;ldquo;buy&amp;rdquo;
over build. Is developing your own game engine in-house included in their &amp;ldquo;Core
Competency&amp;rdquo;? Who knows.&lt;/p&gt;
&lt;p&gt;The real question is: will buying an existing Game Engine provide more value to
your game than what your team could bring to the table, or would it hold your
game back from what you are trying to achieve?&lt;/p&gt;
&lt;p&gt;If the year is 1993 and you are building Doom, then no, buying an engine will not help you achieve your goals. Building an engine will help you build what would make your game unique.&lt;/p&gt;
&lt;p&gt;If the year is 2017 and you are building Fortnite, then yes, buying an engine will help you build your game faster by focusing on what makes it unique.&lt;/p&gt;
&lt;p&gt;This doesn&amp;rsquo;t imply that we should not still be building new game engines in 2020. Just that fewer people should.&lt;/p&gt;
&lt;h3 id=&#34;on-personal-engineering-capital&#34;&gt;On Personal Engineering Capital&lt;/h3&gt;
&lt;p&gt;As an engineer, how should one look at the build-vs-buy trade-off in terms of
building personal engineering capital? That is, how does career advancement
come into play when deciding when to build versus when to buy?&lt;/p&gt;
&lt;p&gt;I see this as a trick question. With two years of &lt;em&gt;building&lt;/em&gt; on a codebase
written in an
&lt;a href=&#34;https://thedailywtf.com/articles/A_Case_of_the_MUMPS&#34;&gt;obscure language&lt;/a&gt;,
there is still room to gain new skills, and level-up the state of the
environment you are in, leaving it better than when you got there.&lt;/p&gt;
&lt;p&gt;On the other hand, does &lt;em&gt;buying&lt;/em&gt; an existing
&lt;a href=&#34;https://thedailywtf.com/articles/the-enterprise-axe&#34;&gt;software package&lt;/a&gt;
mean you won&amp;rsquo;t be creating any &amp;ldquo;personal engineering capital&amp;rdquo; for yourself?&lt;/p&gt;
&lt;p&gt;What does this really mean? Is this just a fancy way of saying &amp;ldquo;I want to work
on something that will look good on my resume.&amp;quot;? Or is it even simpler than
that: &amp;ldquo;I want to work on something that is different (or in a different
language) than what the company needs.&amp;quot;?&lt;/p&gt;
&lt;p&gt;Although this comes from a position of privilege, I don&amp;rsquo;t think that it is my
current employer&amp;rsquo;s job to set me up for my next job. Not only that, I see the
both the opportunity to buy and the opportunity to build &lt;em&gt;both&lt;/em&gt; as ways to
better my skills and be a useful engineer.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Buying&lt;/em&gt; an off-the-shelf &lt;a href=&#34;https://kubernetes.io/&#34;&gt;container orchestration system&lt;/a&gt;
allows me to &lt;em&gt;build&lt;/em&gt; amazing things on top of it. Things that would be impossible to build without help from such a product. Likewise, &lt;em&gt;building&lt;/em&gt; a company-specific
&lt;a href=&#34;https://en.wikipedia.org/wiki/Extract,_transform,_load&#34;&gt;ETL&lt;/a&gt; platform allows me to understand a problem more deeply, but I would still need to &amp;ldquo;&lt;em&gt;buy&lt;/em&gt;&amp;rdquo; other
&lt;a href=&#34;https://kafka.apache.org/intro&#34;&gt;software&lt;/a&gt; to make it work.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m personally not in it for the glamour, I&amp;rsquo;m in it for the problem-solving and the tech.&lt;/p&gt;
&lt;p&gt;I can also say, coming from a person who interviews a lot of candidates for my
own job, past experience has much less of an impact as you might think. In a
world where Javascript frameworks come in and out of vogue over the course of
months, &lt;strong&gt;your number one hireable quality is the ability to learn new
things&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I don&amp;rsquo;t think the key to a fulfilling software engineering career involves
building everything out of Rust or whatever is the hottest language out there
right now. Likewise, if you feel like your job is &amp;ldquo;just&amp;rdquo; gluing pre-built
things together, well guess what, &lt;strong&gt;&lt;a href=&#34;https://www.networkcomputing.com/data-centers/diy-devops-build-buy-or-yes&#34;&gt;the value comes from that
glue&lt;/a&gt;&lt;/strong&gt;,
and the thing you are &lt;em&gt;building&lt;/em&gt; is an even bigger platform on top.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Configuration as Code - Is It That Good of an Idea?</title>
      <link>/Configuration-as-Code-Is-It-That-Good-of-an-Idea/</link>
      <pubDate>Tue, 23 Apr 2019 19:35:56 +0000</pubDate>
      <guid>/Configuration-as-Code-Is-It-That-Good-of-an-Idea/</guid>
      <description>&lt;h2 id=&#34;kyles-conclusions&#34;&gt;Kyle&amp;rsquo;s Conclusions:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If possible, make your users &lt;em&gt;not care&lt;/em&gt; about the intermediate form&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Code as Configuration&amp;rdquo; is &lt;strong&gt;not&lt;/strong&gt; worth it&lt;/li&gt;
&lt;li&gt;YAML isn&amp;rsquo;t so bad if you can be strict&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;a-brief-history-of-configuration-as-code&#34;&gt;A Brief History of Configuration as Code&lt;/h2&gt;
&lt;p&gt;Configuration as Code is not new. There are a few subtle distinctions that are worth pointing out:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Thing&lt;/th&gt;
&lt;th&gt;Historic Example&lt;/th&gt;
&lt;th&gt;Modern Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Config as Config&lt;/td&gt;
&lt;td&gt;Apache2 (.conf)&lt;/td&gt;
&lt;td&gt;Sensu (.json)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Config as Code&lt;/td&gt;
&lt;td&gt;Sendmail (.cf)&lt;/td&gt;
&lt;td&gt;Skycfg (.cfg)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Code as Config&lt;/td&gt;
&lt;td&gt;C (config.h)&lt;/td&gt;
&lt;td&gt;Aurora (.aurora)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Config as Config: Config files which is never &amp;ldquo;run&amp;rdquo;, but is interpreted
as-is by the consuming program.&lt;/li&gt;
&lt;li&gt;Config as Code: Config files which are executed in way, which output an
intermediate config language, which is then consumed by the program.&lt;/li&gt;
&lt;li&gt;Code as Config: Config files which are executed directly by the program.
There is no intermediate representation, it just &lt;em&gt;is&lt;/em&gt; code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This blog post is about the last two.&lt;/p&gt;
&lt;h3 id=&#34;an-example-case-study-nagios-versus-sensu&#34;&gt;An Example Case Study: Nagios Versus Sensu&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Nagios&#34;&gt;Nagios&lt;/a&gt; is a monitoring tool built in
2002. &lt;a href=&#34;https://docs.sensu.io/sensu-core/1.7/&#34;&gt;Sensu&lt;/a&gt; is also a monitoring tool,
built around 2011. There are plenty of differences, but for this case
study I&amp;rsquo;m going to focus on how these tools are configured by their users.&lt;/p&gt;
&lt;p&gt;Nagios&amp;rsquo;s configuration file format is bespoke, but you can use the &lt;code&gt;nagios&lt;/code&gt;
binary to verify its correctness. It has a everything from &lt;a href=&#34;https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/3/en/objectdefinitions.html#host&#34;&gt;low-level resource
definitions&lt;/a&gt;
to object &lt;a href=&#34;https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/3/en/objectinheritance.html&#34;&gt;templating and
inheritance&lt;/a&gt;
as well as &lt;a href=&#34;https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/3/en/macros.html&#34;&gt;macros and variable
expressions&lt;/a&gt;.
Its configuration language is designed to be currated by humans. This hasn&amp;rsquo;t
stopped engineers from writing parsers ([&lt;a href=&#34;http://pynag.org/#manipulate&#34;&gt;1&lt;/a&gt;],
[&lt;a href=&#34;https://github.com/sous-chefs/nagios/wiki/hosts.cfg&#34;&gt;2&lt;/a&gt;],
[&lt;a href=&#34;https://puppet.com/docs/puppet/5.3/types/nagios_host.html&#34;&gt;3&lt;/a&gt;]) so they can
write Nagios config &lt;em&gt;as&lt;/em&gt; code.&lt;/p&gt;
&lt;p&gt;Sensu&amp;rsquo;s configuration file format is JSON. It has very limited &lt;a href=&#34;https://docs.sensu.io/sensu-core/0.29/reference/filters/#reference-documentation&#34;&gt;variable
expression&lt;/a&gt;.
Its configuration language is designed to be deployed with machines
(configuration management tools). The Sensu JSON files were never intended to
be written by humans. It was always intended to be a
&amp;ldquo;configuration-management-native&amp;rdquo; system.&lt;/p&gt;
&lt;p&gt;To put it another way, the &lt;a href=&#34;http://portertech.ca/2011/11/01/sensu-a-monitoring-framework/&#34;&gt;original Sensu
authors&lt;/a&gt; wanted
the JSON to be an &amp;ldquo;intermediate form&amp;rdquo; (where the human readable form was the
users&amp;rsquo; choice (chef code), then deployed to JSON for sensu to read, eventually
ending up as internal Sensu (ruby) objects).&lt;/p&gt;
&lt;p&gt;Why? Why would the Sensu authors make their system use configuration format
that is hostile to humans (JSON)? I think they were building it this way for two reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;They were building this tool for the long haul. Humans will be editing their
monitoring config (Sensu or Nagios) for years, so they wanted to meet them
where they are at, and make it as easy as possible for their users to use the
&lt;em&gt;common language&lt;/em&gt; of their environment (configuration management tools).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As a reaction to the &amp;ldquo;complexity&amp;rdquo; of the nagios configuration model, the
authors wanted to leave room for programmatic and dynamic configuration. In
the modern error, hosts come and go at will, checks need to be redefined based
on other programmatic events, and in general the world is not a static set of
hosts and checks per the Nagios model. Configuration as Code is one way to make
room for this dynamic.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;dsls-or-making-your-users-not-care&#34;&gt;DSLs or Making Your Users Not Care&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain-specific_language&#34;&gt;DSLs&lt;/a&gt; are a mixed bag.
Evaluating a DSL for its usefulness comes down to one key thing:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How much intellectual effort does this DSL save me, compared to the
intellectual cost of understanding and working with the intermediate form
directly?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Upon initial inspection, DSLs can look like they provide no immediate benefits,
and instead look like they just add a layer of obfuscation:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-generic&#34; data-lang=&#34;generic&#34;&gt;# Native Sensu                         | # Puppet Sensu
{                                      | sensu_check { &#39;check_www&#39;:
  &amp;quot;check_www&amp;quot;: {                       |   command  =&amp;gt; &#39;check_http --port 80&#39;,
    &amp;quot;command&amp;quot;: &amp;quot;check_http --port 80&amp;quot;, |   interval =&amp;gt; 60,
    &amp;quot;interval&amp;quot;: 60                     | }
  }                                    |
}                                      |
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It is naive to think that all this is is some alternative way to make JSON. The
real power comes from building abstractions on top, and allowing it to live in
the surrounding ecosystem of configuration:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-puppet&#34; data-lang=&#34;puppet&#34;&gt;$port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;apache&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;listen_port&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $port&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sensu_check&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;check_apache&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;command&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;check_http --port $port&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;interval&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;,&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;}&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This kind of integration was never possible with Nagios&amp;rsquo;s configuration
language, even with all its templates, inheritance, and variable
interpolation.&lt;/p&gt;
&lt;p&gt;But for these users of Sensu, they never hand-made the JSON in the first place.
To them, the configuration management language they use &lt;em&gt;is&lt;/em&gt; the config
language they use, they don&amp;rsquo;t care about the JSON intermediate form (for all
they care, it doesn&amp;rsquo;t even exist and is an implementation detail).&lt;/p&gt;
&lt;h3 id=&#34;what-about-k8s-dsls&#34;&gt;What About k8s DSLs?&lt;/h3&gt;
&lt;p&gt;Kubernetes&amp;rsquo; (k8s) popularity, combined with it&amp;rsquo;s &amp;ldquo;almost human readable api&amp;rdquo;
format (when you look at it in YAML form), have created a &lt;a href=&#34;https://www.merriam-webster.com/dictionary/cottage%20industry&#34;&gt;cottage
industry&lt;/a&gt; of
tools built to deal with k8s&amp;rsquo;s &amp;ldquo;intermediate form YAML&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;There is a subtle difference though between all these tools and the Sensu
example above: people care about the intermediate form with k8s. For k8s, the
YAML &lt;em&gt;&lt;strong&gt;is&lt;/strong&gt;&lt;/em&gt; the k8s configuration language, so any tool that &amp;ldquo;compiles&amp;rdquo; to
k8s YAML &lt;strong&gt;must&lt;/strong&gt; have the ability to allow users to inspect that intermediate
form.&lt;/p&gt;
&lt;p&gt;For some reason (probably the fact that YAML is human readable and the &lt;code&gt;kubectl apply&lt;/code&gt; command exists), we see it as the &amp;ldquo;primary&amp;rdquo; form, and not the
intermediate. We don&amp;rsquo;t see the same sort of standard held against Terraform.
Nobody really cares about the intermediate JSON that flows between Terraform
and cloud APIs, to Terraform users, the Terraform DSL is what matters.&lt;/p&gt;
&lt;h2 id=&#34;yaml-a-beast-that-can-be-tamed&#34;&gt;YAML: A Beast That Can Be Tamed&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The question to me is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Is YAML the input format or is YAML the output format?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think YAML is a fine input format for humans for DSLs and such. I think it
does not need to be an output format for computers to read, and gives a false
impression that humans should be meeting computers where they are at.&lt;/p&gt;
&lt;p&gt;When YAML is used as an input format only, then humans can decide what the
inputs are, not the machines. When the YAML generated by humans is intended to
be used directly by an API (k8s in these examples), then there will be an
impedance mismatch.&lt;/p&gt;
&lt;p&gt;I see a couple of paths for infrastructure developers to potentially take:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Say &amp;ldquo;no&amp;rdquo; to layers of obfuscation and &amp;ldquo;climb mount YAML&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Decide that the amount of YAML is too much for a human to handle, and resort
to a &amp;ldquo;real&amp;rdquo; programming language to generate it (&amp;ldquo;Code as Configuration&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;Take a hybrid approach and template out the YAML (the &amp;ldquo;Helm&amp;rdquo; approach).&lt;/li&gt;
&lt;li&gt;Make a DSL that can take in your format of choice, and output to an
intermediate form, and make your users not care what that is (the &amp;ldquo;Sensu
approach&amp;rdquo; in the example above).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the record, I&amp;rsquo;m in favor of approach #4.&lt;/p&gt;
&lt;h2 id=&#34;is-it-code-as-configuration-worth-it&#34;&gt;Is It &amp;ldquo;Code as Configuration&amp;rdquo; Worth It?&lt;/h2&gt;
&lt;p&gt;Some of the industry is pushing things in favor of approach #2. It usually
starts with a look at how much duplication there is in the YAML files, and the
urge to &lt;a href=&#34;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&#34;&gt;DRY&lt;/a&gt; out the
configs takes hold. Although YAML does have
&lt;a href=&#34;https://gist.github.com/bowsersenior/979804&#34;&gt;built-in&lt;/a&gt; functions to help
reduce some duplication, they only operate on hashes.&lt;/p&gt;
&lt;p&gt;When that is not enough, someone usually says &amp;ldquo;why don&amp;rsquo;t we just us Python?&amp;rdquo;
Well, you certainly can! At this point you are getting into &amp;ldquo;Code as Configuration&amp;rdquo; territory. Although I don&amp;rsquo;t think this is a good idea, if you think this is a good idea, then you might like some of these:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dhall-lang.org/#&#34;&gt;Dhall&lt;/a&gt;: Haskell-inspired general purpose language
for outputting config.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pulumi.io/&#34;&gt;Pulumi&lt;/a&gt;: &amp;ldquo;Just Python&amp;rdquo; library for building cloud
resources with Terraform-esq declarative semantics.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/stripe/skycfg/blob/master/_examples/k8s/app.cfg&#34;&gt;Skycfg&lt;/a&gt;:
k8s-specific python library that outputs YAML for k8s consumption.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ksonnet.io/tour/welcome/&#34;&gt;Ksonnet&lt;/a&gt;: A k8s-specific way of
templating/patching k8s manifests&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cue.googlesource.com/cue&#34;&gt;Cue&lt;/a&gt;: General-purpose config language, superset of JSON for&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some day I&amp;rsquo;ll do a comprehensive blog post comparing all these tools.&lt;/p&gt;
&lt;p&gt;Why do these tools exist? My best guess is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The allure of DRY is very strong, and often we&amp;rsquo;ll trade extra complexity for the chance to not repeat themselves&lt;/li&gt;
&lt;li&gt;The tool expecting all this config was never intended for humans to provide the input&lt;/li&gt;
&lt;li&gt;The problem domain really is too complex to define with static configuration&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When the problem domain hits that level of complexity, then the answer is not
config generation, the answer is a new level of abstraction and automation.
When you live in a dynamic environment when hosts come and go, do not write a
nagios hosts configuration generator and turn a static tool into a dynamic one.&lt;/p&gt;
&lt;h3 id=&#34;code-as-config-it-make-building-seams-harder&#34;&gt;Code As Config: It Make Building Seams Harder&lt;/h3&gt;
&lt;p&gt;Infrastructure changes, and the true &amp;ldquo;data gravity&amp;rdquo; is in configuration.&lt;/p&gt;
&lt;p&gt;Having configuration in declarative config formats allows change, validation, and linting. It allows infrastructure developers to easily build &amp;ldquo;seams&amp;rdquo; around that configuration, adding new features, refactoring old ones, and upgrading configuration en-masse, without having to &amp;ldquo;refactor&amp;rdquo; a codebase.&lt;/p&gt;
&lt;p&gt;Which of these DAG configurations do you think would be easier to transition to a new platform?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: my-dag&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;default_task_args&lt;/span&gt;:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;start_date&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-10-01&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;operators&lt;/span&gt;:
- &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: print-hello
  &lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt;: bash
  &lt;span style=&#34;color:#66d9ef&#34;&gt;properties&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;bash_command&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echo hello&amp;#34;&lt;/span&gt;
- &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: print-world
  &lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt;: bash
  &lt;span style=&#34;color:#66d9ef&#34;&gt;upstream_dependencies&lt;/span&gt;:
  - print-hello
  &lt;span style=&#34;color:#66d9ef&#34;&gt;properties&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;bash_command&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echo world&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; airflow &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; DAG

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime

&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; airflow.operators.bash_operator &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; BashOperator

DEFAULT_TASK_ARGS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;start_date&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-10-01&amp;#39;&lt;/span&gt;,
    }

dag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DAG(
        dag_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;my_dag_1&amp;#39;&lt;/span&gt;,
        default_args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DEFAULT_TASK_ARGS,
    )

print_hello &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; BashOperator(
        dag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (dag),
        bash_command &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;echo hello&amp;#39;&lt;/span&gt;,
        start_date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime(&lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)),
        task_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;print_hello&amp;#39;&lt;/span&gt;,
    )


print_world &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; BashOperator(
        dag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (dag),
        bash_command &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;echo world&amp;#39;&lt;/span&gt;,
        start_date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime(&lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)),
        task_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;print_world&amp;#39;&lt;/span&gt;,
    )

print_world&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_upstream(print_hello)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See Ety&amp;rsquo;s &lt;a href=&#34;https://github.com/etsy/boundary-layer/&#34;&gt;boundary-layer&lt;/a&gt; and &lt;a href=&#34;https://codeascraft.com/2018/11/14/boundary-layer%e2%80%89-declarative-airflow-workflows/&#34;&gt;blog post&lt;/a&gt; for an example where it was worth it to them to define jobs in a declarative YAML format, instead of allowing developers to &amp;ldquo;just write python&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;yaml-be-strict-in-what-you-accept&#34;&gt;YAML: Be Strict In What You Accept&lt;/h2&gt;
&lt;p&gt;YAML is a very flexible input language for humans, but in my opinion, too flexible. There are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://yaml-multiline.info/&#34;&gt;Many different ways to do multiline strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/solarkennedy/297a48b9ac372feee7e25b48f792c610&#34;&gt;22 ways to represent a boolean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a href=&#34;https://yaml.org/type/timestamp.html&#34;&gt;timestamp format&lt;/a&gt; (at least it is inspired by ISO8601)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&amp;rsquo;ve seen mistakes with the above in production many times. Want more, check out some other weird &lt;a href=&#34;https://gist.github.com/solarkennedy/2b826a6b90128a58c9f7f360cb87d1a8&#34;&gt;YAML gotchas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After spending years of working with YAML, I&amp;rsquo;ve come to accept the good with the bad, BY NOT ALLOWING IN THE BAD.&lt;/p&gt;
&lt;p&gt;My best advice is to look at &lt;a href=&#34;https://pre-commit.com/&#34;&gt;pre-commit&lt;/a&gt;, &lt;a href=&#34;https://github.com/adrienverge/yamllint&#34;&gt;yamllint&lt;/a&gt;, and &lt;a href=&#34;https://github.com/crdoconnor/strictyaml&#34;&gt;strictyaml&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Just like any other flexible language, your organization will save time and avoid mistakes with a machine-enforced style guide.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;You can come to your own conclusions, but I&amp;rsquo;ll tell you what I&amp;rsquo;ll continue to
do for the users around me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;m going to protect them from YAML gotchas, while making it a pleasure to
write the minimum amount of configuration they need to address their problem
domain&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;m going to build tools that protect users from the intermediate form, and
make it so they don&amp;rsquo;t care (a true abstraction)&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;m going to advocate against config-as-code or code-as-config, as I believe
it adds a new dimension of complexity where it is rarely needed. The best
code is no code.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Layers</title>
      <link>/Layers/</link>
      <pubDate>Fri, 08 Mar 2019 19:35:56 +0000</pubDate>
      <guid>/Layers/</guid>
      <description>&lt;p&gt;I recently gave a talk called &amp;ldquo;&lt;a href=&#34;https://youtu.be/hC4wkchMbBs?t=386&#34;&gt;Layers&lt;/a&gt;&amp;rdquo; (~35min).&lt;/p&gt;
&lt;p&gt;Warning: The audio and video quality are horrendous:&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/hC4wkchMbBs?start=386&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

</description>
    </item>
    <item>
      <title>Being a Great Engineering Mentor</title>
      <link>/Being-a-Great-Engineering-Mentor/</link>
      <pubDate>Sat, 12 Jan 2019 19:35:56 +0000</pubDate>
      <guid>/Being-a-Great-Engineering-Mentor/</guid>
      <description>&lt;p&gt;Here are some thoughts how I think about being a great engineering mentor. To
me the most important thing is remembering &amp;ldquo;who to be&amp;rdquo;, and not as much as &amp;ldquo;how
to act&amp;rdquo;. You won&amp;rsquo;t remember how to act. You can look up all the listicles you
want on tips on what to do as a mentor, but if you can just &amp;ldquo;be&amp;rdquo; the right
person, the choices you make and the things you say might just come naturally.&lt;/p&gt;
&lt;p&gt;When it comes down to it though, people remember you in an amalgamation of
things you say, facial expressions, body language, and the emotions you
project. Often I think a small set of key moments solidify your mental model
into a mentors brain (and likewise, first impressions with everyone else).
Saying the right thing at the right moment, or being supportive of them for the
right thing, or challenging them to do better at a receptive moment, can make
all the different to a mentee.&lt;/p&gt;
&lt;p&gt;Unless otherwise specified this advice applies to mentees, regardless of
whether they are interns, new graduates on their first jobs, or industry hires.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m going to describe things in the first person, and if you are welcome to
internalize it as &amp;ldquo;advice&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;being-available&#34;&gt;Being Available&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Who to &amp;ldquo;be&amp;rdquo;: A Level 1 Cache&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I always sit literally next to whoever I&amp;rsquo;m mentoring, no exceptions. It is so
clear to me: how can I be a great mentor to this person if I&amp;rsquo;m not within
earshot? Speaking of which, I don&amp;rsquo;t wear headphones either. It is one more
barrier for them to ask me a question, and I want them to ask me questions.&lt;/p&gt;
&lt;p&gt;I constantly remind them that it is my &amp;ldquo;job&amp;rdquo; to be &amp;ldquo;bothered&amp;rdquo; by them, and that
they are not a bother. They can ask me any question, any time. This is
especially important during the first few weeks of being onboarded. Asking a
simple question early on that takes 1 minute to answer can save them 1 hour of
effort. Doubly so if that effort leads them down the wrong path.&lt;/p&gt;
&lt;h2 id=&#34;being-friendly&#34;&gt;Being Friendly&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Who to &amp;ldquo;be&amp;rdquo;: A New Friend&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Of course, being a friendly person sounds like good general advice, but it is
especially important to be extra friendly to a mentee. It is likely they have
been relocated to be at this new job, so they probably already have plenty of
anxiety. Being that local friend that is sitting literally right next to them
every day can go a long way towards reducing that anxiety.&lt;/p&gt;
&lt;p&gt;How do I do this? Well, I start by asking them to lunch, all the time. Lunch is
so easy, and everyone has to eat anyway. Even if they say no or they don&amp;rsquo;t
actually want to have lunch with you, it actually doesn&amp;rsquo;t matter. The important
part is being inviting and reminding them that they are welcome to be with you.&lt;/p&gt;
&lt;p&gt;At the very least, carving out a particular time, like a Wednesday team lunch,
is an easy way to anchor the ritual and get everyone in sync plan-wise.&lt;/p&gt;
&lt;p&gt;I go the extra mile and try to organize small other events, &amp;ldquo;unofficial
offsites&amp;rdquo; that add a tiny bit to the team culture. This could be things like
going out for afternoon boba or ice cream for someones&amp;rsquo; birthday. Even fancier
might be a poker night at someones house, or going to a bar after work. It
doesn&amp;rsquo;t have to be a big deal, but to the new hire who has moved to a new city,
it could be a huge deal. It can go a long way towards making your mentee feel
like they are part of your team.&lt;/p&gt;
&lt;h2 id=&#34;make-them-feel-safe&#34;&gt;Make Them Feel Safe&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Who to &amp;ldquo;be&amp;rdquo;: An Assuring Parent&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Being a good engineer involves judging risks and rewards. Even if your mentee
has more experience than you do, they may not know how to evaluate risks within
the context of your organization and team. Maybe they don&amp;rsquo;t know how many
safeguards you have in place to prevent them from pushing bad code to
production. Maybe they don&amp;rsquo;t know how brittle a particular subsystem is.&lt;/p&gt;
&lt;p&gt;But you don&amp;rsquo;t want your mentee to live in fear, you want them to feel safe.
When they are safe, they can explore novel solutions. Maybe they can be more
productive because they will push code more often. In general, a larger portion
of their brain can be dedicated to solving problems and to pure creation when
they are not afraid to change things.&lt;/p&gt;
&lt;p&gt;How do I make mentees feel safe? First, I&amp;rsquo;m explicit about the technical
safeguards. I&amp;rsquo;ll say things like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;If the tests pass on this thing, you are probably good to go.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Jenkins won&amp;rsquo;t let you go to production if the integration tests don&amp;rsquo;t pass,
and this thing has plenty of coverage. It basically won&amp;rsquo;t let you break
production.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But then I&amp;rsquo;ll also assure them from a non-technical perspective. I&amp;rsquo;ll say
things like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;This codebase doesn&amp;rsquo;t have much test coverage, but I&amp;rsquo;ve worked on it a bunch
and I understand it. If it breaks, we&amp;rsquo;ll look at it, and I&amp;rsquo;m sure we can
figure it out together.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;This change is iffy, but you&amp;rsquo;ve got the rollback instructions, and I&amp;rsquo;ll
literally be sitting right here next to you watching the deploy. The worst
that can happen is that it doesn&amp;rsquo;t work and we rollback quickly, no big deal.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The nature of the consequences of taking risks at your organization may vary.
Adjust as necessary.&lt;/p&gt;
&lt;h2 id=&#34;encouraging--challenging-them-technically&#34;&gt;Encouraging / Challenging Them Technically&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Who to &amp;ldquo;be&amp;rdquo;: A Dungeon Master&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Being a really good &amp;ldquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Dungeon_Master&#34;&gt;dungeon
master&lt;/a&gt;&amp;rdquo; for the game that is
&amp;ldquo;being a software engineer&amp;rdquo; requires understanding your mentee&amp;rsquo;s strength and
weaknesses. Your job is to help them &amp;ldquo;level up&amp;rdquo; by giving them appropriately
challenging tasks. There is some degree of &amp;ldquo;fun&amp;rdquo; as well. A game that is too
easy isn&amp;rsquo;t very fun, and likewise a game that is brutally hard is also no fun.&lt;/p&gt;
&lt;p&gt;Sometimes things are difficult because they are simply unfamiliar. Sometimes
&amp;ldquo;simple&amp;rdquo; things seem easy only because they are &amp;ldquo;&lt;a href=&#34;https://www.infoq.com/presentations/Simple-Made-Easy&#34;&gt;at
hand&lt;/a&gt;&amp;quot;. I try to balance
steering mentees towards tasks that are easy for them (even if they are not
necessarily easy for me), to get their confidence up early, and then slowly add
in more challenging and unfamiliar tasks.&lt;/p&gt;
&lt;p&gt;Sometimes though, a mentee can surprise you at their abilities. Sometimes
things &lt;em&gt;you&lt;/em&gt; think are hard are not actually hard. Sometimes tasks become
difficult, simply because we (mentors) prime the mentee&amp;rsquo;s thoughts
unnecessarily. Instead of saying:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;This is going to be a hard ticket, it has 5 story points and involves an old
part of the codebase.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;I&amp;rsquo;m not sure how hard this ticket is, someone probably just gave it 5 story
points because they were unfamiliar with that part of the code. Why don&amp;rsquo;t you
take a look at it, spend maybe an hour thinking about how to solve it, and
check in with me and we&amp;rsquo;ll pair up and talk about it together.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Give them the opportunity to surprise you.&lt;/p&gt;
&lt;p&gt;The other thing I do that really makes tasks much easier than they seem is
&amp;ldquo;code hints&amp;rdquo;. Giving them jumpstart into the codebase can turn
easily change their mind from an intimidated &amp;ldquo;gosh, I don&amp;rsquo;t even know where to
begin with this&amp;rdquo; to &amp;ldquo;oh, there is the code, looks straightforward&amp;rdquo;. An example
might be in a ticket:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;BUG - we ping authors of a changeset twice: Looks like we ping authors twice
on slack for some reason. We should only ping them once. Code hint is
somewhere around
&lt;a href=&#34;https://github.com/Yelp/paasta/blob/e976953d6e04bcad8460ad84b3682462241465ce/paasta_tools/cli/cmds/mark_for_deployment.py#L305&#34;&gt;here&lt;/a&gt;&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By giving a code hint, you give the illusion of familiarity, and allow the
mentee to focus on the problem itself.&lt;/p&gt;
&lt;p&gt;Giving mentees &amp;ldquo;stretch goals&amp;rdquo; or &amp;ldquo;extra credit&amp;rdquo; is another way of giving them
room to show off, gain confidence, and in general give them a chance to impress
you. You can encourage this in tickets as well:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;BUG - Off by one error in the pagination code &amp;hellip;. Code hint: &amp;hellip; Extra
Credit: replace the custom pagination code with a library to solve this class
of bug permanently.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Don&amp;rsquo;t forget to praise them for going the extra mile. I frequently do this at
standup when a ticket is closed or referenced:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Great job by the way on fixing that bug. That was a hard one, and you are
going to make a small but important class of users a lot less frustrated with
our product&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Great job on finally closing that ticket. I know that was a tough one but
you stuck with it to the end. I could tell you spent a lot of brainpower
figuring that out, so thank you.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Don&amp;rsquo;t let that kind of effort go unacknowledged. Share in their successes,
mourn with them in their defeats.&lt;/p&gt;
&lt;h2 id=&#34;be-a-context-sharing-machine&#34;&gt;Be a Context-Sharing-Machine&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Who to &amp;ldquo;be&amp;rdquo;: A Manager?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Although I am not a manager, I do have 1:1s with others, including anyone I&amp;rsquo;m
mentoring. This is a dedicated time for them to bring up things that they are
concerned about, or proud of, or confused about.&lt;/p&gt;
&lt;p&gt;But really, I use this time to reinforce all the things that I do during the
non-1:1 time, but in a private and powerful setting. Words you say in a 1:1 can
mean a lot, no matter how many years of experience they have under their belt.&lt;/p&gt;
&lt;p&gt;It is all the same stuff, just repeating yourself and reinforcing things.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reminding them that they are doing a good job, and that you notice their work.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;You are doing a great job on this sprint. Thanks for chiming in on that code
review, you didn&amp;rsquo;t have to do that but you had insightful commentary. You are
really beginning to spread your &amp;ldquo;Ruby Wings&amp;rdquo; on this Rails codebase, it&amp;rsquo;s
cool.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Challenging them to do better&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Your recent code has been fine, but your code coverage has been spotty. I
want you to really focus on writing tests this next week. I know you are
capable and I think it will stretch you as a software engineer.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Sharing business context that would be hard to see&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Since you started working here, you really have accelerated our Ruby-&amp;gt;Golang
migration in a big way. I know it may seem like you are not making new
features or anything, but you are actually helping us make progress on a long
term business goal of significantly increasing the speed of the site. We
think that making the site faster overall will give us an advantage over our
competitors. So keep that in mind as you push this migration.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Sharing engineering context&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Thanks for finishing off that last Docker migration ticket. Believe it or
not, that represents a year long effort to get everything into Docker, and we
are now in that glorious future thanks to you and thanks to the Docker
expertise you brought with you.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;That is a lot of words.&lt;/p&gt;
&lt;p&gt;The key here is being the right person and letting the actions come naturally.&lt;/p&gt;
&lt;p&gt;There is no &amp;ldquo;simple&amp;rdquo; solution. There is no checklist or onboarding walkthrough
that magically makes this happen. It takes an investment of emotional energy to
be a great mentor. Hopefully that investment is rewarded in the long run, but
that is only a nice to have.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Sutro Tower Vinyl Art</title>
      <link>/Sutro-Tower-Vinyl-Art/</link>
      <pubDate>Fri, 05 Oct 2018 19:35:56 +0000</pubDate>
      <guid>/Sutro-Tower-Vinyl-Art/</guid>
      <description>&lt;p&gt;I recently finished a project to make a vinyl mural of Sutro tower:&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;source code&amp;rdquo; of this project is on &lt;a href=&#34;https://github.com/solarkennedy/sutro-tower-vinyl&#34;&gt;github&lt;/a&gt; and is in the public domain.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Cross-Country Motorcycle Road Trip 2018</title>
      <link>/Cross-Country-Motorcycle-Road-Trip-2018/</link>
      <pubDate>Mon, 18 Jun 2018 07:48:18 +0000</pubDate>
      <guid>/Cross-Country-Motorcycle-Road-Trip-2018/</guid>
      <description>&lt;p&gt;I have finished a month long road trip &lt;a href=&#34;https://trips.furkot.com/ts/GnKQVl&#34;&gt;totaling 8741 miles&lt;/a&gt;:
&lt;figure&gt;&lt;a href=&#34;https://trips.furkot.com/ts/GnKQVl&#34;&gt;
    &lt;img src=&#34;../../uploads/2018-06-18-motorcycle-road-trip-2018/roadtrip%20map.png&#34; width=&#34;100%&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;I rode a &lt;a href=&#34;https://en.wikipedia.org/wiki/Kawasaki_Ninja_300&#34;&gt;2014 Kawasaki Ninja 300&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;a href=&#34;../../uploads/2018-06-18-motorcycle-road-trip-2018/IMG_20180608_173903.jpg&#34;&gt;
    &lt;img src=&#34;../../uploads/2018-06-18-motorcycle-road-trip-2018/IMG_20180608_173903.jpg&#34; width=&#34;100%&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;a href=&#34;../../uploads/2018-06-18-motorcycle-road-trip-2018/IMG_20180611_115633-EFFECTS.jpg&#34;&gt;
    &lt;img src=&#34;../../uploads/2018-06-18-motorcycle-road-trip-2018/IMG_20180611_115633-EFFECTS.jpg&#34; width=&#34;100%&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    <item>
      <title>The Evolution of Distributed Systems Management</title>
      <link>/The-Evolution-of-Distributed-Systems-Management/</link>
      <pubDate>Fri, 23 Feb 2018 07:48:18 +0000</pubDate>
      <guid>/The-Evolution-of-Distributed-Systems-Management/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s survey the past and present of how we manage distributed systems, and
then maybe try to predict the future.&lt;/p&gt;
&lt;p&gt;For this survey I&amp;rsquo;ll look at a few open-source technologies to give concrete
examples (in &lt;a href=&#34;https://en.wikipedia.org/wiki/Kardashev_scale&#34;&gt;Kardashev style&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#type-0-manually-deployed-and-configured&#34;&gt;Type 0: Manually Deployed and Configured&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type-1-host-centric-configuration-management&#34;&gt;Type 1: Host-Centric Configuration Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type-2a-infrastructure-scoped-orchestration-tooling&#34;&gt;Type 2A: Infrastructure-scoped Orchestration Tooling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type-2b-application-specific-orchestration-tooling&#34;&gt;Type 2B: Application-specific Orchestration Tooling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type-3-compute-platform-native-application-specific-frameworks&#34;&gt;Type 3: Compute-Platform-Native Application-Specific Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#type-3a-mesos-frameworks&#34;&gt;Type 3A: Mesos Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#type-3b-kubernetes-k8s-operators&#34;&gt;Type 3B: Kubernetes (k8s) Operators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#type-4-hybrid&#34;&gt;Type 4: Hybrid?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;type-0-manually-deployed-and-configured&#34;&gt;Type 0: Manually Deployed and Configured&lt;/h2&gt;
&lt;figure&gt;
    &lt;img src=&#34;../../uploads/distributed-systems-management/mysql-manual.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;MySQL is a great example of a distributed system (when setup in Master/Slave
configuration) that is designed to be installed and configured by humans. The
configuration files are human-friendly ini-style. The runtime orchestration is
established via commands (statements) in the MySQL shell.&lt;/p&gt;
&lt;p&gt;This doesn&amp;rsquo;t mean that the software &lt;em&gt;can&amp;rsquo;t&lt;/em&gt; be automated. I&amp;rsquo;ll discuss what
MySQL looks like when it is automated at different levels further down in the
blog post. I might call the &amp;ldquo;scripting&amp;rdquo; of MySQL orchestration &amp;ldquo;Type 0.5&amp;rdquo;-style
orchestration. There are a
&lt;a href=&#34;https://github.com/thomasvs/mysql-replication-start/blob/master/mysql-replication-start.sh&#34;&gt;few&lt;/a&gt;
&lt;a href=&#34;http://blog.ditullio.fr/2016/04/30/initialize-mysql-master-slave-replication-script/&#34;&gt;examples&lt;/a&gt;
of what this looks like.&lt;/p&gt;
&lt;p&gt;There isn&amp;rsquo;t much to say about Type 0 automation. It is characterized by the
&lt;strong&gt;lack&lt;/strong&gt; of built-in automation facilities and cumbersome/brittle
integrations with external automation systems.&lt;/p&gt;
&lt;p&gt;Other systems that are designed to be manually deployed and configured by humans
(links to documentation representative of manual configuration):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Classic network switches &lt;a href=&#34;https://www.cisco.com/c/en/us/td/docs/ios/12_2/ip/configuration/guide/fipr_c/1cfrip.html#wp1001030&#34;&gt;(Cisco IOS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-configure-redis-replication-on-ubuntu-16-04&#34;&gt;Classic Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zookeeper.apache.org/doc/r3.1.2/zookeeperStarted.html&#34;&gt;Zookeeper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It starts getting interesting when engineers take these systems and build
orchestration tooling around them. I predict that we&amp;rsquo;ll continue to see more
and more systems being build with automation in mind from the start, leading to
very different interface and configuration design decisions.&lt;/p&gt;
&lt;h2 id=&#34;type-1-host-centric-configuration-management&#34;&gt;Type 1: Host-Centric Configuration Management&lt;/h2&gt;
&lt;figure&gt;
    &lt;img src=&#34;../../uploads/distributed-systems-management/type1.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;I characterize &amp;ldquo;Type 1&amp;rdquo; distributed systems management as an
application-agnostic system that is &amp;ldquo;host-centric.&amp;rdquo; These tools can &amp;ldquo;configure
anything&amp;rdquo; and runs &amp;ldquo;on a host&amp;rdquo;. One might call these &amp;ldquo;classic configuration
management tools.&amp;rdquo; Tools like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Puppet&lt;/li&gt;
&lt;li&gt;Chef&lt;/li&gt;
&lt;li&gt;Ansible&lt;/li&gt;
&lt;li&gt;Salt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These tools do have the flexibility to be extended to support different
applications, but lack the ability to orchestrate an action &amp;ldquo;across a cluster&amp;rdquo;
in a good way. Here are some examples of this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://txt.fliglio.com/2015/12/mysql-replication-with-puppet/&#34;&gt;Using Puppet to setup MySQL replication &amp;ldquo;mostly&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/latest/redis_module.html&#34;&gt;Ansible native Redis configuration using static master/slave ip addresses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rapid7/chef-etcd#using-the-aws-discovery-method&#34;&gt;Etcd Chef Cookbook that runs on hosts, but must use external state (etcd/dns/ec2 tags) to coordinate the bootstrap process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forge.puppet.com/autostructure/kubernetes/tasks#task_kubeadm_join&#34;&gt;Kubernetes module that uses &amp;lsquo;puppet tasks&amp;rsquo; to do adhoc orchistration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These types of tools are very mature now, but they still operate at the &amp;ldquo;host&amp;rdquo;
level and don&amp;rsquo;t really have the capability to do &amp;ldquo;cluster-wide&amp;rdquo; operations like
&amp;ldquo;promote a new mysql master&amp;rdquo; or &amp;ldquo;replace a cassandra node&amp;rdquo;. They mostly assume
that the host in question already exists, and leave the provisioning and
de-provisioning of servers up to another tool (knife, etc).&lt;/p&gt;
&lt;p&gt;I predict that Type 1 tools will continue to lose relevance in a world where
Type 3 tools exist, and as the industry as a whole learns to look beyond &amp;ldquo;the
single node&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;type-2a-infrastructure-scoped-orchestration-tooling&#34;&gt;Type 2A: Infrastructure-scoped Orchestration Tooling&lt;/h2&gt;
&lt;figure&gt;
    &lt;img src=&#34;../../uploads/distributed-systems-management/type2a.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;Type 2A distributed system management tools can operate beyond a single node,
but are still general-purpose tools that have the capability to be extended to
support a variety of distributed systems. This usually involves some sort of
domain specific language (DSL).&lt;/p&gt;
&lt;p&gt;Here are some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.terraform.io/&#34;&gt;Hashicorp Terraform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/cloudformation/&#34;&gt;CloudFormation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.openstack.org/heat/latest/&#34;&gt;OpenStack Heat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bosh.io/&#34;&gt;Bosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cloudify.co/4.2.0/intro/what-is-cloudify/&#34;&gt;Cloudify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sparkleformation.io/&#34;&gt;SparkleFormation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They key attribute to these tools is their tight integration with the
underlying infrastructure APIs. This makes them well suited for general purpose
infrastructure as well as deploying distributed systems.&lt;/p&gt;
&lt;p&gt;Because they lack tight cohesion with the actual distributed systems they might
be deploying, really advanced distributed system orchestration is not really
possible. Here are some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://maxenglander.com/2015/06/09/etcd-clusters-with-terraform.html&#34;&gt;Deploying Etcd clusters on Terraform&lt;/a&gt; is straightforward, but scaling them is awkward&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mbabineau/cloudformation-zookeeper&#34;&gt;A Zookeeper cluster deployed via Cloudformation&lt;/a&gt; still requires another tool (Exhibitor) to manage Zookeeper itself&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forums.aws.amazon.com/thread.jspa?threadID=223736&#34;&gt;There is no such thing as CloudFormation Modules&lt;/a&gt; (not a very good example)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A reader might be wondering why I would even expect such tools to have such
functionality. After all, these Type 2A tools are &amp;ldquo;infrastructure oriented&amp;rdquo;,
not &amp;ldquo;distributed-systems oriented.&amp;rdquo; But if Type 2A tools are not quite
sufficient for fully managing distributed systems for us, then what is?&lt;/p&gt;
&lt;h2 id=&#34;type-2b-application-specific-orchestration-tooling&#34;&gt;Type 2B: Application-specific Orchestration Tooling&lt;/h2&gt;
&lt;figure&gt;
    &lt;img src=&#34;../../uploads/distributed-systems-management/type2b.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;Type 2B Tools are the counterparts of 2A. They are very &amp;ldquo;application-aware&amp;rdquo; and
are not general purpose infrastructure tools. They rarely have the ability to
launch raw infrastructure themselves, and often still require &amp;ldquo;Type 1&amp;rdquo; tools to
get them going.&lt;/p&gt;
&lt;p&gt;Here are some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL via Youtube&amp;rsquo;s &lt;a href=&#34;http://vitess.io/&#34;&gt;Vitess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MySQL via Github&amp;rsquo;s &lt;a href=&#34;https://github.com/github/orchestrator&#34;&gt;Orchestrator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CloudFoundary via Pivotal&amp;rsquo;s &lt;a href=&#34;https://github.com/cloudfoundry/cf-deployment&#34;&gt;cf-deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spinaker via &lt;a href=&#34;https://github.com/spinnaker/halyard#halyard&#34;&gt;Halyard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cassandra via &lt;a href=&#34;https://github.com/Netflix/Priam&#34;&gt;Netflix&amp;rsquo;s Priam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cassandra (DataStax Enterprise) via &lt;a href=&#34;https://docs.datastax.com/en/latest-opsc/index.html&#34;&gt;DataStax OpsCenter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Redis via &lt;a href=&#34;https://redis.io/topics/sentinel&#34;&gt;Redis-Sentinel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The nice thing about this class of tools is how &amp;ldquo;smart&amp;rdquo; they are about the
application they are managing. Sometimes they are even written by the same
entity that creates the distributed system it manages.&lt;/p&gt;
&lt;p&gt;Some of them run continuously, supervising the distributed system in a tight
reconciliation loop. Contrast this to Type 2A tools, which do not operate like
this and usually run in a &amp;ldquo;one-shot&amp;rdquo; fashion.&lt;/p&gt;
&lt;p&gt;I predict this class of tooling will remain relevant to orchestrate the current
generation of distributed systems in a platform-agnostic way, but eventually
will give way to Type 3 tools.&lt;/p&gt;
&lt;h2 id=&#34;type-3-compute-platform-native-application-specific-frameworks&#34;&gt;Type 3: Compute-Platform-Native Application-Specific Frameworks&lt;/h2&gt;
&lt;figure&gt;
    &lt;img src=&#34;../../uploads/distributed-systems-management/type3.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;Type 3 tools are Application-specific, like 2B. But they sorta look like type
2A tools because they are empowered to launch and destroy actual
&amp;ldquo;infrastructure&amp;rdquo; (docker containers). This is because they are built upon a
different class of infrastructure abstraction that is currently being met in
the industry by a small subset of tools, namely Mesos and Kubernetes (k8s).&lt;/p&gt;
&lt;p&gt;Another distinguishing feature of Type 3 tools is that they must &lt;strong&gt;run
continously&lt;/strong&gt;. They must run continuously supervise the distributed-system
itself. The tool must be able to respond to changes in health state. They often
have ways of orchestrating changes across the cluster (like upgrades).&lt;/p&gt;
&lt;p&gt;Unlike many other classes of tools, Type 3 tools are tightly coupled to either
Mesos &lt;strong&gt;or&lt;/strong&gt; k8s. I have yet to see a &amp;ldquo;platform-agnostic&amp;rdquo; tool that can be a Mesos
framework &lt;strong&gt;and&lt;/strong&gt; k8s operator (contrast to Type 2A tools that often have
multiple &amp;ldquo;providers&amp;rdquo; for deploying to different &amp;ldquo;clouds&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;I think this is likely the case for a few reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;These types of tools are very new&lt;/li&gt;
&lt;li&gt;While there is no &amp;ldquo;native&amp;rdquo; language for either Mesos or k8s, the large
production Mesos frameworks are Java/Scala and most k8s operators are in
golang.&lt;/li&gt;
&lt;li&gt;The Mesos/k8s &amp;ldquo;apis&amp;rdquo; and primitives are very different, unlike the &amp;ldquo;compute
instance&amp;rdquo; primitives that AWS and GCE provide, making it difficult to build a
common tool.&lt;/li&gt;
&lt;li&gt;In order to write a Mesos Framework or k8s operator, you need to be an expert
in Mesos/k8s &lt;strong&gt;and&lt;/strong&gt; fully understand how to manage the distributed system
the framework/operator is trying to run. This is unlike Type 1 (config
management) tools, where you only need to know a little bit of puppet to
write a puppet module. The barrier to entry is higher.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They are so different that I&amp;rsquo;m going to split them up and talk about them
(Mesos/k8s) separately. Time will tell if there is room in the industry to have
Mesos and k8s &lt;strong&gt;and&lt;/strong&gt; any more than that. I predict that the difficulty in
building high-quality Type 3 (Application-specific orchestrators) is so high
that we &lt;strong&gt;won&amp;rsquo;t&lt;/strong&gt; splinter into many community-provided modules like we&amp;rsquo;ve seen in
Type 1 (classic configuration management) tools where everyone makes their own
&amp;ldquo;Apache&amp;rdquo; module.&lt;/p&gt;
&lt;h3 id=&#34;type-3a-mesos-frameworks&#34;&gt;Type 3A: Mesos Frameworks&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://mesos.apache.org/documentation/latest/frameworks/&#34;&gt;Mesos Frameworks&lt;/a&gt;
are application-specific distributed-systems orchestration tools. While they
are &amp;ldquo;easy to write in any language&amp;rdquo;, they are hard to write &lt;strong&gt;well&lt;/strong&gt;, and only a
few dozen open-source production-ready frameworks exist. Here is the
&lt;a href=&#34;https://gist.github.com/solarkennedy/b60cb708c9ffbffe000530f4428bfa4a&#34;&gt;list&lt;/a&gt;
of those that are available on the
&lt;a href=&#34;https://universe.dcos.io/#/packages&#34;&gt;DC/OS Universe&lt;/a&gt; (note: many of the packages
on the DC/OS Universe are standalone applications that run on Marathon and are
not Mesos Frameworks, and don&amp;rsquo;t need to be).&lt;/p&gt;
&lt;p&gt;DC/OS created by Mesosphere, is kinda like a &amp;ldquo;Mesos Distribution&amp;rdquo; which
includes Mesos, a fancy installer, a basic process runner (Marathon) and a
package manager, akin to a Linux distribution.&lt;/p&gt;
&lt;p&gt;Mesos is sometimes described as &amp;ldquo;a distributed systems kernel&amp;rdquo;. I like this
description, although it is sometimes hard for new users to wrap their head
around it. It does give Mesos framework authors some of the lowest-level primitives
needed to write a distributed system. Things a framework can/must do are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Accept offers from Mesos and launch a task&lt;/li&gt;
&lt;li&gt;Kill tasks&lt;/li&gt;
&lt;li&gt;Respond to status updates from Mesos regarding existing tasks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally DC/OS gives frameworks additional facilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Service discovery (via Mesos DNS)&lt;/li&gt;
&lt;li&gt;Config state storage (via Zookeeper)&lt;/li&gt;
&lt;li&gt;Secret management (via the DC/OS Secret API)&lt;/li&gt;
&lt;li&gt;Framework process supervision (via Marathon)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Only the Mesos users with large engineering organizations can devote effort
into developing custom Mesos frameworks. Here are some examples (none of which
are currently open source):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Netflix&amp;rsquo;s &lt;a href=&#34;https://medium.com/netflix-techblog/the-evolution-of-container-usage-at-netflix-3abfc096781b&#34;&gt;Titus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Uber&amp;rsquo;s &lt;a href=&#34;https://www.youtube.com/watch?v=Ktc3GjshHcc&#34;&gt;Peleton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Apple&amp;rsquo;s &lt;a href=&#34;https://www.infoq.com/news/2015/05/mesos-powers-apple-siri&#34;&gt;JARVIS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Yelp&amp;rsquo;s &lt;a href=&#34;https://engineeringblog.yelp.com/2017/04/how-yelp-runs-millions-of-tests-every-day.html&#34;&gt;Seagull&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But most companies should not need to build their own bespoke Mesos
frameworks. Do most companies need Type 3 tools at all?&lt;/p&gt;
&lt;p&gt;They do, because most companies &lt;strong&gt;do&lt;/strong&gt; run &lt;em&gt;open-source&lt;/em&gt; distributed systems,
but often lack the advanced automation to orchestrate them. The current status
quo is that only experts in those distributed systems handle the orchestration
of them. Without advanced orchestration, risky MySQL maneuvers are left up to a
DBA. Cassandra maintenance needs to be done &amp;ldquo;very carefully&amp;rdquo;. You basically
don&amp;rsquo;t change a Zookeeper topology once it is up.&lt;/p&gt;
&lt;p&gt;The space of Type 3A tools for open-source distributed-systems just starting.
Here are a few examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mesosphere/cassandra-mesos-deprecated&#34;&gt;Cassandra on Mesos&lt;/a&gt; (Deprecated)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://incubator.apache.org/projects/cotton.html&#34;&gt;Apache Cotton (MySQL on Mesos&lt;/a&gt; (Retied)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mesos/kafka&#34;&gt;Kafka on Mesos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mesos/elasticsearch&#34;&gt;Elasticsearch on Mesos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But active development is mostly on the
&lt;a href=&#34;https://github.com/mesosphere/dcos-commons/tree/master/frameworks&#34;&gt;dcos-commons versions of these frameworks&lt;/a&gt;.
Why? I think it is because of the difficulty of writing high-quality
production-ready Mesos frameworks. Mesosphere (the company behind DC/OS)
notices this, and has a financial incentive to build these high-quality
frameworks. Therefore, they build up a toolkit (the dcos-commons library) and
do it themselves.&lt;/p&gt;
&lt;p&gt;I do think we are in the right space (Type 3) for these problems to be solved.
I (personally) think the abstractions that Mesos provides are quite enough to
build &amp;ldquo;rich&amp;rdquo; distributed systems. I also think that the Mesos
&lt;a href=&#34;http://mesos.apache.org/documentation/latest/architecture/&#34;&gt;Offer Model&lt;/a&gt; is a bit
awkward to use (but that is maybe for another blog post).&lt;/p&gt;
&lt;p&gt;My prediction is that Mesosphere will end up writing the majority of the
production-ready frameworks. I think this will lead to the authors of the
open-source distributed-systems to not &amp;ldquo;Own&amp;rdquo; the framework itself. I think
ideally the Kafka community (or Confluent) should build and maintain the
framework that manages Kafka. I think ideally the Cassandra community (or
Datastax) should build and maintain the Cassandra framework. I really do think
that these frameworks work best when they are built and designed by the same
authors of the distributed-system itself. I predict this situation will lead to
substandard user experience, which will push users to Type 3B&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;type-3b-kubernetes-k8s-operators&#34;&gt;Type 3B: Kubernetes (k8s) Operators&lt;/h3&gt;
&lt;p&gt;Kubernetes Operators are similar to Mesos Frameworks. They also run
continuously and are application-specific. They know how to handle upgrades or
recover from failures. They run in a tight reconciliation loop, always trying
to keep a system healthy.&lt;/p&gt;
&lt;p&gt;Here are some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://coreos.com/blog/introducing-the-etcd-operator.html&#34;&gt;Etcd Operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/upmc-enterprises/elasticsearch-operator&#34;&gt;Elasticsearch Operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://info.crunchydata.com/blog/postgres-operator-for-kubernetes&#34;&gt;Postgres Operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;There are a &lt;a href=&#34;https://github.com/ramitsurana/awesome-kubernetes#operators&#34;&gt;dozen or so notable ones&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are far fewer k8s operators than Mesos frameworks today. I believe that is
the case today because Mesos has headstart of a few years, and k8s
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.9/#customresourcedefinition-v1beta1-apiextensions&#34;&gt;Custom Resource Definitions&lt;/a&gt;
(one of the better core primitives in k8s to create operators) is still in beta.
I think Custom Resource Definitions (CRDs) are going to be the best way that
users will interact with custom k8s operators.&lt;/p&gt;
&lt;p&gt;What is the difference between a k8s operator and a Mesos framework? Let&amp;rsquo;s
start with what k8s offers as a platform to operator-writers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You get your own custom namespaced REST endpoint in the k8s api (by applying
a yaml file, no rebuild of k8s required), hosted by the k8s api server itself&lt;/li&gt;
&lt;li&gt;Users of operators treat custom objects just like any other object in k8s;
launching a new &amp;ldquo;database&amp;rdquo; has the same workflow as launching a &amp;ldquo;pod&amp;rdquo; (via
kubectl create)&lt;/li&gt;
&lt;li&gt;Operators (using golang) get nice boilerplate
&lt;a href=&#34;https://github.com/kubernetes/client-go&#34;&gt;client code&lt;/a&gt; to be able to sync and cache
etcd state and batch up calls to the k8s api (similar to Mesos&amp;rsquo; task
reconciliation behavior)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The surface area of what you have to write for a k8s operator is much smaller
than a Mesos framework. Additionally, users who use the k8s operator &amp;ldquo;feel&amp;rdquo;
like they are &amp;ldquo;just interacting with k8s&amp;rdquo;, because in a sense they are! The k8s
operator is just responding to etcd events and posting back to the k8s api in a
particular way. I think the model is better for both k8s operator writers and
users. Combine this with helm charts and I think you have a very good starting
point for building a powerful platform for managing and orchestrating
distributed systems.&lt;/p&gt;
&lt;p&gt;I predict a few things will happen in the next 5 years:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;k8s will become the dominant infrastructure toolkit/framework/thingy&lt;/li&gt;
&lt;li&gt;k8s operators, using CRDs, will be written, and eventually be &amp;ldquo;first party&amp;rdquo;
platforms for complex distributed systems (the same community that develops
the distributed system will also develop the k8s operator to go with it)&lt;/li&gt;
&lt;li&gt;The k8s configuration &amp;ldquo;language&amp;rdquo; (via CRDs) will be a kind of lingua franca of the
infrastructure world&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;type-4-hybrid&#34;&gt;Type 4: Hybrid?&lt;/h2&gt;
&lt;p&gt;As an industry I think we are still in Type 3 automation land. I think the next
incremental improvement on this type of automation will look like a hybrid of
Type 3 (Mesos frameworks / k8s operators) and Type 2A (Terraform,
Cloudformation, etc).&lt;/p&gt;
&lt;p&gt;Currently, Type 3 tooling is only able to use the compute resources given to
it, or maybe an external autoscaler can watch the cluster as a whole and scale
up and down. At the risk of separation-of-concerns-blasphemy, I think the next
level of distributed-systems automation will be able to launch and terminate
its &lt;strong&gt;own&lt;/strong&gt; raw compute resources. I would like my
&lt;a href=&#34;https://github.com/kubeflow/tf-operator&#34;&gt;Tensorflow k8s operator&lt;/a&gt;
to launch GPU instances if it needs to. I would like my
&lt;a href=&#34;https://github.com/apache-spark-on-k8s/kubernetes-HDFS&#34;&gt;HDFS operator&lt;/a&gt; to launch its
own data nodes directly. I would like k8s itself to turn off nodes that it doesn&amp;rsquo;t need.&lt;/p&gt;
&lt;p&gt;Past that, I don&amp;rsquo;t have an imagination good enough to imagine what might be beyond.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;mailto:kyle@xkyle.com&#34;&gt;Email me&lt;/a&gt; or make a
&lt;a href=&#34;https://github.com/solarkennedy/xkyle.com&#34;&gt;pull request&lt;/a&gt; if you have comments or corrections.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Adding Electric Motors to a Gemini 105m</title>
      <link>/Adding-Electric-Motors-to-a-Gemini-105m/</link>
      <pubDate>Sat, 10 Feb 2018 14:27:46 +0000</pubDate>
      <guid>/Adding-Electric-Motors-to-a-Gemini-105m/</guid>
      <description>&lt;p&gt;I recently added a pair of electric motors to my Gemini 105m catamaran.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;../../uploads/gemini_motors/IMG_20171113_132548.jpg&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;Haul out&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Although I don&amp;rsquo;t have any photos of the actual installation, here is what they look like:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
    &lt;img src=&#34;../../uploads/gemini_motors/IMG_20171118_104642.jpg&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;motors&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&#34;../../uploads/gemini_motors/IMG_20180210_111009.jpg&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;wake&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;These are a pair of &lt;a href=&#34;https://www.amazon.com/Caroute-S400-48V-Electric-controller-Saltwater/dp/B01FXDNXF2/ref=as_li_ss_tl?ie=UTF8&amp;amp;linkCode=ll1&amp;amp;tag=&amp;amp;linkId=5dab3bd757917b2e68c878ccf6256df6&#34;&gt;Caroutte S400&amp;rsquo;s&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In theory they have a thrust of 180lbs each and a peak power consumption of
2.7kw each. Although it cannot be directly compared, the onboard diesel is a
20kw (27 Horsepower) engine. With both engine there are many different
variables like transmission losses, propeller losses, etc. You just can&amp;rsquo;t
compare these directly with specs alone. The pair of electric motors cost about
$3k.&lt;/p&gt;
&lt;p&gt;How well do they actually perform? I would rate it as OK considering what they
are. With a 10 ton sail boat, I did not expect these motors to push this thing
more than a couple of knots. Honestly if they were powerful enough to maneuver
out of the marina and into the bay, I would be happy.&lt;/p&gt;
&lt;p&gt;Here are two videos of them in action:&lt;/p&gt;
&lt;p&gt;{% youtube XHEj2dpfv4w %}
{% youtube 4atrG6PSb0o %}&lt;/p&gt;
&lt;p&gt;Unfortunately they are mounted too high, and will suck in air if I attempt to
run them at full throttle. I&amp;rsquo;ll try to figure out how I can get them to go
lower into the water.&lt;/p&gt;
&lt;p&gt;While they can be controlled &amp;ldquo;tank style&amp;rdquo;, I found that the actual
maneuverability of the two electric motors is worse compared to the vectored
thrust of the drive leg of the diesel.&lt;/p&gt;
&lt;p&gt;The power from the system comes from two large &lt;a href=&#34;https://www.wholesalesolar.com/1941905/panasonic/solar-panels/panasonic-330-watt-module-96-cell-hit-black-solar-panel&#34;&gt;330 watt solar panels&lt;/a&gt;.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;../../uploads/gemini_motors/IMG_20180210_125713.jpg&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;Two 330 Watt solar panels&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Which run through a large 60 amp, 48 volt &lt;a href=&#34;https://www.amazon.com/gp/product/B01DCU4M0S/ref=as_li_ss_tl?ie=UTF8&amp;amp;psc=1&amp;amp;linkCode=ll1&amp;amp;tag=kyleanderson-20&amp;amp;linkId=453ab4024fcf0692ffe75bd22af4e207&#34;&gt;charge controller&lt;/a&gt;.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;../../uploads/gemini_motors/IMG_20180210_122236.jpg&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;Solar charge controller&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Which charge four 75amphour deep cycle batteries:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
    &lt;img src=&#34;../../uploads/gemini_motors/IMG_20180210_122553.jpg&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;batteries&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&#34;../../uploads/gemini_motors/IMG_20180210_123143.jpg&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;batteries&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;The batteries are certainly the weakest part of the system, but they were on hand (came with the boat). The batteries were half discharged after an hour of 3 knot motoring. In summary:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The pair of electric motors is powerful and inexpensive considering the alternatives&lt;/li&gt;
&lt;li&gt;The pair of solar panels is as large as I think it can be for this boat&lt;/li&gt;
&lt;li&gt;The charge controller is overkill, but high quality&lt;/li&gt;
&lt;li&gt;The batteries are under-sized for this system&lt;/li&gt;
&lt;li&gt;~3 knots is pretty good for sun-powered propulsion&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Another Comparison of Image to ASCII Conversion Tools (2017)</title>
      <link>/Another-Comparison-of-Image-to-ASCII-Conversion-Tools-2017/</link>
      <pubDate>Sat, 25 Nov 2017 19:35:56 +0000</pubDate>
      <guid>/Another-Comparison-of-Image-to-ASCII-Conversion-Tools-2017/</guid>
      <description>&lt;p&gt;Time for another round of terminal-based ascii/ansi art image conversion
tools. Check out my &lt;a href=&#34;./a-comparison-of-image-to-ascii-conversion-tools/&#34;&gt;last post from 2015&lt;/a&gt;
with more comparisons of more tools.&lt;/p&gt;
&lt;p&gt;This year I compare the best tool from 2015, img2xterm, against
a new set of tools that I&amp;rsquo;ve stumbled across. &lt;a href=&#34;mailto:kyle@xkyle.com&#34;&gt;email me&lt;/a&gt;
with other tools if you would like to be included in the &lt;em&gt;next&lt;/em&gt; round.&lt;/p&gt;
&lt;h2 id=&#34;methodology&#34;&gt;Methodology&lt;/h2&gt;
&lt;p&gt;For these tests I used an image with a 160px width, twice that of
a standard terminal. Then I &lt;code&gt;cat&lt;/code&gt;&#39;d the image in plain xterm and
took a screenshot of the results.&lt;/p&gt;
&lt;p&gt;The original has been scaled up (6X) to be the same relative size as
the resulting screenshots.&lt;/p&gt;
&lt;p&gt;My entire methodology is on &lt;a href=&#34;https://github.com/solarkennedy/ascii-art-converter-comparison&#34;&gt;github&lt;/a&gt;
if you wish to see exactly how I made these images. In theory
it is 100% reproducible from &lt;code&gt;make&lt;/code&gt;. (assuming on a linux desktop)&lt;/p&gt;
&lt;h2 id=&#34;tools-compared&#34;&gt;Tools Compared&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rossy/img2xterm&#34;&gt;img2xterm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jD91mZM2/termplay&#34;&gt;termplay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/stefanhaustein/TerminalImageViewer&#34;&gt;TerminalImageViewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/eliukblau/pixterm&#34;&gt;pixterm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hzeller/timg&#34;&gt;timg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;results&#34;&gt;Results&lt;/h2&gt;
&lt;h2 id=&#34;benderpng&#34;&gt;bender.png&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../../uploads/bender.original.png&#34; alt=&#34;bender.png converted using original&#34; title=&#34;bender.png converted using original&#34;&gt;
&lt;img src=&#34;../../uploads/bender.img2xterm.png&#34; alt=&#34;bender.png converted using img2xterm&#34; title=&#34;bender.png converted using img2xterm&#34;&gt;
&lt;img src=&#34;../../uploads/bender.termplay.png&#34; alt=&#34;bender.png converted using termplay&#34; title=&#34;bender.png converted using termplay&#34;&gt;
&lt;img src=&#34;../../uploads/bender.TerminalImageViewer.png&#34; alt=&#34;bender.png converted using TerminalImageViewer&#34; title=&#34;bender.png converted using TerminalImageViewer&#34;&gt;
&lt;img src=&#34;../../uploads/bender.pixterm.png&#34; alt=&#34;bender.png converted using pixterm&#34; title=&#34;bender.png converted using pixterm&#34;&gt;
&lt;img src=&#34;../../uploads/bender.timg.png&#34; alt=&#34;bender.png converted using timg&#34; title=&#34;bender.png converted using timg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;lennapng&#34;&gt;lenna.png&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../../uploads/lenna.original.png&#34; alt=&#34;lenna.png converted using original&#34; title=&#34;lenna.png converted using original&#34;&gt;
&lt;img src=&#34;../../uploads/lenna.img2xterm.png&#34; alt=&#34;lenna.png converted using img2xterm&#34; title=&#34;lenna.png converted using img2xterm&#34;&gt;
&lt;img src=&#34;../../uploads/lenna.termplay.png&#34; alt=&#34;lenna.png converted using termplay&#34; title=&#34;lenna.png converted using termplay&#34;&gt;
&lt;img src=&#34;../../uploads/lenna.TerminalImageViewer.png&#34; alt=&#34;lenna.png converted using TerminalImageViewer&#34; title=&#34;lenna.png converted using TerminalImageViewer&#34;&gt;
&lt;img src=&#34;../../uploads/lenna.pixterm.png&#34; alt=&#34;lenna.png converted using pixterm&#34; title=&#34;lenna.png converted using pixterm&#34;&gt;
&lt;img src=&#34;../../uploads/lenna.timg.png&#34; alt=&#34;lenna.png converted using timg&#34; title=&#34;lenna.png converted using timg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;nyanpng&#34;&gt;nyan.png&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../../uploads/nyan.original.png&#34; alt=&#34;nyan.png converted using original&#34; title=&#34;nyan.png converted using original&#34;&gt;
&lt;img src=&#34;../../uploads/nyan.img2xterm.png&#34; alt=&#34;nyan.png converted using img2xterm&#34; title=&#34;nyan.png converted using img2xterm&#34;&gt;
&lt;img src=&#34;../../uploads/nyan.termplay.png&#34; alt=&#34;nyan.png converted using termplay&#34; title=&#34;nyan.png converted using termplay&#34;&gt;
&lt;img src=&#34;../../uploads/nyan.TerminalImageViewer.png&#34; alt=&#34;nyan.png converted using TerminalImageViewer&#34; title=&#34;nyan.png converted using TerminalImageViewer&#34;&gt;
&lt;img src=&#34;../../uploads/nyan.pixterm.png&#34; alt=&#34;nyan.png converted using pixterm&#34; title=&#34;nyan.png converted using pixterm&#34;&gt;
&lt;img src=&#34;../../uploads/nyan.timg.png&#34; alt=&#34;nyan.png converted using timg&#34; title=&#34;nyan.png converted using timg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/rossy/img2xterm&#34;&gt;img2xterm&lt;/a&gt; is the contender from the last
comparison. Compared to this second wave of tools, its lack of 24bit color
shows. It does have the most advanced colorspace conversion capabilities.
If you want true-color, look elsewhere.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jD91mZM2/termplay&#34;&gt;termplay&lt;/a&gt; is a converter written in
Rust, capable of converting static images as well as videos. It has native
youtube-dl support. It also has a unique feature to mirror an X11 window in
real time in the terminal. This converter had the highest performance of all
the tools. It probably has extra performance optimizations in order to support
video. The lack of half-block character support show when put side-by-side with
other converters.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/stefanhaustein/TerminalImageViewer&#34;&gt;TerminalImageViewer&lt;/a&gt; (tiv)
has the unique feature of being able to use many different block formats, more
than the half-block character, to create an interesting output. Look at the
list of &lt;a href=&#34;https://github.com/stefanhaustein/TerminalImageViewer/blob/65ebc0a59e58ba5ba2f3d4dc54ced5e468317277/src/main/java/TerminalImageViewer.java#L248-L345&#34;&gt;unique unicode characters&lt;/a&gt;
available for use. Due to this feature, I had to provide an &lt;strong&gt;upscaled&lt;/strong&gt;
version of the source images in order to produce the the desired output.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/eliukblau/pixterm&#34;&gt;pixterm&lt;/a&gt;&amp;lsquo;s most prominent feature is its
speed. Taking advantage of Go&amp;rsquo;s concurrency features, it can convert images
quickly using all available cores. It can also support a wide range of input
formats.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hzeller/timg&#34;&gt;timg&lt;/a&gt;&amp;lsquo;s unique feature is that it can show
animated gifs directly in the terminal. It can handle true color using the
half-block character for double the vertical resolution.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tool&lt;/th&gt;
&lt;th&gt;Color&lt;/th&gt;
&lt;th&gt;Block Type&lt;/th&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Performance Overall, data&lt;/th&gt;
&lt;th&gt;Extra&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;img2xterm&lt;/td&gt;
&lt;td&gt;256&lt;/td&gt;
&lt;td&gt;Half-Block&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;Medium (20, 13, 11)&lt;/td&gt;
&lt;td&gt;Bash version available&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;termplay&lt;/td&gt;
&lt;td&gt;True or 256&lt;/td&gt;
&lt;td&gt;Single Block&lt;/td&gt;
&lt;td&gt;Rust&lt;/td&gt;
&lt;td&gt;High (6, 5, 4)&lt;/td&gt;
&lt;td&gt;Video support&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TerminalImageViewer&lt;/td&gt;
&lt;td&gt;True or 256&lt;/td&gt;
&lt;td&gt;4x8 Unicode&lt;/td&gt;
&lt;td&gt;C++ and Java&lt;/td&gt;
&lt;td&gt;Low (48, 46, 45)&lt;/td&gt;
&lt;td&gt;Extra unicode characters for multi-pixel matching&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pixterm&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Half-Block&lt;/td&gt;
&lt;td&gt;Go&lt;/td&gt;
&lt;td&gt;Medium (17, 17, 17)&lt;/td&gt;
&lt;td&gt;multi-core processing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timg&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Half-Block&lt;/td&gt;
&lt;td&gt;C++&lt;/td&gt;
&lt;td&gt;High (10, 8, 7)&lt;/td&gt;
&lt;td&gt;Animated gif support&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;(Performance data is real time in ms for rendering bender, lenna, and nyan)&lt;/p&gt;
&lt;h3 id=&#34;winner-terminalimageviewer&#34;&gt;Winner: TerminalImageViewer&lt;/h3&gt;
&lt;p&gt;Even though it has relativly slow performance, its unique unicode rendering can
give the highest &amp;ldquo;resolution&amp;rdquo; images available on a terminal. It does look a
little weird on some images, so I&amp;rsquo;m glad it has the -0 option to force it back
into half-block mode. In this mode it is just as good as pixterm or timg.&lt;/p&gt;
&lt;h3 id=&#34;runner-up-timg&#34;&gt;Runner up: timg&lt;/h3&gt;
&lt;p&gt;With true color and half-block support, timg creates very high quality versions
of images in terminials. Combine this with its high performance and animated
gif support, it is this year&amp;rsquo;s runner up.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Cruising from Port San Luis to San Francisco in a Gemini 105m</title>
      <link>/Cruising-from-Port-San-Luis-to-San-Francisco-in-a-Gemini-105m/</link>
      <pubDate>Sun, 09 Jul 2017 18:55:14 +0000</pubDate>
      <guid>/Cruising-from-Port-San-Luis-to-San-Francisco-in-a-Gemini-105m/</guid>
      <description>&lt;p&gt;Over the last 5 days my wife and I cruised from &lt;a href=&#34;https://en.wikipedia.org/wiki/Avila_Beach,_California&#34;&gt;Port San Luis&lt;/a&gt; to San Francisco.
The total distance was 228 Nautical Miles (nm). We recently purchased the boat
and decided to relocate it to a Marina closer to where we live. We knew the
trip would relatively difficult. The majority of the journey would be against
the wind and waves. For this reason we decided to motor the entire distance
up North.&lt;/p&gt;
&lt;p&gt;Due to technical difficulties, the first ~12 hours of the trip are missing from the GPS track.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;day-1-2017-07-05&#34;&gt;Day 1 (2017-07-05)&lt;/h2&gt;
&lt;p&gt;On the first day we took &lt;a href=&#34;http://www.bart.gov/&#34;&gt;Bart&lt;/a&gt; to
&lt;a href=&#34;http://www.caltrain.com/&#34;&gt;Caltrain&lt;/a&gt; to
&lt;a href=&#34;https://www.amtrak.com/coast-starlight-train&#34;&gt;Amtrack&lt;/a&gt; from San Francisco to
Avila Beach. From there we took the Water Taxi to the boat which was moored on a mooring ball. I made the call for us to leave that night, with me taking the night-shift.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h4 id=&#34;5pm-leave-port-san-luis&#34;&gt;5pm: Leave Port San Luis&lt;/h4&gt;
&lt;p&gt;Off this part of the coast during this time the winds were against us at 16kts
gusting to 21kts.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The seas overnight were not too rough, but the combination of the pounding and the headwind meant we could only sustain 4kts.&lt;/p&gt;
&lt;p&gt;The Gemini pounds the seas pretty badly. This is mostly due to a combination of a solid (not netted) forward deck, a relatively low bridge deck clearance, and the structural nature of a catamaran. Cody got very seasick.&lt;/p&gt;
&lt;h2 id=&#34;day-2-2017-07-06&#34;&gt;Day 2 (2017-07-06)&lt;/h2&gt;
&lt;h4 id=&#34;2am-a-late-night-conversation&#34;&gt;2am: A late night conversation&lt;/h4&gt;
&lt;p&gt;At ~2am I was hailed by a 300ft research vessel heading North towards Portland.
He was showing up on my radar and just called to let me know he was passing on
the port side and should continue on our respective courses. It was nice to
hear from someone in the middle of the night. I had a conversation with him,
and his general advice to avoid the rough seas was to generally hug the coast.
He mentioned the waves don&amp;rsquo;t get too bad until Point Sur.&lt;/p&gt;
&lt;h4 id=&#34;7am-cody-takes-over&#34;&gt;7am: Cody takes over&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;9am-a-snagged-prop&#34;&gt;9am: A snagged prop&lt;/h2&gt;
&lt;p&gt;In the morning we had a prop fouling by a line that
had been pounded out of it&amp;rsquo;s holding bag on the forward part of the deck. It
had found its way under the hull and was just long enough to get the tip of the
line fouled in the prop.&lt;/p&gt;
&lt;p&gt;The Gemini has a raisable drive leg made by &lt;a href=&#34;http://www.sillette.co.uk/sonic_type_2_catamaran_drive.html&#34;&gt;Sillette&lt;/a&gt;:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The drive leg adds complexity to the rig, but does make fixing fouled props
easy. The difficulty here was actually figuring out it was fouled in the first
place. Every time I would raise the leg to inspect it, there was nothing in it.
The line was &lt;em&gt;only&lt;/em&gt; long enough to get in the prop while down and at speed (so
the suction would draw in the line). I had to watch the water carefully and
wait for the line to find its way into the prop to confirm my suspicion about
the cause of the extreme vibration.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h4 id=&#34;3-5pm-point-sur&#34;&gt;3-5pm: Point Sur&lt;/h4&gt;
&lt;p&gt;By the time we hit &lt;a href=&#34;https://www.google.com/maps/place/Point+Sur+Lighthouse,+Monterey,+CA+93940/@36.2401963,-121.920675,8197a,35y,38.12t/data=!3m1!1e3!4m5!3m4!1s0x808d9154d4894371:0x4141b8589a0a31f9!8m2!3d36.3063643!4d-121.9016398&#34;&gt;Point Sur&lt;/a&gt; there was a small craft advisory in effct. There were very strong headwinds and 10ft seas.&lt;/p&gt;
&lt;p&gt;This was the most difficult part of the trip. Usually the buoyancy of the
Gemini allows it to &amp;ldquo;only&amp;rdquo; pound waves and ride over swells. This was the only
part of the trip where the waves were so bad that the boat would pound and dig
deep into the wave, with seawater crashing over the top. Unsurprisingly the
autohelm was not able to keep us on course and I took over the wheel. I drove the engine hard and pressed
forward for a few hours to get us past this difficult point. I was only able to maintain 2-3kts.&lt;/p&gt;
&lt;p&gt;At around 6pm the weather subsided enough to allow me to throttle back the
engine and re-enable autopilot, giving me and the engine a break while we
continued to travel up the coast, with our intermediate destination of
anchoring at Whalers Cove for the night.&lt;/p&gt;
&lt;h2 id=&#34;day-3-2017-07-07&#34;&gt;Day 3 (2017-07-07)&lt;/h2&gt;
&lt;h4 id=&#34;12am-give-up-on-whalers-cove&#34;&gt;12am: Give up on Whalers Cove&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.google.com/maps/place/Whaler&#39;s+Cove/@36.5200501,-121.9398069,800m/data=!3m1!1e3!4m5!3m4!1s0x808de897a571f393:0x3b610ae25ef6d6cd!8m2!3d36.5199815!4d-121.9388353&#34;&gt;Whaler&amp;rsquo;s Cove&lt;/a&gt; is a small little cove for boats to anchor in, &amp;ldquo;protected&amp;rdquo; by surrounding rocks. It is only a few hundred feet across, with an opening of about 200 feet.&lt;/p&gt;
&lt;p&gt;With the slow progress we made thus far, we arrived here at around midnight in
the darkness. The cove was indistinguishable from the surrounding rocks
and black land. With very little anchoring experience and a dead spotlight, there was
just no way were going to able to make this landing, especially given our fatigue.&lt;/p&gt;
&lt;p&gt;Luckily Cody volunteered to drive three more hours north to Monterey Bay Harbor.&lt;/p&gt;
&lt;h4 id=&#34;3am-arrive-at-monterey-harbor&#34;&gt;3am: Arrive at Monterey Harbor&lt;/h4&gt;
&lt;p&gt;After a small nap, I had enough brainpower to remember that I had the foresight
to load &lt;a href=&#34;https://opencpn.org/&#34;&gt;OpenCPN&lt;/a&gt; with the appropriate vector maps for
this area on my cell phone. This was an amazingly powerful tool for guiding
into a Marina at night. A detailed map with a real-time GPS overlay gives you
the confidence that you are actually in the right direction and looking at the
right lights. Luckily the friendly Harbormaster on the night shift gave us an
end-tie and a good nights sleep.&lt;/p&gt;
&lt;h4 id=&#34;9am-depart-monterey-harbor&#34;&gt;9am: Depart Monterey Harbor&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://monterey.org/Services/Harbor-and-Marina&#34;&gt;Monterey Harbor&lt;/a&gt; is a small city harbor. Nothing really notable, the service was nice, bathrooms were clean, fairly priced.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;For this day we decided to make an easy trip of only 22nm north to Santa Cruz.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h4 id=&#34;5pm-arrive-at-santa-cruz&#34;&gt;5pm: Arrive at Santa Cruz&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.yelp.com/biz/santa-cruz-harbor-boatyard-santa-cruz&#34;&gt;Santa Cruz&lt;/a&gt; is a nice harbor, but for a transient berth we paid ~$50, which is twice as expensive compared to the other marinas we stayed at. On top of that, shower access required a non-refundable &amp;ldquo;deposit&amp;rdquo; and access to shore power was extra, no thanks. Since we had a short day, we treated ourselves to &lt;a href=&#34;https://www.yelp.com/biz/betty-burgers-santa-cruz&#34;&gt;Betty&amp;rsquo;s Burgers&lt;/a&gt; for dinner.&lt;/p&gt;
&lt;h2 id=&#34;day-4-2017-07-08&#34;&gt;Day 4 (2017-07-08)&lt;/h2&gt;
&lt;h4 id=&#34;6am-depart-santa-cruz&#34;&gt;6am: Depart Santa Cruz&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;I say calm, but it still is the Pacific ocean. Calm in this context means no water is spraying in your face:
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;5pm-arrive-at-pillar-point&#34;&gt;5pm: Arrive at Pillar Point&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;https://www.yelp.com/biz/pillar-point-harbor-half-moon-bay&#34;&gt;Pillar Point Marina&lt;/a&gt; is primary a fishing harbor, but has lots of shops and restaurants nearby. It is a surprisingly happening place.&lt;/p&gt;
&lt;h2 id=&#34;day-5-2017-07-09&#34;&gt;Day 5 (2017-07-09)&lt;/h2&gt;
&lt;h4 id=&#34;6am-depart-pillar-point-marina&#34;&gt;6am: Depart Pillar Point Marina&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Departing Pillar Point was relatively easy in the early morning, especially assisted with Radar. We were accompanied by many fishing boats out to get their catch. A kayaker warned us of a pair of Humpbacks just outside the harbor barrier wall, and indeed I had to make evasive maneuvers to avoid a whale surfacing ~30ft in front of the boat!&lt;/p&gt;
&lt;h4 id=&#34;9am-drive-leg-leak&#34;&gt;9am: Drive leg leak&lt;/h4&gt;
&lt;p&gt;This morning the drive train of the boat sounded a lot more &amp;ldquo;whiny&amp;rdquo; than normal. The worrying sound was coming from the drive leg, and &lt;em&gt;not&lt;/em&gt; the diesel engine. Luckily I had been lurking on the &lt;a href=&#34;https://beta.groups.yahoo.com/neo/groups/Gemini_Cats/info&#34;&gt;Gemini Owners Mailing List&lt;/a&gt; to have a hunch that there might have been an oil leak, and that the &amp;ldquo;billows&amp;rdquo; was the most likely culprit:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The billows is a rubber part that gets a lot of exercise as the drive leg turns, raises, and lowers. This leak allowed enough oil to drain to expose the top CV joint, leaving it less lubricated and whiny. After a quick phone call to the previous owner to confirm the correct oil was onboard and available (thanks so much Jerry! This was a huge lifesaver!), I topped up the drive oil to get us the rest of the way home. This billows will be first on my list of repairs to make on the boat.&lt;/p&gt;
&lt;h4 id=&#34;11am-entering-san-francisco-bay&#34;&gt;11am: Entering San Francisco Bay&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;We timed it correctly to allow us to come in with the tide, giving as a nice 3kt speed boost giving us a peak speed of 9.3kts under the bridge.&lt;/p&gt;
&lt;h4 id=&#34;1pm-arrive-at-oyster-point-marina&#34;&gt;1pm: Arrive at Oyster Point Marina&lt;/h4&gt;
&lt;p&gt;And finally we arrived at our actual destination: &lt;a href=&#34;https://www.yelp.com/biz/oyster-point-marina-south-san-francisco&#34;&gt;Oyster Point Marina&lt;/a&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    <item>
      <title>Home Made Lichtenberg Figures</title>
      <link>/Home-Made-Lichtenberg-Figures/</link>
      <pubDate>Sun, 01 Jan 2017 17:39:13 +0000</pubDate>
      <guid>/Home-Made-Lichtenberg-Figures/</guid>
      <description>&lt;p&gt;For winter 2016 I made
&lt;a href=&#34;https://en.wikipedia.org/wiki/Lichtenberg_figure&#34;&gt;Lichenberg Figures&lt;/a&gt;.
I used a 5kV 10mA (50W) neon light transformer. I also experimented with
a 2kW microwave oven transformer, but found that the lower powered neon
transformer produced finer, better, and safer results.&lt;/p&gt;
&lt;p&gt;To produce the figures, I would first apply the electricity to the wood, often
at the corners. Initially the resistance of the wood is not sufficient to allow
any burning. Then I would use a spray bottle full of water/baking soda to
moisten the surface of the wood until the electricity could find the path of
least resistance and start the burning reaction. With the low-power neon
transformer the burning is slow and takes hours.&lt;/p&gt;
&lt;p&gt;To guide the reaction in an &amp;ldquo;aesthetically pleasing way&amp;rdquo;, I used a heat gun to
temporarily dry out parts of the wood, creating channels of low-resistance
surface water. This technique is most evident on piece &lt;a href=&#34;#10&#34;&gt;#10&lt;/a&gt;. It was also
used on &lt;a href=&#34;#15&#34;&gt;#15&lt;/a&gt; to evenly cover the entire (large) piece.&lt;/p&gt;
&lt;p&gt;After the electrical treatment, each piece was finished with varnish, matted,
framed, and shipped. Below is a gallery of final results. Each was given to a
friend or family member as a winter gift:&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    <item>
      <title>A Comparison of Text-Based Web Browsers</title>
      <link>/A-Comparison-of-Text-Based-Web-Browsers/</link>
      <pubDate>Sun, 22 May 2016 12:04:09 +0000</pubDate>
      <guid>/A-Comparison-of-Text-Based-Web-Browsers/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Who browses on the terminal now-a-days? However you are, you are crazy,
but you might appreciate this comparison of text-based web browsers,
with screenshots of a few different popular sites.&lt;/p&gt;
&lt;p&gt;I wanted to test these browsers with more than just simple pages, so where
possible I actually logged into places and took screenshots of
the actual webpage in a realistic state.&lt;/p&gt;
&lt;h2 id=&#34;methodology&#34;&gt;Methodology&lt;/h2&gt;
&lt;p&gt;All browsers were set to use xterm with &lt;code&gt;TERM=xterm-256color&lt;/code&gt;.
The following browsers were used with these settings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;retawq (0.2.6c)
&lt;ul&gt;
&lt;li&gt;Enable SSL support&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;elinks (0.12~pre6-11build2)
&lt;ul&gt;
&lt;li&gt;underline&lt;/li&gt;
&lt;li&gt;linux frames&lt;/li&gt;
&lt;li&gt;256 color&lt;/li&gt;
&lt;li&gt;utf8&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;links2 (2.12-1)
&lt;ul&gt;
&lt;li&gt;Linux frames&lt;/li&gt;
&lt;li&gt;Color&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;w3m (0.5.3-26build1)
&lt;ul&gt;
&lt;li&gt;Render frames&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;lynx (2.8.9dev8-4ubuntu1)
&lt;ul&gt;
&lt;li&gt;underline links&lt;/li&gt;
&lt;li&gt;Always allow cookies&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/solarkennedy/text-based-web-browser-comparison&#34;&gt;code&lt;/a&gt;
for the exact commands used to generate everything.&lt;/p&gt;
&lt;h2 id=&#34;comparison&#34;&gt;Comparison&lt;/h2&gt;
&lt;h3 id=&#34;wikipedia-rule_110httpsenwikipediaorgwikirule_110&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Rule_110&#34;&gt;Wikipedia Rule_110&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Wikipedia has great text-based browsing support in general. I did not try editing anything.
All browsers had no trouble rendering the data in a readable way.&lt;/p&gt;
&lt;p&gt;![https://en.wikipedia.org/wiki/Rule_110 rendered using retawq](/uploads/en.wikipedia.org retawq.png &amp;lsquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Rule&#34;&gt;https://en.wikipedia.org/wiki/Rule&lt;/a&gt;_110 rendered using retawq&amp;rsquo;)
![https://en.wikipedia.org/wiki/Rule_110 rendered using elinks](/uploads/en.wikipedia.org elinks.png &amp;lsquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Rule&#34;&gt;https://en.wikipedia.org/wiki/Rule&lt;/a&gt;_110 rendered using elinks&amp;rsquo;)
![https://en.wikipedia.org/wiki/Rule_110 rendered using links2](/uploads/en.wikipedia.org links2.png &amp;lsquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Rule&#34;&gt;https://en.wikipedia.org/wiki/Rule&lt;/a&gt;_110 rendered using links2&amp;rsquo;)
![https://en.wikipedia.org/wiki/Rule_110 rendered using w3m](/uploads/en.wikipedia.org w3m.png &amp;lsquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Rule&#34;&gt;https://en.wikipedia.org/wiki/Rule&lt;/a&gt;_110 rendered using w3m&amp;rsquo;)
![https://en.wikipedia.org/wiki/Rule_110 rendered using lynx](/uploads/en.wikipedia.org lynx.png &amp;lsquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Rule&#34;&gt;https://en.wikipedia.org/wiki/Rule&lt;/a&gt;_110 rendered using lynx&amp;rsquo;)
![https://en.wikipedia.org/wiki/Rule_110 rendered using Original (surf)](/uploads/en.wikipedia.org original.png &amp;lsquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Rule&#34;&gt;https://en.wikipedia.org/wiki/Rule&lt;/a&gt;_110 rendered using Original (surf)&#39;)&lt;/p&gt;
&lt;h3 id=&#34;hacker-newshttpnewsycombinatorcom&#34;&gt;&lt;a href=&#34;http://news.ycombinator.com&#34;&gt;Hacker News&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Hacker News is mostly text-based, so these browsers had no trouble with it in general.
I appreciate elinks&amp;rsquo;s support for colors that are true to the original.&lt;/p&gt;
&lt;p&gt;![http://news.ycombinator.com rendered using retawq](/uploads/news.ycombinator.com retawq.png &amp;lsquo;&lt;a href=&#34;http://news.ycombinator.com&#34;&gt;http://news.ycombinator.com&lt;/a&gt; rendered using retawq&amp;rsquo;)
![http://news.ycombinator.com rendered using elinks](/uploads/news.ycombinator.com elinks.png &amp;lsquo;&lt;a href=&#34;http://news.ycombinator.com&#34;&gt;http://news.ycombinator.com&lt;/a&gt; rendered using elinks&amp;rsquo;)
![http://news.ycombinator.com rendered using links2](/uploads/news.ycombinator.com links2.png &amp;lsquo;&lt;a href=&#34;http://news.ycombinator.com&#34;&gt;http://news.ycombinator.com&lt;/a&gt; rendered using links2&amp;rsquo;)
![http://news.ycombinator.com rendered using w3m](/uploads/news.ycombinator.com w3m.png &amp;lsquo;&lt;a href=&#34;http://news.ycombinator.com&#34;&gt;http://news.ycombinator.com&lt;/a&gt; rendered using w3m&amp;rsquo;)
![http://news.ycombinator.com rendered using lynx](/uploads/news.ycombinator.com lynx.png &amp;lsquo;&lt;a href=&#34;http://news.ycombinator.com&#34;&gt;http://news.ycombinator.com&lt;/a&gt; rendered using lynx&amp;rsquo;)
![http://news.ycombinator.com rendered using Original (surf)](/uploads/news.ycombinator.com original.png &amp;lsquo;&lt;a href=&#34;http://news.ycombinator.com&#34;&gt;http://news.ycombinator.com&lt;/a&gt; rendered using Original (surf)&#39;)&lt;/p&gt;
&lt;h3 id=&#34;facebookhttpsfacebookcom&#34;&gt;&lt;a href=&#34;https://facebook.com&#34;&gt;Facebook&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I could not actually log into facebook with any text-based browser.&lt;/p&gt;
&lt;p&gt;![https://facebook.com rendered using retawq](/uploads/facebook.com retawq.png &amp;lsquo;&lt;a href=&#34;https://facebook.com&#34;&gt;https://facebook.com&lt;/a&gt; rendered using retawq&amp;rsquo;)
![https://facebook.com rendered using elinks](/uploads/facebook.com elinks.png &amp;lsquo;&lt;a href=&#34;https://facebook.com&#34;&gt;https://facebook.com&lt;/a&gt; rendered using elinks&amp;rsquo;)
![https://facebook.com rendered using links2](/uploads/facebook.com links2.png &amp;lsquo;&lt;a href=&#34;https://facebook.com&#34;&gt;https://facebook.com&lt;/a&gt; rendered using links2&amp;rsquo;)
![https://facebook.com rendered using w3m](/uploads/facebook.com w3m.png &amp;lsquo;&lt;a href=&#34;https://facebook.com&#34;&gt;https://facebook.com&lt;/a&gt; rendered using w3m&amp;rsquo;)
![https://facebook.com rendered using lynx](/uploads/facebook.com lynx.png &amp;lsquo;&lt;a href=&#34;https://facebook.com&#34;&gt;https://facebook.com&lt;/a&gt; rendered using lynx&amp;rsquo;)
![https://facebook.com rendered using Original (surf)](/uploads/facebook.com original.png &amp;lsquo;&lt;a href=&#34;https://facebook.com&#34;&gt;https://facebook.com&lt;/a&gt; rendered using Original (surf)&#39;)&lt;/p&gt;
&lt;h3 id=&#34;twitterhttpstwittercom&#34;&gt;&lt;a href=&#34;https://twitter.com&#34;&gt;Twitter&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Twitter looks &amp;ldquo;ok&amp;rdquo; on text-based browsers, although for that particular
application you might want to consider a &lt;a href=&#34;http://www.rainbowstream.org/&#34;&gt;dedicated application&lt;/a&gt;
built for the terminal.&lt;/p&gt;
&lt;p&gt;retawq was unable to log in for some reason.&lt;/p&gt;
&lt;p&gt;![https://twitter.com rendered using retawq](/uploads/twitter.com retawq.png &amp;lsquo;&lt;a href=&#34;https://twitter.com&#34;&gt;https://twitter.com&lt;/a&gt; rendered using retawq&amp;rsquo;)
![https://twitter.com rendered using elinks](/uploads/twitter.com elinks.png &amp;lsquo;&lt;a href=&#34;https://twitter.com&#34;&gt;https://twitter.com&lt;/a&gt; rendered using elinks&amp;rsquo;)
![https://twitter.com rendered using links2](/uploads/twitter.com links2.png &amp;lsquo;&lt;a href=&#34;https://twitter.com&#34;&gt;https://twitter.com&lt;/a&gt; rendered using links2&amp;rsquo;)
![https://twitter.com rendered using w3m](/uploads/twitter.com w3m.png &amp;lsquo;&lt;a href=&#34;https://twitter.com&#34;&gt;https://twitter.com&lt;/a&gt; rendered using w3m&amp;rsquo;)
![https://twitter.com rendered using lynx](/uploads/twitter.com lynx.png &amp;lsquo;&lt;a href=&#34;https://twitter.com&#34;&gt;https://twitter.com&lt;/a&gt; rendered using lynx&amp;rsquo;)
![https://twitter.com rendered using Original (surf)](/uploads/twitter.com original.png &amp;lsquo;&lt;a href=&#34;https://twitter.com&#34;&gt;https://twitter.com&lt;/a&gt; rendered using Original (surf)&#39;)&lt;/p&gt;
&lt;h3 id=&#34;gmailhttpsmailgooglecom&#34;&gt;&lt;a href=&#34;https://mail.google.com&#34;&gt;Gmail&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Gmail is a tall order for a text based browser. Only elinks, w3m, and lynx could pull it off.&lt;/p&gt;
&lt;p&gt;elinks shines again with great CSS support, with w3m with second place. These were all rendered
using the basic HTML version. Luckily I didn&amp;rsquo;t get a CAPTCHA?&lt;/p&gt;
&lt;p&gt;![https://mail.google.com rendered using retawq](/uploads/mail.google.com retawq.png &amp;lsquo;&lt;a href=&#34;https://mail.google.com&#34;&gt;https://mail.google.com&lt;/a&gt; rendered using retawq&amp;rsquo;)
![https://mail.google.com rendered using elinks](/uploads/mail.google.com elinks.png &amp;lsquo;&lt;a href=&#34;https://mail.google.com&#34;&gt;https://mail.google.com&lt;/a&gt; rendered using elinks&amp;rsquo;)
![https://mail.google.com rendered using links2](/uploads/mail.google.com links2.png &amp;lsquo;&lt;a href=&#34;https://mail.google.com&#34;&gt;https://mail.google.com&lt;/a&gt; rendered using links2&amp;rsquo;)
![https://mail.google.com rendered using w3m](/uploads/mail.google.com w3m.png &amp;lsquo;&lt;a href=&#34;https://mail.google.com&#34;&gt;https://mail.google.com&lt;/a&gt; rendered using w3m&amp;rsquo;)
![https://mail.google.com rendered using lynx](/uploads/mail.google.com lynx.png &amp;lsquo;&lt;a href=&#34;https://mail.google.com&#34;&gt;https://mail.google.com&lt;/a&gt; rendered using lynx&amp;rsquo;)
![https://mail.google.com rendered using Original (surf)](/uploads/mail.google.com original.png &amp;lsquo;&lt;a href=&#34;https://mail.google.com&#34;&gt;https://mail.google.com&lt;/a&gt; rendered using Original (surf)&#39;)&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;elinks is my favorite of the bunch because of color support.&lt;/p&gt;
&lt;p&gt;This blog post is about 10 years too late, and mostly serves to remind myself which version of &amp;ldquo;links&amp;rdquo; I like and why.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Kyle&#39;s (Fashion) Style Guide</title>
      <link>/Kyles-Fashion-Style-Guide/</link>
      <pubDate>Sat, 23 Jan 2016 16:24:01 +0000</pubDate>
      <guid>/Kyles-Fashion-Style-Guide/</guid>
      <description>&lt;p&gt;I recently read &lt;a href=&#34;http://powerevolution.tumblr.com/post/133543612986/why-are-so-many-millennials-so-uncool&#34;&gt;&amp;ldquo;Why Are SO Many Millennials SO Uncool?&amp;quot;&lt;/a&gt;.
Let&amp;rsquo;s start with a quote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;*For the purpose of this writing, I’m defining “cool” as those who don’t
conform, who don’t always fit in nor do they try to, and who follow their own
path; and “uncool” as those who dress, act, and have the same tastes as the
masses and are vulnerable to corporate influences.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now, I&amp;rsquo;m by no means some sort of authority on &lt;em&gt;coolness&lt;/em&gt;. By this definition
there is certainly some degree of subjectivity, but this definition has a hint
of personal-values embedded into it.&lt;/p&gt;
&lt;p&gt;In otherwords, this is more than &amp;ldquo;I don&amp;rsquo;t like black socks and sandles&amp;rdquo;, but
more like &amp;ldquo;I value non-corporate-sellouts.&amp;rdquo; At least this value extends beyond
&lt;em&gt;just&lt;/em&gt; personal taste.&lt;/p&gt;
&lt;h2 id=&#34;individuality-versus-popularity&#34;&gt;Individuality Versus Popularity&lt;/h2&gt;
&lt;p&gt;Anyone can choose to adopt this value. I can appreciate it.&lt;/p&gt;
&lt;p&gt;If fully adopted, it seems like this would encompass normal corporate branding
stuff, as well as things that are simply &amp;ldquo;popular&amp;rdquo;. By this definition, wearing
a popular brand name or adopting a trendy style is &amp;ldquo;uncool&amp;rdquo;. This is at odds
with the definition of &amp;ldquo;cool&amp;rdquo; that I learned in middle-school. In fact, in
middle-school the definition of cool was the exact &lt;strong&gt;opposite&lt;/strong&gt; of the author&amp;rsquo;s
definition.&lt;/p&gt;
&lt;p&gt;This is fine. As we mature into adults, some people outgrow this definition of
coolness. Others do not.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;../uploads/gucci_bag.jpg&#34; alt=&#34;Gucci Bag&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;img src=&#34;../uploads/etsy_purse.jpg&#34; alt=&#34;Etsy Purse&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Corporate Gucci Bag: Uncool&lt;/td&gt;
&lt;td&gt;Handmade Etsy Bag: Cool&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I can get behind this. I also individuality over popularity. I also dislike
corporate influences. (or heck, external influences in general)&lt;/p&gt;
&lt;h2 id=&#34;examining-my-tech-wardrobe&#34;&gt;Examining My (Tech) Wardrobe&lt;/h2&gt;
&lt;p&gt;One of my other personal values is &lt;em&gt;consistency&lt;/em&gt;. If I&amp;rsquo;m going to adopt this
value and be consistent, then perhaps I should examine my wardrobe&amp;hellip;&lt;/p&gt;
&lt;p&gt;What external corporate ends am I promoting with my wardrobe? Well let&amp;rsquo;s start
with all these technology tshirts:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;../uploads/docker_shirt.jpg&#34; alt=&#34;Docker Shirt&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;img src=&#34;../uploads/openssl_shirt.jpg&#34; alt=&#34;OpenSSL Shirt&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Docker Shirt: Uncool&lt;/td&gt;
&lt;td&gt;OpenSSL Shirt: Cool&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Both Docker and OpenSSL are open source, but wearing a Docker shirt implicitly
promotes the &lt;em&gt;Docker Company&lt;/em&gt;. On the other hand, OpenSSL is goverend by the
OpenSSL Software Foundation. Is wearing a Docker shirt on par with showing
off your Gucci bag?&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;../uploads/ubuntu_shirt.jpg&#34; alt=&#34;Ubuntu Shirt&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;img src=&#34;../uploads/debian_shirt.jpg&#34; alt=&#34;Debian Shirt&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ubuntu Shirt: Uncool&lt;/td&gt;
&lt;td&gt;Debian Shirt: Cool&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Ubuntu is a product of &lt;em&gt;Canonical&lt;/em&gt;. Debian doesn&amp;rsquo;t have any corporate
counterpart.  Is wearing an Ubuntu shirt uncool because you are providing free
advertising for a corporate entity?&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;../uploads/aws_shirt.jpg&#34; alt=&#34;AWS Shirt&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;img src=&#34;../uploads/openstack_shirt.jpg&#34; alt=&#34;Openstack Shirt&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AWS Shirt: Uncool&lt;/td&gt;
&lt;td&gt;Openstack Shirt: Uncool too&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I don&amp;rsquo;t know man, I don&amp;rsquo;t think Openstack shirts are cool either&amp;hellip;.&lt;/p&gt;
&lt;h2 id=&#34;non-tech&#34;&gt;Non-tech&lt;/h2&gt;
&lt;p&gt;These above examples are given mostly because the represent a large portion
of my wardrobe. In general the same principle of rejecting corporate sponsors
carries over to non-tech shirts.&lt;/p&gt;
&lt;p&gt;I dare say that even wearing shirts with logos of your current or previous
employers are &lt;strong&gt;not&lt;/strong&gt; cool.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In general, wearing something that promotes another company&amp;rsquo;s products, I guess
is uncool, even if you like the product or even contribute to it. The root cause
is that you are allowing yourself to be treated as a means to their promotion?&lt;/p&gt;
&lt;p&gt;Of course the act of trying to be cool in uncool in itself, so I&amp;rsquo;m pretty sure
I&amp;rsquo;m forever destined to remain&amp;hellip; uncool.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>A Configuration Management Rosetta Stone: Configuring Sensu with Puppet, Chef, Ansible and Salt</title>
      <link>/configuration-management-rosetta-stone-configuring-sensu-with-puppet-chef-ansible-and-salt/</link>
      <pubDate>Sun, 11 Oct 2015 18:21:14 +0000</pubDate>
      <guid>/configuration-management-rosetta-stone-configuring-sensu-with-puppet-chef-ansible-and-salt/</guid>
      <description>&lt;p&gt;I recently finished my &lt;a href=&#34;https://www.udemy.com/sensu-intermediate/?couponCode=xkyle&#34;&gt;Intermediate Sensu Training&lt;/a&gt; on Udemy.
It was a ton of work but I&amp;rsquo;m glad I got it all together. Part of that training
includes how to deploy and configure &lt;a href=&#34;https://sensuapp.org/&#34;&gt;Sensu&lt;/a&gt; with four
of the most popular open-source configuration management tools:
&lt;a href=&#34;https://puppetlabs.com/puppet/what-is-puppet&#34;&gt;Puppet&lt;/a&gt;,
&lt;a href=&#34;https://www.chef.io/chef/&#34;&gt;Chef&lt;/a&gt;, &lt;a href=&#34;http://www.ansible.com/&#34;&gt;Ansible&lt;/a&gt;, and
&lt;a href=&#34;http://saltstack.com/&#34;&gt;Salt&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TOC
{:toc}&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-sensu-decree&#34;&gt;The Sensu Decree&lt;/h2&gt;
&lt;p&gt;In order to do the training I had to learn each of these tools enough so I could install
a baseline Sensu installation. Here is what I reproduced with each iteration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A Sensu client, Server, and API Setup and Running&lt;/li&gt;
&lt;li&gt;RabbitMQ Server, User, and Sensu Vhost ready for use. (no SSL)&lt;/li&gt;
&lt;li&gt;Redis installed and running for state&lt;/li&gt;
&lt;li&gt;A Sensu check (&lt;code&gt;check_disk&lt;/code&gt; and/or &lt;code&gt;check_apache&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;The Sensu Mail handler to send emails for alerts&lt;/li&gt;
&lt;li&gt;The Uchiwa Dashboard&lt;/li&gt;
&lt;li&gt;All on one host (localhost)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This was no small feat, and required using a non-trivial number of features of each configuration management system to get the job done.&lt;/p&gt;
&lt;p&gt;Here were some other guidelines that I followed in this exercise:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always use 3rd party modules/cookbooks/etc. Use official ones if possible.&lt;/li&gt;
&lt;li&gt;Use the local-execution mode provided by the configuration management tool
(no client/server setup)&lt;/li&gt;
&lt;li&gt;Follow official docs when available for general guidelines for things like
installation.&lt;/li&gt;
&lt;li&gt;Differences in things like config file names or versions of Redis are
inconsequential. As long as Sensu behaved the same I considered it complete.&lt;/li&gt;
&lt;li&gt;No considerations for security (out of scope for this exercise)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;review-of-each-tool&#34;&gt;Review of Each Tool&lt;/h2&gt;
&lt;h3 id=&#34;puppet&#34;&gt;Puppet&lt;/h3&gt;
&lt;h4 id=&#34;puppet-in-general&#34;&gt;Puppet In General&lt;/h4&gt;
&lt;p&gt;Puppet is my &amp;ldquo;native language&amp;rdquo; when it comes to configuration management, so it
is a little hard for me to imagine what it is like to &lt;em&gt;not&lt;/em&gt; know what it is
like to know exactly how it works.&lt;/p&gt;
&lt;p&gt;Puppet has a custom DSL to describe configuration in terms of &amp;ldquo;types&amp;rdquo;. These are
the primitives that you can build infrastructure upon, things like &amp;ldquo;files, &amp;ldquo;package&amp;rdquo;,
and &amp;ldquo;service&amp;rdquo;. Third party modules can extend that language with custom types,
allowing you to abstract over the &amp;ldquo;raw&amp;rdquo; types. For example, the RabbitMQ has a
type for providing &lt;code&gt;rabbitmq_user&lt;/code&gt;s, which do not correspond to a particular
config file or anything, but instead can only be added by special invocations
of the &lt;code&gt;rabbitmqctl&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Puppet strongly emphasizes code-reuse. The &lt;a href=&#34;https://forge.puppetlabs.com/&#34;&gt;Puppet Forge&lt;/a&gt; is the registry where you can upload and
share modules. The Forge has a number of methods to help indicate code quality.
It also exposes &amp;ldquo;officially supported&amp;rdquo; and &amp;ldquo;officially approved&amp;rdquo; modules, for
extra approval stamps. While the forge may have a very &amp;ldquo;long tail&amp;rdquo; of modules
that do very common tasks, the set of officially-supported and
officially-approved modules leaves behind a good selection of high-quality
modules ready for re-use.&lt;/p&gt;
&lt;p&gt;A common criticism of Puppet is that it does not apply resources in the order that
they are declared in the manifest. Instead, Puppet internally calculates a directed
graph of resources and their dependencies, and executes them in a dependent order, which
is not necessarily in the order in which they are parsed. This is similar to how Linux
package managers install packages. If you run &lt;code&gt;apt-get install apache libc libssl&lt;/code&gt;,
the packages will not necessarily get installed in the order that they were
specified on the command line.&lt;/p&gt;
&lt;p&gt;Puppet also comes with &lt;a href=&#34;http://docs.puppetlabs.com/hiera/1/#why-hiera&#34;&gt;Hiera&lt;/a&gt;,
a convenient hierarchical key/value store. This store allows users to override
and set site-specific settings to Puppet modules without having to fork or modify
them. Hiera encourages custom hierarchies that meet your business needs, allowing
users to specify settings in a way that makes the most sense for their environments.
And example hierarchy might look something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hieradata/
├── common.yaml
├── environment
│   ├── dev.yaml
│   └── prod.yaml
├── datacenter
│   ├── dc1.yaml
│   └── dc2.yaml
└── hostname
    ├── web1.yaml
    └── web2.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then Hiera looks up parameters from most-specific (hostname) to least-specific
(common), and returns the first value that is available.&lt;/p&gt;
&lt;h4 id=&#34;review-of-the-sensu-puppet-module&#34;&gt;Review of the Sensu Puppet Module&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/sensu/sensu-puppet&#34;&gt;sensu-puppet module&lt;/a&gt; is a
first-class citizen in the Sensu world. It has native types for the Sensu JSON
files that it manages, as well as a &lt;code&gt;sensu-gem&lt;/code&gt; type for easily installing
rubygems with the embedded Sensu ruby.&lt;/p&gt;
&lt;p&gt;The Sensu Puppet module only manages Sensu, and has no integration with any
other RabbitMQ, Redis, or any other module. To me this is expected, in the
Puppet world it would be the job of a &lt;code&gt;profile&lt;/code&gt; to combine the Sensu module
with RabbitMQ and other things. For the most part this integration is left as
an exercise to the reader.&lt;/p&gt;
&lt;p&gt;The Sensu Puppet module also doesn&amp;rsquo;t manage Uchiwa. That requires a
&lt;a href=&#34;https://github.com/Yelp/puppet-uchiwa&#34;&gt;different puppet module&lt;/a&gt;. Again to me
this is a good thing, I hate it when tools try to do too much.&lt;/p&gt;
&lt;p&gt;The actual codebase is actively maintained and reasonably active, with a few
releases per year. The Puppet Forge rates it almost perfectly for module quality.
The code has excellent unit test and acceptance test coverage. As far
as Puppet modules go, the Sensu Puppet module is a great example of a
well-maintained piece of code.&lt;/p&gt;
&lt;p&gt;One downside the &amp;ldquo;completeness&amp;rdquo; of the module is that sometimes new features of
Sensu are released, and the puppet-module will lag. The configuration inputs to
the puppet module are well-typed, and not just free-form hashes. This gives a
lot of guardrails and helps ensure config files are correct before they hit
the disk, but it means that some features are not usable until the Puppet
module can account for them.&lt;/p&gt;
&lt;p&gt;Although the code worked, there was a &lt;a href=&#34;https://github.com/sensu/sensu-puppet/issues/336&#34;&gt;significant bug&lt;/a&gt; that prevented the
module from ever converging. This was annoying but allowed me to test the code.
This bug looks to be fixed in master.&lt;/p&gt;
&lt;h3 id=&#34;chef&#34;&gt;Chef&lt;/h3&gt;
&lt;h4 id=&#34;chef-in-general&#34;&gt;Chef in General&lt;/h4&gt;
&lt;p&gt;Chef is not as old as Puppet, but is certainly a mature product. Chef is &amp;ldquo;just
ruby&amp;rdquo; when it comes to its configuration language. The upside to this is that
Ruby developers can theoretically dive in and hack on stuff. The downside to
this is that being &amp;ldquo;just ruby&amp;rdquo;, &amp;ldquo;leaves a lot of rope to hang yourself&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;One nice feature provided by the Chef company is their hosted chef solution, which
allows people to get started without hosting a Chef-server.&lt;/p&gt;
&lt;p&gt;The Chef toolset also comes with the &lt;code&gt;knife&lt;/code&gt; command, which is a great command
line tool for interacting with the Chef-server. It also is a parallel-ssh tool,
manipulates chef cookbooks, and can also launch ec2 (and other) instances. (did
they take the kitchen-sink metaphor too far?)&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://supermarket.chef.io/&#34;&gt;Chef Supermarket&lt;/a&gt; serves as the public
registry for Chef cookbooks. There are not too many quality indicators to see,
to help find which cookbooks are any good. The best metric I could see is just
sorting by &amp;ldquo;followers&amp;rdquo;. This is made up by the fact that there are over
a hundred &lt;a href=&#34;https://supermarket.chef.io/users/chef&#34;&gt;officially supported cookbooks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Probably the most difficult aspect of Chef for me to understand was how
attributes interact. This confusion is probably most obvious when you look at
Chef&amp;rsquo;s &lt;a href=&#34;https://docs.chef.io/attributes.html#attribute-precedence&#34;&gt;15 levels of attribute precedence&lt;/a&gt;. It seems
to me that there should be a more obvious way for intent to flow, but I could
be just spoiled by Puppet&amp;rsquo;s Hiera.&lt;/p&gt;
&lt;h4 id=&#34;review-of-the-chef-sensu-cookbook&#34;&gt;Review of the Chef-Sensu Cookbook&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/sensu/sensu-chef&#34;&gt;Sensu Chef Cookbook&lt;/a&gt; is also a
first-class citizen in the Sensu-world. Chef is the &amp;ldquo;native config language&amp;rdquo; of
&lt;a href=&#34;https://github.com/portertech&#34;&gt;Sean Porter&lt;/a&gt;, the main author of Sensu. This
gives a lot of credibility to the Cookbook, and shows in the &lt;a href=&#34;https://github.com/sensu/sensu-chef/graphs/contributors&#34;&gt;contributor page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Cookbook itself is feature complete, with recipes for installing and
configuring all aspects of Sensu.&lt;/p&gt;
&lt;p&gt;The scope of the cookbook includes all Sensu related technologies, including
RabbitMQ, Redis, and Uchiwa. It is certainly &amp;ldquo;batteries included&amp;rdquo; and on by
default.  It even downloads and compiles &lt;a href=&#34;https://github.com/sensu/sensu-chef/issues/340&#34;&gt;Redis from source&lt;/a&gt; for you.&lt;/p&gt;
&lt;p&gt;Another example of this &amp;ldquo;batteries included&amp;rdquo; design is the RabbitMQ module
&lt;a href=&#34;https://github.com/jjasghar/rabbitmq/pull/301&#34;&gt;setting&lt;/a&gt;
&lt;a href=&#34;https://github.com/jjasghar/rabbitmq/pull/302/files&#34;&gt;Apt&lt;/a&gt; attributes. Like the
above Redis example, this behavior surprised me, but technically it is not related to
the Sensu chef cookbook.&lt;/p&gt;
&lt;p&gt;At the same time, &lt;a href=&#34;https://github.com/portertech/chef-monitor&#34;&gt;wrapper cookbooks&lt;/a&gt; are recommended as a
method to combine multiple cookbooks together in a coherent way. I think in
general I just expected the wrapper cookbooks to do more and the main Sensu
cookbook to do less.&lt;/p&gt;
&lt;p&gt;The cookbook does have an integration test suite, but it is not run via Travis.
The code is under active development, and does multiple releases a year. It has
native support for Chef &lt;a href=&#34;https://docs.chef.io/data_bags.html&#34;&gt;data bags&lt;/a&gt; for
transporting the RabbitMQ SSL support, which is a nice touch (Not tested in
this review).&lt;/p&gt;
&lt;h3 id=&#34;ansible&#34;&gt;Ansible&lt;/h3&gt;
&lt;h4 id=&#34;ansible-in-general&#34;&gt;Ansible in General&lt;/h4&gt;
&lt;p&gt;Ansible is a relative newcomer to the configuration management space. Ansible
uses yaml files to define desired state. The yamls files are a nice way to
represent things, but it would be misleading to think that Ansible is just yaml
files. Ansible has its own DSL and uses Jinja2 templating, which is parsed
&lt;em&gt;over&lt;/em&gt; the contents of the yaml.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://galaxy.ansible.com/&#34;&gt;Ansible Galaxy&lt;/a&gt; is the community registry for
uploading shared roles. You can &lt;a href=&#34;https://galaxy.ansible.com/list#/roles?page=1&amp;amp;per_page=10&amp;amp;sort_order=owner__username,name&amp;amp;f=apache&#34;&gt;sort by rating&lt;/a&gt;
to try to get a better idea about which roles are potentially higher quality
than others.&lt;/p&gt;
&lt;p&gt;There doesn&amp;rsquo;t seem to be any official roles/playbooks. The closest there is to
official roles is the
&lt;a href=&#34;https://github.com/ansible/ansible-examples/tree/master/lamp_simple&#34;&gt;ansible-examples&lt;/a&gt;
repository. But click the link and look at the &lt;code&gt;lamp_simple&lt;/code&gt; example. There is
no code-reuse at all! Every example re-invents how to install apache, install
ntp, configure iptables, etc. What&amp;rsquo;s up with that?&lt;/p&gt;
&lt;p&gt;While the yaml files may make it very easy for beginners to make playbooks that
get things done quickly, I don&amp;rsquo;t think they will work out great as
infrastructure expands. The &lt;a href=&#34;https://github.com/ansible/ansible-examples/blob/49708518fab943a37bdbf15ee61177155f0cc50f/lamp_simple/roles/web/tasks/install_httpd.yml#L15-L17&#34;&gt;abstractions just are not there&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Another sign, to me, that Ansible has the wrong abstractions is that
so many roles are distro specific.
Not many have the necessary code to work on both &amp;ldquo;CentOS&amp;rdquo; and &amp;ldquo;Debian&amp;rdquo;.  There
is a generic &lt;a href=&#34;http://docs.ansible.com/ansible/package_module.html&#34;&gt;package&lt;/a&gt;
type, but very few roles use it? Check out &lt;a href=&#34;https://groups.google.com/forum/#!msg/ansible-project/x2_9PzAJXNE/ZwcBv02oAhkJ&#34;&gt;the original author&amp;rsquo;s opinion on the subject&lt;/a&gt;.
Look at the examples! They all only work on &lt;code&gt;yum&lt;/code&gt; based distributions.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve read lots of posts of people migrating to Ansible and loving it.
Personally, I don&amp;rsquo;t get it. The abstractions are too low-level. If you are lucky,
then the Ansible core has a Module to manipulate the resources on the host,
like &lt;a href=&#34;http://docs.ansible.com/ansible/rabbitmq_user_module.html&#34;&gt;RabbitMQ stuff&lt;/a&gt;. If you are
unlucky, then the only primitives you have available are yaml files and
&lt;a href=&#34;http://www.hashbangcode.com/blog/adding-iptables-rules-ansible&#34;&gt;running commands and parsing stdout&lt;/a&gt;.
Or you can write your &lt;a href=&#34;http://docs.ansible.com/ansible/developing_modules.html&#34;&gt;own module&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;ansible-sensu-playbook-review&#34;&gt;Ansible Sensu Playbook Review&lt;/h4&gt;
&lt;p&gt;There is no official Sensu Ansible playbook. I was not able to find any playbooks
that support RedHat-based distributions.&lt;/p&gt;
&lt;p&gt;Luckily, I was able to use &lt;a href=&#34;https://github.com/Mayeu/ansible-playbook-sensu&#34;&gt;Mayeu&amp;rsquo;s ansible playbook&lt;/a&gt;, in conjunction with
this &lt;a href=&#34;https://github.com/Mayeu/ansible-playbook-rabbitmq&#34;&gt;RabbitMQ playbook&lt;/a&gt; on
my Ubuntu server.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;sensu_check&lt;/code&gt; module is part of the &amp;ldquo;Extras&amp;rdquo;, but it is only a very small
part of deploying Sensu, and it has no cohesion with the playbook that actually
deploys Sensu itself. There is no way to extend &lt;code&gt;sensu_check&lt;/code&gt; without forking
&lt;a href=&#34;http://github.com/ansible/ansible-modules-extras&#34;&gt;ansible-modules-extras&lt;/a&gt;. It
can&amp;rsquo;t consume arbitrary check metadata.&lt;/p&gt;
&lt;p&gt;In the end, to meet my needs I had to construct hashes myself and deploy them
to disk as JSON. The playbook-provided way to deploy sensu checks is to have
them all contained in the single
&lt;a href=&#34;https://github.com/Mayeu/ansible-playbook-sensu#general-variables&#34;&gt;sensu_checks&lt;/a&gt;
variable.&lt;/p&gt;
&lt;h3 id=&#34;salt&#34;&gt;Salt&lt;/h3&gt;
&lt;h4 id=&#34;salt-in-general&#34;&gt;Salt in General&lt;/h4&gt;
&lt;p&gt;Salt is also a relative new-comer to the configuration management world. As a
user, Salt feels very similar to Ansible. They both use yaml files to represent
the desired state of the system. Both use Jinja templates. Both require the
&amp;ldquo;advanced&amp;rdquo; system interaction to happen with the core stuff, and the
Salt formulas can be just yaml with no real code.&lt;/p&gt;
&lt;p&gt;Salt takes a different approach to sharing community code compared to the
other configuration management systems. Salt keeps all the official formulas in
one &lt;a href=&#34;https://github.com/saltstack-formulas&#34;&gt;GitHub project&lt;/a&gt;. The docs recommend
&lt;a href=&#34;https://docs.saltstack.com/en/latest/topics/development/conventions/formulas.html#adding-a-formula-as-a-gitfs-remote&#34;&gt;forking the formula&lt;/a&gt;
for your own use. On the plus side, having &amp;ldquo;canonical&amp;rdquo; formulas for common
tasks reduces duplication and encourages code re-use. The downside is that&amp;hellip; it
encourages forking? These formulas in general are not that extensive. They
don&amp;rsquo;t have releases or any kind of testing in place.&lt;/p&gt;
&lt;p&gt;Salt&amp;rsquo;s &lt;a href=&#34;https://docs.saltstack.com/en/latest/topics/pillar/&#34;&gt;Pillar&lt;/a&gt; is a powerful tool for separating configuration from code.
It is similar to Puppet&amp;rsquo;s Hiera. Pro: separate config from code; keep
the site-specific variables in a separate folder than the formulas. Con:
formulas have to be &amp;ldquo;pillar-aware&amp;rdquo;. There is no equivalent to Puppet&amp;rsquo;s
&lt;a href=&#34;https://docs.puppetlabs.com/hiera/1/puppet.html#automatic-parameter-lookup&#34;&gt;automatic parameter lookup&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;sensu-salt-formula-review&#34;&gt;Sensu Salt Formula Review&lt;/h4&gt;
&lt;p&gt;For my testing, I used the official
&lt;a href=&#34;https://github.com/saltstack-formulas/sensu-formula&#34;&gt;Salt-formula&lt;/a&gt;. There is
a sensu-salt repo on the official Sensu project, but it is not really suitable
for production use in my opinion.&lt;/p&gt;
&lt;p&gt;For the most part, the formula did what it said on the tin. Of course, like
Ansible, the only way I was able to deploy checks in a flexible way was to
construct my own Hashes and deploy them as JSON directly. There is no such thing
as a &lt;code&gt;sensu_check&lt;/code&gt; type in Salt.&lt;/p&gt;
&lt;p&gt;I was not able to get rid of the &lt;a href=&#34;https://github.com/saltstack-formulas/sensu-formula/blob/5ca104f5aec94a20d206e98fb0d030674c8514b9/sensu/files/conf.d/check_cron.json&#34;&gt;hard-coded cron check&lt;/a&gt;.
I guess goes with the idea that they expect you to fork the repo and make your
own local changes to meet your needs. I thought I should maybe open an issue for
this, but the file has been there for a year and nobody else has complained. I
figured it was just me, and maybe I should get over myself and accept the fact
that I got a free cron check!&lt;/p&gt;
&lt;p&gt;In my own testing, I used the native &lt;code&gt;gem&lt;/code&gt; provider with a special path to
Sensu&amp;rsquo;s gem binary to install Sensu gems. But then I discovered that the
formula did this too, but &lt;a href=&#34;https://github.com/saltstack-formulas/sensu-formula/blob/5ca104f5aec94a20d206e98fb0d030674c8514b9/sensu/server.sls#L60-L63&#34;&gt;in two&lt;/a&gt;
&lt;a href=&#34;https://github.com/saltstack-formulas/sensu-formula/blob/5ca104f5aec94a20d206e98fb0d030674c8514b9/sensu/client.sls#L89-L92&#34;&gt;different ways&lt;/a&gt;,
using the &lt;code&gt;cmd.run&lt;/code&gt; method instead of the native &lt;code&gt;gem&lt;/code&gt; method.  I didn&amp;rsquo;t really
like this, but at the same time, this is the first time I&amp;rsquo;ve ever used Salt.&lt;/p&gt;
&lt;p&gt;As far as I can tell, to do more advanced Sensu config things, like filters or
mutators, you are expected to fork the formula and drop in the json file into
&lt;a href=&#34;https://github.com/saltstack-formulas/sensu-formula/tree/5ca104f5aec94a20d206e98fb0d030674c8514b9/sensu/files/mutators&#34;&gt;the right directory&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;comparison&#34;&gt;Comparison&lt;/h2&gt;
&lt;p&gt;A rough opinionated comparison between the tools, with regards the tool itself
and the tool in conjunction with Sensu. &amp;ldquo;High&amp;rdquo; doesn&amp;rsquo;t necessarily mean &amp;ldquo;good&amp;rdquo; here:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Puppet&lt;/th&gt;
&lt;th&gt;Chef&lt;/th&gt;
&lt;th&gt;Ansible&lt;/th&gt;
&lt;th&gt;Salt&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Review of The Config Management Tool in General&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Version used&lt;/td&gt;
&lt;td&gt;3.4.3&lt;/td&gt;
&lt;td&gt;12.4.1&lt;/td&gt;
&lt;td&gt;1.5.4&lt;/td&gt;
&lt;td&gt;2015.5.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Third Party Module Easy of Use&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Medium&lt;/td&gt;
&lt;td&gt;Low&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Official Sensu Support for the Tool&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Low&lt;/td&gt;
&lt;td&gt;Low&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Reproducibility&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Easy of use getting started&lt;/td&gt;
&lt;td&gt;Medium&lt;/td&gt;
&lt;td&gt;Medium&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Medium&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Language extensibility&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Low&lt;/td&gt;
&lt;td&gt;Low&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Separation between config data and code&lt;/td&gt;
&lt;td&gt;Hiera&lt;/td&gt;
&lt;td&gt;Databags/Attributes&lt;/td&gt;
&lt;td&gt;just variables?&lt;/td&gt;
&lt;td&gt;Pillar&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Module re-usability?&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Low&lt;/td&gt;
&lt;td&gt;Low&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Review of the Sensu Module/Cookbook/Etc&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Version of the module Used&lt;/td&gt;
&lt;td&gt;1.5.5&lt;/td&gt;
&lt;td&gt;2.10.0&lt;/td&gt;
&lt;td&gt;0.1.0&lt;/td&gt;
&lt;td&gt;c6324b3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sensu Module Feature Completeness&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Medium&lt;/td&gt;
&lt;td&gt;Medium&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sensu Module Integration with Other Modules&lt;/td&gt;
&lt;td&gt;Low&lt;/td&gt;
&lt;td&gt;Extreme?&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sensu Module Flexibility&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Medium&lt;/td&gt;
&lt;td&gt;Low&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sensu Module Re-usability&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Low&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;How Opinionated Was It?&lt;/td&gt;
&lt;td&gt;Low&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Low&lt;/td&gt;
&lt;td&gt;Medium&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Usability with Sensu&amp;rsquo;s Embedded Ruby&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Not natively&lt;/td&gt;
&lt;td&gt;Sorta&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The way I see it, there are two camps. Chef and Puppet both provide a rich
language to build modules with. For example, the &lt;a href=&#34;https://forge.puppetlabs.com/puppetlabs/rabbitmq&#34;&gt;PuppetLabs RabbitMQ module&lt;/a&gt; contains all the code
to interact with RabbitMQ. The main Puppet codebase doesn&amp;rsquo;t know anything about
RabbitMQ. The same goes for Chef. Both Chef and Puppet also have their own DSL.
Puppet uses yaml files for Hiera, but they are for config only, unlike
Ansible/Salt.&lt;/p&gt;
&lt;p&gt;In the other camp is Ansible and Salt. They have a simplified config language,
and require the help from the core software to do the &amp;ldquo;heavy lifting&amp;rdquo; of the
raw types. For example, the Salt &lt;a href=&#34;https://github.com/saltstack-formulas/rabbitmq-formula/blob/master/rabbitmq/config.sls#L29&#34;&gt;RabbitMQ formula&lt;/a&gt;
requires the help of &lt;a href=&#34;https://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.rabbitmq.html&#34;&gt;core Salt RabbitMQ module&lt;/a&gt;
to provide the primitives.&lt;/p&gt;
&lt;h3 id=&#34;final-thoughts&#34;&gt;Final Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Puppet
&lt;ul&gt;
&lt;li&gt;Directed graph dependency ordering, not parse-order driven&lt;/li&gt;
&lt;li&gt;Type/Provider system and defined types provide the right abstraction layers to build upon.&lt;/li&gt;
&lt;li&gt;Hiera provides a good separation of config/code, making it easier to reuse modules without modification.&lt;/li&gt;
&lt;li&gt;Strong culture of testing&lt;/li&gt;
&lt;li&gt;Lots of good supported modules&lt;/li&gt;
&lt;li&gt;High deployment overhead and language learning curve&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Chef
&lt;ul&gt;
&lt;li&gt;LWRP system provides the right abstraction layers to build upon.&lt;/li&gt;
&lt;li&gt;Knife tool does do a lot of cool stuff&lt;/li&gt;
&lt;li&gt;Lots of good supported cookbooks&lt;/li&gt;
&lt;li&gt;Strong culture of testing&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Just ruby&amp;rdquo;&lt;/li&gt;
&lt;li&gt;15 levels of attribute precedence is insane&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ansible
&lt;ul&gt;
&lt;li&gt;Low deployment overhead and low learning curve&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Just yaml files&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Lack of type/providers means that playbooks use &amp;ldquo;apt&amp;rdquo; and &amp;ldquo;yum&amp;rdquo; directly, which kinda sucks&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Salt
&lt;ul&gt;
&lt;li&gt;Pillar provides a nice separation of config/code, which is good for formula-reuse, if the formula is pillar-aware&lt;/li&gt;
&lt;li&gt;Centralized formulas emphasize consolidated development effort&lt;/li&gt;
&lt;li&gt;No strong state testing emphasis or framework&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;going-further&#34;&gt;Going Further&lt;/h2&gt;
&lt;p&gt;If you want to know more about Sensu, of course you can take my training course:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udemy.com/sensu-introduction/&#34;&gt;Sensu-Introduction&lt;/a&gt; (Free)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udemy.com/sensu-intermediate/?couponCode=xkyle&#34;&gt;Sensu-Intermediate&lt;/a&gt; (50% off, $50)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or you can tell me I&amp;rsquo;m wrong. You can raise and
&lt;a href=&#34;https://github.com/solarkennedy/xkyle.com/issues/new&#34;&gt;issue&lt;/a&gt; or make a
&lt;a href=&#34;https://github.com/solarkennedy/xkyle.com/pulls&#34;&gt;pull-request&lt;/a&gt; for the blog
post or investigate my actual training material and code on
&lt;a href=&#34;https://github.com/solarkennedy/sensu-training/tree/master/intermediate/lectures&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>A Comparison of Image to ASCII Conversion Tools</title>
      <link>/A-Comparison-of-Image-to-ASCII-Conversion-Tools/</link>
      <pubDate>Sat, 26 Sep 2015 19:35:56 +0000</pubDate>
      <guid>/A-Comparison-of-Image-to-ASCII-Conversion-Tools/</guid>
      <description>&lt;p&gt;Inspired by &lt;a href=&#34;https://github.com/erkin/ponysay&#34;&gt;ponysay&lt;/a&gt;, I think wicked
ascii/ansi artwork on the terminal is great.&lt;/p&gt;
&lt;p&gt;I decided to survey all the tools I could find that aid in this conversion
to see if there were any dramatic differences in results.&lt;/p&gt;
&lt;h2 id=&#34;methodology&#34;&gt;Methodology&lt;/h2&gt;
&lt;p&gt;For these tests I used an image with a 160px width, twice that of
a standard terminal. Then I &lt;code&gt;cat&lt;/code&gt;&#39;d the image in plain xterm and
took a screenshot of the results.&lt;/p&gt;
&lt;p&gt;The original has been scaled up (6X) to be the same relative size as
the resulting screenshots.&lt;/p&gt;
&lt;p&gt;My entire methodology is on &lt;a href=&#34;https://github.com/solarkennedy/ascii-art-converter-comparison&#34;&gt;github&lt;/a&gt;
if you wish to see exactly how I made these images. In theory
it is 100% reproducible from &lt;code&gt;make&lt;/code&gt;. (assuming on a linux desktop)&lt;/p&gt;
&lt;h2 id=&#34;tools-compared&#34;&gt;Tools Compared&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rossy/img2xterm&#34;&gt;img2xterm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/maandree/util-say/&#34;&gt;util-say&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/posva/catimg&#34;&gt;catimg&lt;/a&gt; (C and Bash versions)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/saikobee/img-cat/&#34;&gt;img-cat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://manpages.ubuntu.com/manpages/hardy/man1/img2txt.1.html&#34;&gt;img2txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://csl.name/jp2a/&#34;&gt;jp2a&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;results&#34;&gt;Results&lt;/h2&gt;
&lt;h3 id=&#34;benderpng&#34;&gt;bender.png&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../../uploads/bender.original.png&#34; alt=&#34;bender.png converted using original&#34; title=&#34;bender.png converted using original&#34;&gt;
&lt;img src=&#34;../../uploads/bender.img2xterm.png&#34; alt=&#34;bender.png converted using img2xterm&#34; title=&#34;bender.png converted using img2xterm&#34;&gt;
&lt;img src=&#34;../../uploads/bender.util-say.png&#34; alt=&#34;bender.png converted using util-say&#34; title=&#34;bender.png converted using util-say&#34;&gt;
&lt;img src=&#34;../../uploads/bender.catimg.png&#34; alt=&#34;bender.png converted using catimg&#34; title=&#34;bender.png converted using catimg&#34;&gt;
&lt;img src=&#34;../../uploads/bender.catimg-bash.png&#34; alt=&#34;bender.png converted using catimg-bash&#34; title=&#34;bender.png converted using catimg-bash&#34;&gt;
&lt;img src=&#34;../../uploads/bender.img-cat.png&#34; alt=&#34;bender.png converted using img-cat&#34; title=&#34;bender.png converted using img-cat&#34;&gt;
&lt;img src=&#34;../../uploads/bender.img2txt.png&#34; alt=&#34;bender.png converted using img2txt&#34; title=&#34;bender.png converted using img2txt&#34;&gt;
&lt;img src=&#34;../../uploads/bender.jp2a.png&#34; alt=&#34;bender.png converted using jp2a&#34; title=&#34;bender.png converted using jp2a&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;lennapng&#34;&gt;lenna.png&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../../uploads/lenna.original.png&#34; alt=&#34;lenna.png converted using original&#34; title=&#34;lenna.png converted using original&#34;&gt;
&lt;img src=&#34;../../uploads/lenna.img2xterm.png&#34; alt=&#34;lenna.png converted using img2xterm&#34; title=&#34;lenna.png converted using img2xterm&#34;&gt;
&lt;img src=&#34;../../uploads/lenna.util-say.png&#34; alt=&#34;lenna.png converted using util-say&#34; title=&#34;lenna.png converted using util-say&#34;&gt;
&lt;img src=&#34;../../uploads/lenna.catimg.png&#34; alt=&#34;lenna.png converted using catimg&#34; title=&#34;lenna.png converted using catimg&#34;&gt;
&lt;img src=&#34;../../uploads/lenna.catimg-bash.png&#34; alt=&#34;lenna.png converted using catimg-bash&#34; title=&#34;lenna.png converted using catimg-bash&#34;&gt;
&lt;img src=&#34;../../uploads/lenna.img-cat.png&#34; alt=&#34;lenna.png converted using img-cat&#34; title=&#34;lenna.png converted using img-cat&#34;&gt;
&lt;img src=&#34;../../uploads/lenna.img2txt.png&#34; alt=&#34;lenna.png converted using img2txt&#34; title=&#34;lenna.png converted using img2txt&#34;&gt;
&lt;img src=&#34;../../uploads/lenna.jp2a.png&#34; alt=&#34;lenna.png converted using jp2a&#34; title=&#34;lenna.png converted using jp2a&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;nyanpng&#34;&gt;nyan.png&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../../uploads/nyan.original.png&#34; alt=&#34;nyan.png converted using original&#34; title=&#34;nyan.png converted using original&#34;&gt;
&lt;img src=&#34;../../uploads/nyan.img2xterm.png&#34; alt=&#34;nyan.png converted using img2xterm&#34; title=&#34;nyan.png converted using img2xterm&#34;&gt;
&lt;img src=&#34;../../uploads/nyan.util-say.png&#34; alt=&#34;nyan.png converted using util-say&#34; title=&#34;nyan.png converted using util-say&#34;&gt;
&lt;img src=&#34;../../uploads/nyan.catimg.png&#34; alt=&#34;nyan.png converted using catimg&#34; title=&#34;nyan.png converted using catimg&#34;&gt;
&lt;img src=&#34;../../uploads/nyan.catimg-bash.png&#34; alt=&#34;nyan.png converted using catimg-bash&#34; title=&#34;nyan.png converted using catimg-bash&#34;&gt;
&lt;img src=&#34;../../uploads/nyan.img-cat.png&#34; alt=&#34;nyan.png converted using img-cat&#34; title=&#34;nyan.png converted using img-cat&#34;&gt;
&lt;img src=&#34;../../uploads/nyan.img2txt.png&#34; alt=&#34;nyan.png converted using img2txt&#34; title=&#34;nyan.png converted using img2txt&#34;&gt;
&lt;img src=&#34;../../uploads/nyan.jp2a.png&#34; alt=&#34;nyan.png converted using jp2a&#34; title=&#34;nyan.png converted using jp2a&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/rossy/img2xterm&#34;&gt;img2xterm&lt;/a&gt; stands out to me as the most
accurate and true to the original, with &lt;a href=&#34;https://github.com/maandree/util-say/&#34;&gt;util-say&lt;/a&gt;
as a close second. Both of these tools understand &amp;ldquo;&lt;a href=&#34;http://www.theasciicode.com.ar/extended-ascii-code/bottom-half-block-ascii-code-220.html&#34;&gt;half-block&lt;/a&gt;&amp;rdquo;
characters with two colors, effectively doubling the horizontal resolution of the resulting
characters. (two colors per &amp;ldquo;pixel&amp;rdquo;)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/posva/catimg&#34;&gt;catimg&lt;/a&gt; and &lt;a href=&#34;https://github.com/saikobee/img-cat/&#34;&gt;img-cat&lt;/a&gt;
both have good color representation, but lack the additional resolution compared to the
other tools, giving it a more &amp;ldquo;pixelated&amp;rdquo; look.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://manpages.ubuntu.com/manpages/hardy/man1/img2txt.1.html&#34;&gt;img2txt&lt;/a&gt; and &lt;a href=&#34;https://csl.name/jp2a/&#34;&gt;jp2a&lt;/a&gt;
are &amp;ldquo;true ascii&amp;rdquo; tools, they are really not in the same league as the others. I included them
here for completeness.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Playing with IPv6 Over Bluetooth Low Energy (6LoWPAN)</title>
      <link>/Playing-with-IPv6-Over-Bluetooth-Low-Energy-6LoWPAN/</link>
      <pubDate>Sun, 14 Jun 2015 18:18:03 +0000</pubDate>
      <guid>/Playing-with-IPv6-Over-Bluetooth-Low-Energy-6LoWPAN/</guid>
      <description>&lt;p&gt;I like Bluetooth Low Energy (BTLE). I also like IPv6. Did you know you could but both together?&lt;/p&gt;
&lt;p&gt;Technically 6LoWPAN&lt;/p&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;modprobe bluetooth_6lowpan
echo &#39;bluetooth_6lowpan&#39; &amp;gt;&amp;gt; /etc/modules
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;establishing-the-connection&#34;&gt;Establishing the Connection&lt;/h2&gt;
&lt;h3 id=&#34;set-the-bluetooth-l2cap-psm&#34;&gt;Set the Bluetooth L2CAP PSM&lt;/h3&gt;
&lt;p&gt;First you need to set the Protocol/Service Multiplexer value on both sides to &amp;ldquo;62&amp;rdquo; (0x3E) on both sides:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo 62 &amp;gt; /sys/kernel/debug/bluetooth/6lowpan_psm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This PSM value lets the driver know that you are going to multiplex this special
new protocol on top of whatever your bluetooth device mith also be doing.&lt;/p&gt;
&lt;p&gt;0x25 is the magic value for &amp;ldquo;Internet Protocol Support Profile&amp;rdquo;
&lt;a href=&#34;https://www.bluetooth.org/en-us/specification/assigned-numbers/logical-link-control&#34;&gt;https://www.bluetooth.org/en-us/specification/assigned-numbers/logical-link-control&lt;/a&gt;
which I think is supposed to be the correct value?&lt;/p&gt;
&lt;p&gt;0x3E is some sort of temporary value I had to use to get this working, as 0x25 ended up
as a being not supported per the messages in my wireshark dump.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not aware of any other way to set it other than this kernel debug setting.&lt;/p&gt;
&lt;h3 id=&#34;making-the-slave-advertise&#34;&gt;Making the slave advertise&lt;/h3&gt;
&lt;p&gt;The slave must be doing Low-Energy advertisements in order for the master to connect to it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hciconfig hci0 leadv
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;connect&#34;&gt;Connect&lt;/h3&gt;
&lt;p&gt;On the master you should be able to watch the slave advertise:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;⮀hcitool lescan
LE Scan ...
C4:85:08:31:XX:XX (unknown)
C4:85:08:31:XX:XX ubuntu-0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Establish a connection from the master to the slave:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &amp;quot;connect C4:85:08:31:XX:XX 1&amp;quot; &amp;gt;/sys/kernel/debug/bluetooth/6lowpan_control
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Afterwards a bt0 device should show up in ifconfig. Run &lt;code&gt;hcitool conn&lt;/code&gt; to verify
a connection is actually established. Use wireshark on bluetooth mon mode on the
hci device to confirm commands are being sent.&lt;/p&gt;
&lt;p&gt;The proof is in the ping:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~ ⮀ # ⮀ping6 fe80::1610:9fff:fee0:1432%bt0
PING fe80::1610:9fff:fee0:1432%bt0(fe80::1610:9fff:fee0:1432) 56 data bytes
64 bytes from fe80::1610:9fff:fee0:1432: icmp_seq=1 ttl=64 time=158 ms
64 bytes from fe80::1610:9fff:fee0:1432: icmp_seq=2 ttl=64 time=236 ms
64 bytes from fe80::1610:9fff:fee0:1432: icmp_seq=3 ttl=64 time=113 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;problems&#34;&gt;Problems&lt;/h2&gt;
&lt;p&gt;After a small number of packets, the connection seems to drop, and on the master side
I get:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[  368.947193] Bluetooth: hci0 link tx timeout
[  368.947202] Bluetooth: hci0 killing stalled connection c4:85:08:31:XX:XX
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No matter what rmmod or stopping I tried, a reboot was the only thing I could to
rebuild the connection. Obviously this is pretty new stuff, hopefully it will
stabilize in later versions of the kernel.&lt;/p&gt;
&lt;p&gt;At this time though, on 3.19.0-21-generic (Ubuntu Vivid), this feature is not
yet usable.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Etherhouse Part 2 - Software</title>
      <link>/Etherhouse-Part-2-Software/</link>
      <pubDate>Sun, 16 Nov 2014 16:28:24 +0000</pubDate>
      <guid>/Etherhouse-Part-2-Software/</guid>
      <description>&lt;p&gt;The software that powers the Etherhouse project is open source. This blog
post describes that software and how it interacts with all the pieces.&lt;/p&gt;
&lt;h2 id=&#34;client&#34;&gt;Client&lt;/h2&gt;
&lt;p&gt;You can see the &lt;a href=&#34;https://github.com/solarkennedy/ether_house&#34;&gt;Client software&lt;/a&gt;
that runs on the Arduino. This uses one external library and is in the native
Arduino C++.&lt;/p&gt;
&lt;p&gt;The Arduino runs a limited TCP/IP stack and interacts with the http api.&lt;/p&gt;
&lt;p&gt;The code plenty of defensive code in place to ensure the client continues to run
without interruption or interaction. No one should need to &amp;ldquo;turn it off and on
again.&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;server&#34;&gt;Server&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/solarkennedy/ether_housed&#34;&gt;Server software&lt;/a&gt; is also open
source.&lt;/p&gt;
&lt;p&gt;In designing the software, I aimed for longevity. I want the software to
continue to run for many years without maintenance. I decided to use golang.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go binaries are statically compiled, which means the same binary I compile now
will continue to run on new platforms for years to come.&lt;/li&gt;
&lt;li&gt;With godeps I can include all compatible libraries together with no external
dependencies, regardless of their long term state.&lt;/li&gt;
&lt;li&gt;I use Heroku to deploy the code. Heroku is free for small installs and a
stable platform. They can probably keep this server up better than I can.&lt;/li&gt;
&lt;li&gt;I use a DNS name I can control for service discovery. This gives me the
flexibility to change platforms over time if necissary.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Etherhouse Part 1 - Hardware</title>
      <link>/Etherhouse-Part-1-Hardware/</link>
      <pubDate>Sun, 16 Nov 2014 15:59:56 +0000</pubDate>
      <guid>/Etherhouse-Part-1-Hardware/</guid>
      <description>&lt;p&gt;Etherhouse a project of mine involving eight Christmas gifts. Each gift
involved a display of some model houses made from folded paper, each
representing the home of a friend or family member.&lt;/p&gt;
&lt;p&gt;The houses light up, depending on whether that family member is home or not.
Their presence is detected based on if their smartphone is on the same network
the etherhouse is on.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&#34;https://github.com/solarkennedy/ether_house#hardware&#34;&gt;GitHub&lt;/a&gt; page
for more details.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Getting Started Puppet Acceptance Tests With Beaker</title>
      <link>/Getting-Started-Puppet-Acceptance-Tests-With-Beaker/</link>
      <pubDate>Sun, 11 May 2014 10:18:56 +0000</pubDate>
      <guid>/Getting-Started-Puppet-Acceptance-Tests-With-Beaker/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/puppetlabs/beaker&#34;&gt;Beaker&lt;/a&gt; is a test framework created by
Puppetlabs to run tests against puppet modules on real servers (vm, containers
whatever) and test that they do what they say they should do.&lt;/p&gt;
&lt;p&gt;This is a quick tutorial on how to use this framework. At the time of this
writing, Beaker is under heavy development, so this could all change.&lt;/p&gt;
&lt;h2 id=&#34;the-gem&#34;&gt;The Gem&lt;/h2&gt;
&lt;p&gt;The first thing you need to do is install beaker. Usually this is as simple as
adding it to your Gemfile and running &lt;code&gt;bundle install&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gem &#39;beaker&#39;
gem &#39;beaker-rspec&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I recommend using &lt;a href=&#34;http://www.morethanseven.net&#34;&gt;grethr&lt;/a&gt;&amp;lsquo;s
&lt;a href=&#34;https://github.com/garethr/puppet-module-skeleton/blob/master/skeleton/Gemfile&#34;&gt;puppet module skeleton Gemfile&lt;/a&gt;
, which includes Beaker already.&lt;/p&gt;
&lt;p&gt;Now install it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;acceptance-boilerplate&#34;&gt;Acceptance Boilerplate&lt;/h2&gt;
&lt;h3 id=&#34;rspec-and-the-puppetlabs-helper&#34;&gt;Rspec and the Puppetlabs Helper&lt;/h3&gt;
&lt;p&gt;This tutorial assumes you already have the puppetlabs_spec_helper installed,
rake, rspec, etc.&lt;/p&gt;
&lt;h3 id=&#34;folder-for-tests&#34;&gt;Folder For Tests&lt;/h3&gt;
&lt;p&gt;You need a place to put acceptance tests. They must go in&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;module_root/spec/acceptance/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See &lt;a href=&#34;https://github.com/puppetlabs/puppetlabs-mysql/tree/master/spec/acceptance&#34;&gt;puppetlabs-mysql&lt;/a&gt;
for an example of what it looks like.&lt;/p&gt;
&lt;h3 id=&#34;nodesets&#34;&gt;Nodesets&lt;/h3&gt;
&lt;p&gt;You must have at least a default.yml in the nodesets folder inside your
acceptance folder. Here is an example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# consul/spec/acceptance/nodesets/default.yml
HOSTS:
  ubuntu-12-04:
    platform: ubuntu-12.04-x64
    image: solarkennedy/ubuntu-12.04-puppet
    hypervisor: docker
CONFIG:
  type: foss
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can have different yaml files for different platforms you wish to test
against. The format is described in the
&lt;a href=&#34;https://github.com/puppetlabs/beaker/wiki/Creating-A-Test-Environment&#34;&gt;Beaker wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I use my own docker files for speed, as they come preinstalled with the
the &lt;a href=&#34;https://github.com/puppetlabs/beaker/wiki/Creating-A-Test-Environment#host-requirements&#34;&gt;Beaker Host Requirements&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: If you use docker, you cannot test service things because there is
no init running inside the container. For comprehensive testing against things
like services, firewalls, etc, you must use a true hypervisor with Vagrant.&lt;/p&gt;
&lt;h3 id=&#34;acceptance-spec-helper&#34;&gt;Acceptance Spec Helper&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# consul/spec/spec_helper_acceptance.rb&lt;/span&gt;
require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;beaker-rspec&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Not needed for this example as our docker files have puppet installed already&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#hosts.each do |host|&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  # Install Puppet #  install_puppet&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;RSpec&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;configure &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Project root&lt;/span&gt;
  proj_root &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;expand_path(&lt;span style=&#34;color:#66d9ef&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(&lt;span style=&#34;color:#66d9ef&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dirname(__FILE__), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;..&amp;#39;&lt;/span&gt;))

  &lt;span style=&#34;color:#75715e&#34;&gt;# Readable test descriptions&lt;/span&gt;
  c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;formatter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:documentation&lt;/span&gt;

  &lt;span style=&#34;color:#75715e&#34;&gt;# Configure all nodes in nodeset&lt;/span&gt;
  c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;before &lt;span style=&#34;color:#e6db74&#34;&gt;:suite&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# Install module and dependencies&lt;/span&gt;
    puppet_module_install(&lt;span style=&#34;color:#e6db74&#34;&gt;:source&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; proj_root, &lt;span style=&#34;color:#e6db74&#34;&gt;:module_name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;consul&amp;#39;&lt;/span&gt;)
    hosts&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;each &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;host&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
      &lt;span style=&#34;color:#75715e&#34;&gt;# Needed for the consul module to download the binary per the modulefile&lt;/span&gt;
      on host, puppet(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;module&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;install&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;puppetlabs-stdlib&amp;#39;&lt;/span&gt;), { &lt;span style=&#34;color:#e6db74&#34;&gt;:acceptable_exit_codes&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; }
      on host, puppet(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;module&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;install&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nanliu/staging&amp;#39;&lt;/span&gt;), { &lt;span style=&#34;color:#e6db74&#34;&gt;:acceptable_exit_codes&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The spec helper does the tasks needed in order to prepare your SUT (system
under test). This might include installing puppet, installing your puppet
module dependencies, etc.&lt;/p&gt;
&lt;h2 id=&#34;example-acceptance-test&#34;&gt;Example Acceptance Test&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# module_root/spec/acceptance/standard_spec.rb&lt;/span&gt;
require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;spec_helper_acceptance&amp;#39;&lt;/span&gt;

describe &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;consul class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;

  context &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;default parameters&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# Using puppet_apply as a helper&lt;/span&gt;
    it &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;should work with no errors based on the example&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
      pp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;-EOS
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;        file { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/opt/consul/&amp;#39;&lt;/span&gt;:
          &lt;span style=&#34;color:#66d9ef&#34;&gt;ensure&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;directory&amp;#39;&lt;/span&gt;,
          owner  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;consul&amp;#39;&lt;/span&gt;,
          group  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;,
        } &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;consul&amp;#39;&lt;/span&gt;:
          config_hash &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datacenter&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;east-aws&amp;#39;&lt;/span&gt;,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data_dir&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/opt/consul&amp;#39;&lt;/span&gt;,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;log_level&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;INFO&amp;#39;&lt;/span&gt;,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;node_name&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;foobar&amp;#39;&lt;/span&gt;,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;server&amp;#39;&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
          }
        }
      &lt;span style=&#34;color:#66d9ef&#34;&gt;EOS&lt;/span&gt;

      &lt;span style=&#34;color:#75715e&#34;&gt;# Run it twice and test for idempotency&lt;/span&gt;
      expect(apply_manifest(pp)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit_code)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_not eq(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
      expect(apply_manifest(pp)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit_code)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to eq(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

    describe service(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;consul&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
      it { should be_enabled }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

    describe command(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;consul version&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
      it { should return_stdout &lt;span style=&#34;color:#e6db74&#34;&gt;/Consul v0\.2\.0/&lt;/span&gt; }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The filename is important, it must end in _spec.rb in order for the test
harness to detect it. You can see that there are many
&lt;a href=&#34;http://serverspec.org/resource_types.html&#34;&gt;matchers&lt;/a&gt; you can use to run
pretty much any kind of test you can think of.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&#34;https://github.com/puppetlabs/puppetlabs-mysql/tree/master/spec/acceptance&#34;&gt;puppetlabs-mysql&lt;/a&gt;
collection again for some great examples.&lt;/p&gt;
&lt;h2 id=&#34;running-them&#34;&gt;Running Them&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;bundle exec rake acceptance
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This command will spin up your described servers in nodesets, install your
puppet modules and dependencies, and test your assertions.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Acceptance tests should be used sparingly, they are the top of the testing
&lt;a href=&#34;http://martinfowler.com/bliki/TestPyramid.html&#34;&gt;testing pyramid&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;They are slow, touch the disks and network, and depend on external resources.
The example mysql acceptance tests literally install mysql, install and
configure databases, and assert that they exist.&lt;/p&gt;
&lt;p&gt;They will may be slow, but they can be very helpful, and potentially the
only way to really test functionality of a puppet module in an end-to-end
way.&lt;/p&gt;
&lt;p&gt;Puppet is a system configuration management tool. Unit tests can only go
so far to make sure the compiled catalog is &amp;ldquo;correct&amp;rdquo;. Puppet acceptance
tests can help you go 100% and ensure that your module literally does
what it says it does by running tests against actual systems, files,
packages, and services.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Managing Ssh Known Hosts With-Serf</title>
      <link>/Managing-Ssh-Known-Hosts-With-Serf/</link>
      <pubDate>Sun, 06 Apr 2014 05:33:58 +0000</pubDate>
      <guid>/Managing-Ssh-Known-Hosts-With-Serf/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.serfdom.io/&#34;&gt;Serf&lt;/a&gt; is a very interesting service discovery mechanism.
Its dynamic membership and tags capability make it very flexible. Can we use it
to generate a centralized &lt;code&gt;ssh_known_hosts&lt;/code&gt; file?&lt;/p&gt;
&lt;h2 id=&#34;installing-and-configuring-serf&#34;&gt;Installing and Configuring Serf&lt;/h2&gt;
&lt;p&gt;I like to use configuration management to manage servers. Here I use a
&lt;a href=&#34;https://github.com/justinclayton/puppet-module-serf&#34;&gt;Puppet module&lt;/a&gt; to
install and configure Serf:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;serf&amp;#39;&lt;/span&gt;:
  config_hash   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {  
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;node_name&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $:&lt;span style=&#34;color:#e6db74&#34;&gt;:fqdn&lt;/span&gt;, 
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tags&amp;#39;&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sshrsakey&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $:&lt;span style=&#34;color:#e6db74&#34;&gt;:sshrsakey&lt;/span&gt;
    },          
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;discover&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cluster&amp;#39;&lt;/span&gt;,
  }     
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This particular module uses a hash to translate directly into the &lt;code&gt;config.json&lt;/code&gt;
file on disk. Notice how I&amp;rsquo;m using the new &lt;code&gt;tags&lt;/code&gt; feature, and adding a &lt;code&gt;sshrsakey&lt;/code&gt;
tag, populated by Puppet&amp;rsquo;s facts.&lt;/p&gt;
&lt;h2 id=&#34;querying-the-cluster&#34;&gt;Querying The Cluster&lt;/h2&gt;
&lt;p&gt;Once the servers have Serf installed and configured, the cluster can be queried
using the serf command line tool:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ serf members
server1.xkyle.com    192.168.1.67:7946    alive    sshrsakey=AAAA...
server2.xkyle.com    192.168.1.69:7946    alive    sshrsakey=AAAA...
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;using-the-data&#34;&gt;Using the Data&lt;/h2&gt;
&lt;p&gt;Lets use this data to write out our &lt;code&gt;/etc/ssh/ssh\_known\_hosts&lt;/code&gt; file,
emulating the the functionality of ssh-keyscan:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ serf members -format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;json | jq -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.members | .[] | &amp;#34;\(.name) ssh-rsa \(.tags[])&amp;#34; &amp;#39;&lt;/span&gt; | tee /etc/ssh/ssh_known_hosts
server1.xkyle.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDTfPpmHhc+LoD05puxC...
server2.xkyle.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCmzk+Chzrq73c5ytU9I...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So&amp;hellip; you can see I&amp;rsquo;m using &lt;a href=&#34;http://stedolan.github.io/jq/manual/&#34;&gt;jq&lt;/a&gt; to
manipulate the JSON ouput of the serf command. I&amp;rsquo;m not super proud of it,
but it works.&lt;/p&gt;
&lt;p&gt;Lets see if we can use a script instead? Serf provides and
&lt;a href=&#34;http://www.serfdom.io/docs/agent/rpc.html&#34;&gt;RPC protocol&lt;/a&gt; to interact with
it programmatically:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env ruby&lt;/span&gt;
require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;serf/client&amp;#39;&lt;/span&gt;
client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Serf&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Client&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect &lt;span style=&#34;color:#e6db74&#34;&gt;address&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;7373&lt;/span&gt;
members &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;members&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;body&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Members&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
puts members&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;collect { &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; ssh-rsa &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  x&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Tags&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sshrsakey&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Of course, no error handling or anything. This script achieves the same
result using the &lt;a href=&#34;https://rubygems.org/gems/serf-client&#34;&gt;serf-client ruby gem&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are libraries to connect to the Serf RPC directly for many languages,
or you can do it yourself using the &lt;a href=&#34;http://msgpack.org/rpc/rdoc/current/MessagePack/RPC.html&#34;&gt;msgpack RPC library&lt;/a&gt;
to communicate directly on the tcp socket.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This is just the beginning. Serf allows retrieving the status of members, but
also can spawn programs (handlers) whenever members
&lt;a href=&#34;http://www.serfdom.io/docs/agent/event-handlers.html&#34;&gt;join or leave&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Additionally you can invoke &lt;a href=&#34;http://www.serfdom.io/docs/commands/event.html&#34;&gt;custom events&lt;/a&gt;
for your own uses, like code deploys.&lt;/p&gt;
&lt;p&gt;If you can deal with an &lt;a href=&#34;https://en.wikipedia.org/wiki/CAP_theorem&#34;&gt;AP&lt;/a&gt; discovery
and orchistration system, then Serf could be a foundation for building great things!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>What Happens When You Run Puppet Tests</title>
      <link>/What-Happens-When-You-Run-Puppet-Tests/</link>
      <pubDate>Mon, 31 Mar 2014 05:33:58 +0000</pubDate>
      <guid>/What-Happens-When-You-Run-Puppet-Tests/</guid>
      <description>&lt;h2 id=&#34;breaking-down-bundle-exec-rake-spec&#34;&gt;Breaking down bundle exec rake spec&lt;/h2&gt;
&lt;p&gt;What is happening when you run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;bundle exec rake spec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;bundle&#34;&gt;Bundle&lt;/h4&gt;
&lt;p&gt;The first command you are running is &lt;a href=&#34;http://bundler.io/&#34;&gt;bundle&lt;/a&gt;. Bundle is
kinda like virtualenv for Ruby. It makes sure that you use the same ruby
libraries that you, everyone, and puppetmasters use.&lt;/p&gt;
&lt;p&gt;Bundle uses a Gemfile, and searches downwards. As long as you have the Gemfile
in the puppet repo, it will work.&lt;/p&gt;
&lt;h4 id=&#34;exec&#34;&gt;Exec&lt;/h4&gt;
&lt;p&gt;The second part is exec. Exec is an argument to bundle, it simply means run a
command. Because you are running it in a “bundled” environment, it runs the
next command that is part of your bundle, with the ruby libraries in your
Gemfile.&lt;/p&gt;
&lt;h4 id=&#34;rake&#34;&gt;Rake&lt;/h4&gt;
&lt;p&gt;The third part is rake.  Rake is like Make for Ruby. It requires a Rakefile.
Each puppet module needs a Rakefile.&lt;/p&gt;
&lt;p&gt;You don’t need to re-invent the Rakefile, simply have this in it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;puppetlabs_spec_helper/rake_tasks&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This ensures that we are all running tests in the same way.&lt;/p&gt;
&lt;h4 id=&#34;spec&#34;&gt;Spec&lt;/h4&gt;
&lt;p&gt;Spec is a “rake task” that runs Rspec. Rspec is a ruby testing framework.
Rspec + puppet-rspec is a whole other thing described Next Section.&lt;/p&gt;
&lt;h2 id=&#34;how-does-rspec-test-puppet-code&#34;&gt;How does Rspec Test Puppet Code?&lt;/h2&gt;
&lt;p&gt;If you are running bundle exec rake spec, rspec takes over in the environment
provided by bundler. It gives you all the gems necissary to do the job, but
how does Rspec know about Puppet Code?&lt;/p&gt;
&lt;p&gt;If you are including the puppetlabs_spec_helper/rake_tasks, your
&lt;a href=&#34;https://github.com/puppetlabs/puppetlabs_spec_helper/blob/master/lib/puppetlabs_spec_helper/rake_tasks.rb#L106&#34;&gt;exact task&lt;/a&gt;
includes the prep/test/clean stuff.&lt;/p&gt;
&lt;p&gt;You need some boilerplate files in place for rspec-puppet tests to run. You can
either run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rspec-puppet-init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or you can &lt;a href=&#34;http://rspec-puppet.com/setup/&#34;&gt;manually setup&lt;/a&gt; the files and folders.
Here I will describe the minimal set of files you need:&lt;/p&gt;
&lt;h3 id=&#34;fixturesyml&#34;&gt;.fixtures.yml&lt;/h3&gt;
&lt;p&gt;.fixtures.yml is a puppet_spec_helper construct that allows you to symlink in
other modules that might be required to test your code. For example you might
require functions from the stdlib. How does Rspec know where stdlib is?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fixtures&lt;/span&gt;:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;repositories&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;stdlib&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git://github.com/puppetlabs/puppetlabs-stdlib.git&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;symlinks&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;your_module&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#{source_dir}&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When rspec runs the preparation parts, the spec_helper will create symlinks,
or &lt;a href=&#34;https://github.com/puppetlabs/puppetlabs_spec_helper#fixtures-examples&#34;&gt;clone repos, or whatever.&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;specspec_helperrb&#34;&gt;spec/spec_helper.rb&lt;/h3&gt;
&lt;p&gt;spec/spec_helper.rb is a file you need in place for your rspec tests to reference.
If you are using the puppetlabs_spec_helper gem, it is only one line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;puppetlabs_spec_helper/module_spec_helper&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This spec_helper.rb file can now be referenced, and by doing so will
allow Ruby to import all of the puppet-specific Rspec matchers it needs to
function.&lt;/p&gt;
&lt;p&gt;For example, at the top of every Rspec ruby file you should see something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;spec_helper&amp;#39;&lt;/span&gt;

describe &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;my_module&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;

  it { should compile }

&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;directory-structure&#34;&gt;Directory structure&lt;/h3&gt;
&lt;p&gt;Putting files in the right places allows Rspec to autodetect them. Giving them a
conventional name allows rspec to glob them.&lt;/p&gt;
&lt;p&gt;As the scope of your testing increases, a well-organized directory structure is
essential:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;├── spec
│   ├── classes
│   │   └── example_spec.rb
│   ├── defines
│   ├── functions
│   ├── hosts
│   ├── spec_helper.rb
│   ├── spec_helper_system.rb
│   └── system
│       └── basic_spec.rb
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;the-tests&#34;&gt;The Tests&lt;/h3&gt;
&lt;p&gt;How to write puppet tests is outside the scope of this particular blog post.&lt;/p&gt;
&lt;p&gt;I recommend looking at solid examples from puppetlabs&amp;rsquo; github, or right from the
&lt;a href=&#34;http://rspec-puppet.com/tutorial/&#34;&gt;offical documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But essentially, Rspec runs puppet in a noop mode, only generating a catelog
of what it would do. Then the rspec tests use &lt;a href=&#34;http://rspec-puppet.com/matchers/&#34;&gt;matchers&lt;/a&gt;
to describe assertions against the catelog.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Writing Purgable Puppet Code</title>
      <link>/Writing-Purgable-Puppet-Code/</link>
      <pubDate>Wed, 29 Jan 2014 05:33:58 +0000</pubDate>
      <guid>/Writing-Purgable-Puppet-Code/</guid>
      <description>&lt;p&gt;Whenever possible, I try to write Puppet code that is purgable and
&amp;ldquo;Comment Safe&amp;rdquo;. That is not a very good description. What I mean is, Puppet
code that removes resources from a system when the corresponding Puppet
code is &amp;ldquo;Commented&amp;rdquo; out of a manifest. Lets look at a few examples.&lt;/p&gt;
&lt;h3 id=&#34;example-managed-sudo&#34;&gt;Example: Managed Sudo&lt;/h3&gt;
&lt;p&gt;Lets say you used this &lt;a href=&#34;https://forge.puppetlabs.com/saz/sudo&#34;&gt;popular sudo module&lt;/a&gt;
with the following params:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sudo&amp;#39;&lt;/span&gt;:
  purge &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Great start. All future &lt;code&gt;sudo::conf&lt;/code&gt; blocks you write will &lt;em&gt;automatically&lt;/em&gt; disappear
from the host:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;sudo&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;conf { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;web&amp;#39;&lt;/span&gt;:
   source &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;puppet:///files/etc/sudoers.d/web&amp;#39;&lt;/span&gt;,
 }
 
&lt;span style=&#34;color:#75715e&#34;&gt;# Commenting out for now. Automatically is purged from the server&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# sudo::conf { &amp;#39;admins&amp;#39;:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   priority =&amp;gt; 10,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   content  =&amp;gt; &amp;#34;%admins ALL=(ALL) NOPASSWD: ALL&amp;#34;,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Good stuff. Do this.&lt;/p&gt;
&lt;h3 id=&#34;example-managed-firewall&#34;&gt;Example: Managed Firewall&lt;/h3&gt;
&lt;p&gt;How about another example with the
&lt;a href=&#34;https://forge.puppetlabs.com/puppetlabs/firewall&#34;&gt;Puppetlabs Firewall module&lt;/a&gt;?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Automatically remove rules that are not declared&lt;/span&gt;
resources { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;firewall&amp;#34;&lt;/span&gt;:
  purge &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
} 

&lt;span style=&#34;color:#75715e&#34;&gt;# Production needs 111 open&lt;/span&gt;
firewall { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;111 open port 111&amp;#39;&lt;/span&gt;:
  dport &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;
}
&lt;span style=&#34;color:#75715e&#34;&gt;# Tried this but didn&amp;#39;t work. Commenting out for now&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Automatically removed from the server when I commented it out&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# firewall { &amp;#39;112 open port 112&amp;#39;:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   dport =&amp;gt; 112&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;the-point&#34;&gt;The Point?&lt;/h3&gt;
&lt;p&gt;The point here is that we should encourage a culture of purging. Having
resources get automatically purged when you comment them out from puppet
is great.&lt;/p&gt;
&lt;p&gt;Of course, this is obsoleted in the short-lived world of docker or possibly
Amazon EC2. But for those engineers who work on long lived servers, this
prevents cruft.&lt;/p&gt;
&lt;h3 id=&#34;going-further-purging-packages&#34;&gt;Going Further: Purging Packages&lt;/h3&gt;
&lt;p&gt;I want to purge packages. If someone installs a package not controlled by
Puppet, I want puppet to purge it. Crazy I know.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;package { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;apache&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;ensure&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; installed }

&lt;span style=&#34;color:#75715e&#34;&gt;# No longer using php&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# But puppet leaves this behind!&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# package { &amp;#39;php5&amp;#39;: ensure =&amp;gt; installed }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Of course puppet will leave the package behind. I should be doing &lt;code&gt;ensure =&amp;gt; purged&lt;/code&gt;
right?&lt;/p&gt;
&lt;p&gt;But what if the package is deep within nested classes or simply manually installed?&lt;/p&gt;
&lt;p&gt;Some day I would like to get to the point where I at least get notified when
puppet detects packages that don&amp;rsquo;t need to be there. I&amp;rsquo;m open to suggestions on
how to do this.&lt;/p&gt;
&lt;h3 id=&#34;going-further-purging-etc&#34;&gt;Going Further: Purging /etc/&lt;/h3&gt;
&lt;p&gt;Most of the time stale configuration leftover in /etc/ causes no harm.&lt;/p&gt;
&lt;p&gt;But what about cron jobs in &lt;code&gt;/etc/cron.d&lt;/code&gt;? I would love to purge them, but there
are non-puppet controlled things installed by system packages. If &lt;em&gt;everything&lt;/em&gt; was
a puppet module this could eventually be achieved, but it would be too hard
to keep in sync with upstream package changes.&lt;/p&gt;
&lt;p&gt;Purgin on a per-app basis with things like &lt;a href=&#34;https://github.com/sensu/sensu-puppet&#34;&gt;sensu&lt;/a&gt;,
&lt;a href=&#34;https://forge.puppetlabs.com/puppetlabs/apache&#34;&gt;apache&lt;/a&gt;, and &lt;a href=&#34;https://forge.puppetlabs.com/saz/sudo&#34;&gt;sudo&lt;/a&gt;
are a great start.&lt;/p&gt;
&lt;h3 id=&#34;crossing-the-line-purging-varlibmysql&#34;&gt;Crossing the Line: Purging /var/lib/mysql&lt;/h3&gt;
&lt;p&gt;Seems like if you asked puppet to install mysql databases, and then
commented them out, you would &lt;em&gt;not&lt;/em&gt; want puppet to purge them.&lt;/p&gt;
&lt;p&gt;The subtle difference here might be the difference between &lt;strong&gt;configuration&lt;/strong&gt; and
&lt;strong&gt;data&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Whenever possible I try to &lt;code&gt;purge =&amp;gt; true&lt;/code&gt; on whatever I can. I would like to see
this as the &lt;strong&gt;default&lt;/strong&gt; in new puppet modules.&lt;/p&gt;
&lt;p&gt;Someday I would like us to purge more than just files and iptables rules.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Introducing sensu-shell-helper!</title>
      <link>/Introducing-sensu-shell-helper/</link>
      <pubDate>Sun, 15 Dec 2013 09:12:26 +0000</pubDate>
      <guid>/Introducing-sensu-shell-helper/</guid>
      <description>&lt;h2 id=&#34;the-problem&#34;&gt;The Problem&lt;/h2&gt;
&lt;p&gt;The barrier to writing Nagios checks is high. I dare say &lt;em&gt;very&lt;/em&gt; high. You have
to think about check intervals, host groups, service groups, config files, etc.&lt;/p&gt;
&lt;p&gt;But, I know my servers are not behaving, if only there was a way to check them!
They run commands for me all the time. In the worst case they fail and no one
knows. The best case is that they end up in my cron spam folder&amp;hellip;.&lt;/p&gt;
&lt;h2 id=&#34;a-solution&#34;&gt;A Solution!&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/solarkennedy/sensu-shell-helper&#34;&gt;Sensu-shell-helper&lt;/a&gt;. It is
a small script I wrote to make it easier to monitor arbitrary commands with
Sensu. Here is how you use it&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sensu-shell-helper apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yes. That is it. No mandatory config options. Good defaults. Minimal overhead.
What does this check look like in the dashboard when it fails?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../uploads/sensu-helper-screenshot.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Exactly what I wanted. And of course, when apt-get update begins to work again,
the check will resolve itself.&lt;/p&gt;
&lt;h2 id=&#34;under-the-hood&#34;&gt;Under The Hood&lt;/h2&gt;
&lt;p&gt;sensu-shell-helper reall just takes in the output of the command you ask for,
tail&amp;rsquo;s it, then sends the result to localhost:3030, which the sensu-client
listens on.&lt;/p&gt;
&lt;p&gt;By default it does not specify any handlers. (But they can be specified on the
command line with -H) For the check-name it takes the full command and munges
it to pass the sensu validator. Duplicate instances of the exact same command
on a particular host will be seen as a single &amp;ldquo;check&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Most commands do not return 0,1,2,3 according to the
&lt;a href=&#34;http://sensuapp.org/docs/0.12/checks&#34;&gt;Sensu&lt;/a&gt; /
&lt;a href=&#34;https://www.nagios-plugins.org/doc/guidelines.html#AEN78&#34;&gt;Nagios plugin API&lt;/a&gt;,
so the sensu-shell-helper will emit 2 (critical) in the event that the
shell command returns anything non-zero. This behavior can be overridden
with -N in the case that your command does conform to the 0,1,2,3 spec.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Saying Goodbye to Wordpress</title>
      <link>/Saying-Goodbye-to-Wordpress/</link>
      <pubDate>Sun, 01 Dec 2013 21:40:42 +0000</pubDate>
      <guid>/Saying-Goodbye-to-Wordpress/</guid>
      <description>&lt;h2 id=&#34;its-been-a-great-ride&#34;&gt;It&amp;rsquo;s Been a Great Ride&lt;/h2&gt;
&lt;p&gt;There is no doubt that Wordpress is a great piece of software. As much as people love to hate on PHP, it runs a lot of the internet.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve been running Wordpress personally and professionally for years. It only gets better. I was only hacked once :)&lt;/p&gt;
&lt;h2 id=&#34;rethinking-what-i-need&#34;&gt;Rethinking What I Need&lt;/h2&gt;
&lt;p&gt;Since moving to a &lt;a href=&#34;http://lowendbox.com/&#34;&gt;Low End Box&lt;/a&gt;, my resources have been tight. Even on a tuned system, I can&amp;rsquo;t run much more interesting things than my Nginx+PHPfpm+MySQL.&lt;/p&gt;
&lt;p&gt;Right now I also have 32000 spam comments in my queue. &lt;a href=&#34;http://codex.wordpress.org/Plugins/Akismet&#34;&gt;Akismet&lt;/a&gt; does a great job, but I wonder if I even need it. All I really need is a tiny corner of the web, read only is ok.&lt;/p&gt;
&lt;h2 id=&#34;what-i-lose&#34;&gt;What I Lose&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Comments&lt;/li&gt;
&lt;li&gt;Cool plugins&lt;/li&gt;
&lt;li&gt;Well trusted codebase&lt;/li&gt;
&lt;li&gt;Easy to use gui&lt;/li&gt;
&lt;li&gt;Familiar Workflow&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-i-gain&#34;&gt;What I Gain&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Immutability and hackproof deployment&lt;/li&gt;
&lt;li&gt;Entire classes of server maintenance issues disappear&lt;/li&gt;
&lt;li&gt;Git!&lt;/li&gt;
&lt;li&gt;Grep-able blogs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;making-the-change&#34;&gt;Making The Change&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../../uploads/octopress-logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;m thankful for the excellent &lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt; software.&lt;/li&gt;
&lt;li&gt;I used &lt;a href=&#34;http://www.ericmichaelstone.com/?p=4607&#34;&gt;this XML export script&lt;/a&gt; to script my conversion repeatedly.&lt;/li&gt;
&lt;li&gt;I used the &lt;a href=&#34;https://github.com/thomasf/exitwp&#34;&gt;Exitwp&lt;/a&gt; to convert my wordpress XML tump&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Sensu Reports in your Motd with Puppet!</title>
      <link>/sensu-reports-in-your-motd-with-puppet/</link>
      <pubDate>Sat, 30 Nov 2013 00:19:24 +0000</pubDate>
      <guid>/sensu-reports-in-your-motd-with-puppet/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://sensuapp.org/&#34;&gt;Sensu&lt;/a&gt; is a pretty cool monitoring framework. The authors designed it to be configured by a configuration management system from the beginning. Check out how easily I can make it put a report in my motd with a little bit of python and puppet.&lt;/p&gt;
&lt;h2 id=&#34;the-report-script&#34;&gt;The Report Script&lt;/h2&gt;
&lt;p&gt;Sensu&amp;rsquo;s API is super easy to work with. For this I will be using the &lt;a href=&#34;http://sensuapp.org/docs/0.12/api-events&#34;&gt;Events&lt;/a&gt; endpoint. Here is a quick script to get the events for a host (&lt;a href=&#34;https://gist.github.com/solarkennedy/7713642&#34;&gt;gist&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python2&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;sys&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;urllib2&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;socket

GREEN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[92m&amp;#39;&lt;/span&gt;
RED &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[91m&amp;#39;&lt;/span&gt;
CLEAR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[0m&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; optparse &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; OptionParser
parser &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; OptionParser()
parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_option(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-s&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--server&amp;#34;&lt;/span&gt;, dest&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;server&amp;#34;&lt;/span&gt;,
                  help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sensu api server hostname&amp;#34;&lt;/span&gt;, default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sensu&amp;#39;&lt;/span&gt;)
parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_option(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-p&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--port&amp;#34;&lt;/span&gt;, dest&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;,
                  help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sensu server api port&amp;#34;&lt;/span&gt;, default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;4567&amp;#39;&lt;/span&gt;)
(options, args) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse_args()

response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; urllib2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;urlopen(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;server &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;port &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/events/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getfqdn())
data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;load(response)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(data) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed Sensu checks on this host:&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; entry &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; data:
      sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;   &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; RED &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; entry[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;check&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; entry[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;output&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; CLEAR )
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;: 
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;All Sensu checks &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; GREEN &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;green &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; CLEAR &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;for this host.&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;puppet-glue&#34;&gt; Puppet Glue&lt;/h2&gt;
&lt;p&gt;{% codeblock lang:ruby %}
file { &amp;lsquo;/usr/bin/sensu_report&amp;rsquo;:
mode   =&amp;gt; &amp;lsquo;0555&amp;rsquo;,
source =&amp;gt; &amp;lsquo;puppet:///files/sensu/sensu_report&amp;rsquo;,
} -&amp;gt;
cron { &amp;lsquo;sensu_report&amp;rsquo;:
command =&amp;gt; &amp;ldquo;/usr/bin/sensu_report -s $sensu_api_server &amp;gt; /etc/motd&amp;rdquo;,
minute  =&amp;gt; fqdn_rand(60),
} -&amp;gt;
sensu::check { &amp;ldquo;sensu_report&amp;rdquo;:
handlers    =&amp;gt; &amp;lsquo;default&amp;rsquo;,
command     =&amp;gt; &amp;lsquo;/usr/lib/nagios/plugins/check_file_age -w 7200 -c 21600 -f /etc/motd&amp;rsquo;,
subscribers =&amp;gt; &amp;lsquo;sensu-test&amp;rsquo;
}
{% endcodeblock %}&lt;/p&gt;
&lt;p&gt;You can see that there are three things going on here (gist &lt;a href=&#34;https://gist.github.com/solarkennedy/7713642&#34;&gt;here&lt;/a&gt;):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Puppet drops in the python report script &lt;strong&gt;file&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Only if the script is in place, it will setup the &lt;strong&gt;cronjob&lt;/strong&gt; to populate the motd&lt;/li&gt;
&lt;li&gt;And only if the cron job is in place, a &lt;strong&gt;sensu check&lt;/strong&gt; is installed to verify that it is indeed working (test driven system administration?).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/sensu_motd.png&#34;&gt;&lt;img src=&#34;../../uploads/sensu_motd.png&#34; alt=&#34;sensu_motd&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;coolness&#34;&gt;Coolness&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt; Puppet and Sensu make it easy to construct things like this. Wiring something like this manually with nagios would be a pain.&lt;/li&gt;
&lt;li&gt;Adding failed checks right in the MTOD increases visibility for them, while decreasing the brain overload of looking a huge sensu dashboard with tons of red that a random user may not care about.&lt;/li&gt;
&lt;li&gt;Putting checks in the MOTD makes it easy to disseminate information about what might be down on a host, to minimize support requests and increase transparency.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Managing DNS Automatically with Puppet</title>
      <link>/managing-dns-automatically-with-puppet/</link>
      <pubDate>Sat, 19 Oct 2013 23:05:02 +0000</pubDate>
      <guid>/managing-dns-automatically-with-puppet/</guid>
      <description>&lt;h1 id=&#34;why&#34;&gt;Why&lt;/h1&gt;
&lt;p&gt;So you have a decent amount of things configured in Puppet. Great!&lt;/p&gt;
&lt;p&gt;Are you finding that you have to manually update your DNS entries when things change, like when new hosts or added, or additional services are created?&lt;/p&gt;
&lt;p&gt;Why? Your DNS zone files will forever be out of date, waiting for humans to update them. Just say no. Puppet already knows what the ip addresses and hostnames of your servers, why not take advantage of that existing data?&lt;/p&gt;
&lt;h1 id=&#34;how&#34;&gt;How&lt;/h1&gt;
&lt;p&gt;Most of the credit for this has to go do &lt;a href=&#34;https://github.com/ajjahn&#34;&gt;Adam Jahn&lt;/a&gt; for his &lt;a href=&#34;https://github.com/ajjahn/puppet-dns&#34;&gt;original work&lt;/a&gt;. But there is a lot of work to be done and many outstanding pull requests. Until things are more unified, I&amp;rsquo;m going to recommend installing my version of the module:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;puppet module install KyleAnderson/dns
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the module is installed, you can setup bind on your nameserver:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;node &#39;ns1.example.com&#39; {
  include dns::server
  ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Warning: Don&amp;rsquo;t try to use this on top of an existing configuration, Puppet will take control and break your existing stuff.&lt;/p&gt;
&lt;p&gt;You can also create zones, right from puppet:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; dns::zone { &#39;example.com&#39;:
    soa         =&amp;gt; $::fqdn,
    soa_email   =&amp;gt; &amp;quot;admin.${::domain}&amp;quot;,
    nameservers =&amp;gt; [&amp;quot;${::hostname&amp;quot;]
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can add A records:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dns::record::a { $hostname:
   zone =&amp;gt; &#39;example.com&#39;,
   data =&amp;gt; $::ipaddress, 
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;going-further&#34;&gt;Going Further&lt;/h1&gt;
&lt;p&gt;Using the &lt;a href=&#34;http://docs.puppetlabs.com/guides/exported_resources.html&#34;&gt;exported resources pattern&lt;/a&gt; and stored configs with say, &lt;a href=&#34;https://docs.puppetlabs.com/puppetdb/latest/&#34;&gt;PuppetDB&lt;/a&gt;, you can create records on different hosts and then collect them on your name server. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;node &#39;mycoolserver.example.com&#39; {
  @@dns::record::a { $hostname: zone =&amp;gt; $::domain, data =&amp;gt; $::ipaddress, }
}

node &#39;ns1.example.com&#39; {
  dns::zone { $::domain:
    soa         =&amp;gt; $::fqdn,
    soa_email   =&amp;gt; &amp;quot;admin.${::domain}&amp;quot;,
    nameservers =&amp;gt; [ &#39;ns1&#39; ],
  }
  # Collect all the records from other nodes
  Dns::Record::A &amp;lt;&amp;lt;||&amp;gt;&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, an A record was requested on the mycoolserver node, but it could have been included on any class that includes lots of servers. In the end they show up on the ns1.example.com node with the &amp;laquo;||&amp;raquo; operator.&lt;/p&gt;
&lt;h1 id=&#34;other-possibilities&#34;&gt;Other Possibilities&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Have your &lt;a href=&#34;https://forge.puppetlabs.com/puppetlabs/haproxy&#34;&gt;HAProxy&lt;/a&gt; or &lt;a href=&#34;https://forge.puppetlabs.com/puppetlabs/f5&#34;&gt;F5 load balancer&lt;/a&gt; configs automatically generate the new CNAMEs and A records they need to operate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Setup your &lt;a href=&#34;https://github.com/puppetlabs/puppetlabs-apache#configure-a-virtual-host&#34;&gt;Apache vhosts&lt;/a&gt; to automatically point to the right server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Never have to remember to update IPMI addresses by using the combining this with the &lt;a href=&#34;https://github.com/logicminds/bmclib&#34;&gt;BMCLib&lt;/a&gt; module.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Setup new hosts in &lt;a href=&#34;https://forge.puppetlabs.com/zleslie/dhcp&#34;&gt;DHCP&lt;/a&gt;, and have them automatically get an A record to go with them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Have &lt;a href=&#34;http://forge.puppetlabs.com/puppetlabs/ntp&#34;&gt;NTP&lt;/a&gt; servers? Did you remember to update their DNS records? Oh wait, puppet does that for you.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;future-work&#34;&gt;Future Work&lt;/h1&gt;
&lt;p&gt;I will continue to send my pull requests and maintaining my own fork. &lt;a href=&#34;https://github.com/solarkennedy/puppet-dns&#34;&gt;Join the fun&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Getting Started With Sensu Using Puppet. For Real. </title>
      <link>/getting-started-with-sensu-using-puppet-for-real/</link>
      <pubDate>Sun, 13 Oct 2013 01:55:41 +0000</pubDate>
      <guid>/getting-started-with-sensu-using-puppet-for-real/</guid>
      <description>&lt;p&gt;Nagios. So familiar. I feel like I&amp;rsquo;ve run Nagios at every job I have ever had.&lt;/p&gt;
&lt;p&gt;Talk to most ops people, even at really big places, and they will probably admit
to using it.&lt;/p&gt;
&lt;p&gt;Puppet&amp;rsquo;s &lt;a href=&#34;http://docs.puppetlabs.com/guides/exported_resources.html&#34;&gt;exported resources&lt;/a&gt;
takes away some of the pain, but sometimes I think to myself, there must be a
better way to do this. &lt;a href=&#34;http://sensuapp.org/&#34;&gt;Sensu&lt;/a&gt; might be that better way.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s try it out, but gosh, I am SO lazy. I cannot be bothered to read the
installation instructions. All I want to do is install the puppet module,
add a couple of lines to my manifest, and let puppet do the rest. Then I
can run puppet agent in debug mode so when my boss comes by it looks like
I&amp;rsquo;m REALLY busy.&lt;/p&gt;
&lt;h1 id=&#34;sensu_logouploadssensu_logo_large-300x260pnguploadssensu_logo_largepng&#34;&gt;&lt;a href=&#34;../../uploads/sensu_logo_large.png&#34;&gt;&lt;img src=&#34;../../uploads/sensu_logo_large-300x260.png&#34; alt=&#34;sensu\_logo&#34;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id=&#34;step-1-game-plan&#34;&gt;Step 1: Game plan&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve got a test server I know I want to be my sensu server. I know I&amp;rsquo;m going to
have enable the sensu client run on the servers I want monitored. Here are my
goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have &lt;strong&gt;sensu-server&lt;/strong&gt; configured on my server (call it &lt;code&gt;mon1&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Have &lt;strong&gt;sensu-client&lt;/strong&gt; configured on my client (call it &lt;code&gt;client1&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;I want a &lt;strong&gt;dashboard&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;I want a an &lt;strong&gt;email alert&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;I &lt;strong&gt;don&amp;rsquo;t&lt;/strong&gt; want to have to ssh to my clients to do anything. (I have puppet to do that for me, duh.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-2-puppet-module&#34;&gt;Step 2: Puppet Module&lt;/h2&gt;
&lt;p&gt;My puppet master is not &lt;code&gt;mon1&lt;/code&gt;, but it doesn&amp;rsquo;t matter. I run on the puppetmaster&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    puppet module install example42/redis
    puppet module install puppetlabs/rabbitmq
    puppet module install sensu/sensu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ok, good start. So&amp;hellip;  the &amp;ldquo;For Real&amp;rdquo; part in the blog post title is about those
&lt;em&gt;other&lt;/em&gt; things that most howto&amp;rsquo;s don&amp;rsquo;t mention. Unless you already have
RabbitMQ and Redis installed, you will need those modules. Don&amp;rsquo;t know how to
run Redis or configure RabbitMQ? It&amp;rsquo;s ok, neither do I.&lt;/p&gt;
&lt;h2 id=&#34;step-2a-ssl-certs&#34;&gt;Step 2A: SSL Certs&lt;/h2&gt;
&lt;p&gt;Yea, I know what you are thinking. Kyle, I already have SSL certs for my
infrastructure, do I have make another set? Yes. I think so. I&amp;rsquo;m not smart
enough to use existing certs.&lt;/p&gt;
&lt;p&gt;Joe Miller has made a pretty easy script to generate some. For RabbitMQ
you can basically use a single client and server key and let puppet distribute them:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    git clone git://github.com/joemiller/joemiller.me-intro-to-sensu.git
    cd joemiller.me-intro-to-sensu
    ./ssl_certs.sh generate
    mkdir -p /etc/puppet//files/sensu/
    cp *.pem testca/*.pem /etc/puppet/files/sensu/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You  can see that I just stick all the files in my &amp;ldquo;files/sensu&amp;rdquo; directory
for puppet to distribute for me.&lt;/p&gt;
&lt;h2 id=&#34;step-2b-puppet-config&#34;&gt;Step 2B: Puppet config&lt;/h2&gt;
&lt;p&gt;Here is the configuration I needed to get a full system running:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;    node mon1 {
      file { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/etc/rabbitmq/ssl/server_key.pem&amp;#39;&lt;/span&gt;:
        source &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;puppet:///files/sensu/server_key.pem&amp;#39;&lt;/span&gt;,
      }
      file { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/etc/rabbitmq/ssl/server_cert.pem&amp;#39;&lt;/span&gt;:
        source &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;puppet:///files/sensu/server_cert.pem&amp;#39;&lt;/span&gt;,
      }
      file { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/etc/rabbitmq/ssl/cacert.pem&amp;#39;&lt;/span&gt;:
        source &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;puppet:///files/sensu/cacert.pem&amp;#39;&lt;/span&gt;,
      }
      &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rabbitmq&amp;#39;&lt;/span&gt;:
        ssl_key &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/etc/rabbitmq/ssl//server_key.pem&amp;#39;&lt;/span&gt;,
        ssl_cert &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/etc/rabbitmq/ssl//server_cert.pem&amp;#39;&lt;/span&gt;,
        ssl_cacert &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/etc/rabbitmq/ssl//cacert.pem&amp;#39;&lt;/span&gt;,
        ssl &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
      }
      rabbitmq_vhost { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/sensu&amp;#39;&lt;/span&gt;: }
      rabbitmq_user { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sensu&amp;#39;&lt;/span&gt;: password &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt; }
      rabbitmq_user_permissions { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sensu@/sensu&amp;#39;&lt;/span&gt;:
        configure_permission &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.*&amp;#39;&lt;/span&gt;,
        read_permission &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.*&amp;#39;&lt;/span&gt;,
        write_permission &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.*&amp;#39;&lt;/span&gt;,
      }
      &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis&amp;#39;&lt;/span&gt;: }
      &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sensu&amp;#39;&lt;/span&gt;:
        server &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
        purge_config &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
        rabbitmq_password &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;,
        rabbitmq_ssl_private_key &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;puppet:///files/sensu/client_key.pem&amp;#34;&lt;/span&gt;,
        rabbitmq_ssl_cert_chain &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;puppet:///files/sensu/client_cert.pem&amp;#34;&lt;/span&gt;,
        rabbitmq_host &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mon1&amp;#39;&lt;/span&gt;,
        subscriptions &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sensu-test&amp;#39;&lt;/span&gt;,
      }
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Take note that the Sensu module lets you stick in a puppet:/// url for the
certs, but the RabbitMQ module does not. Distributing them using the &amp;ldquo;file&amp;rdquo;
directive is pretty easy though.&lt;/p&gt;
&lt;p&gt;I personally believe that &lt;strong&gt;purge_config&lt;/strong&gt; should default to true. We are using
puppet here. If you are hand placing json, you are doing it wrong.&lt;/p&gt;
&lt;h1 id=&#34;step-3-clients&#34;&gt;Step 3: Clients&lt;/h1&gt;
&lt;p&gt;With your SSL certs in place, adding clients is pretty easy:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;    node client1 {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sensu&amp;#39;&lt;/span&gt;:
        purge_config &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
        rabbitmq_password &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;, 
        rabbitmq_host &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mon1&amp;#39;&lt;/span&gt;,
        subscriptions &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sensu-test&amp;#39;&lt;/span&gt;,
        rabbitmq_ssl_private_key &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;puppet:///files/sensu/client_key.pem&amp;#34;&lt;/span&gt;,
        rabbitmq_ssl_cert_chain &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;puppet:///files/sensu/client_cert.pem&amp;#34;&lt;/span&gt;, 
      }
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Not too bad. Notice that there is nothing server-side to generate the config
for this host.&lt;/p&gt;
&lt;p&gt;After your puppet runs converge, you should be able to access the Sensu
dashboard. By default it is on the sensu server, in this example it would be
&lt;a href=&#34;http://sensu:secret@mon1:8080&#34;&gt;http://sensu:secret@mon1:8080&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If all of this is working, you should see client1 in the clients list.&lt;/p&gt;
&lt;h1 id=&#34;step-4-handlers&#34;&gt;Step 4: Handlers&lt;/h1&gt;
&lt;p&gt;Sensu &lt;a href=&#34;http://docs.sensuapp.org/0.11/handlers.html&#34;&gt;handlers&lt;/a&gt; are scripts
that are called with event data. For getting started I use the simplest example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;    sensu&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;handler { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;:
      command &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mail -s &amp;#34;sensu alert&amp;#34; kyle@xkyle.com&amp;#39;&lt;/span&gt;,
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You are going to get json in your body, but we can make it pretty later.&lt;/p&gt;
&lt;h2 id=&#34;step-5a-your-first-client-side-check&#34;&gt;Step 5A: Your first client-side check&lt;/h2&gt;
&lt;p&gt;This type of check is what you might consider an NRPE check, it runs on the client:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;    node client1 {
    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
      package { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nagios-plugins-basic&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;ensure&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; latest } 
      sensu&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;check { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cron&amp;#34;&lt;/span&gt;:
        handlers    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;,
        command     &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/usr/lib/nagios/plugins/check_procs -C cron -c 1:10&amp;#39;&lt;/span&gt;,
        subscribers &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sensu-test&amp;#39;&lt;/span&gt;
      }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run puppet, stop cron, you should get an email.&lt;/p&gt;
&lt;h2 id=&#34;step-5b-your-first-server-side-check&#34;&gt;Step 5B: Your first server-side check&lt;/h2&gt;
&lt;p&gt;Sometimes you need to have the servers do the checking. Not everything can be
a client-side check. Sometimes you really do want your monitor server to be
able to ping your clients (or check http, etc).&lt;/p&gt;
&lt;p&gt;The Sensu documentation doesn&amp;rsquo;t seem to have examples of this. The only way
I know how to do it is with &lt;a href=&#34;http://docs.puppetlabs.com/guides/exported_resources.html&#34;&gt;stored configs&lt;/a&gt;
 with something like
&lt;a href=&#34;http://docs.puppetlabs.com/guides/exported_resources.html&#34;&gt;puppetdb&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;    node client1 {
    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
    @@sensu&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;check { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;check-ping-$fqdn&amp;#34;&lt;/span&gt;:
        handlers    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;,
        command     &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/lib/nagios/plugins/check_ping -H $::ipaddress -w 100.0,60% -c 200.0,90% &amp;#34;&lt;/span&gt;,
        subscribers &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sensu-test&amp;#39;&lt;/span&gt;
      }
    }
    node mon1 {
    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;Sensu&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Check&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;||&amp;gt;&amp;gt;&lt;/span&gt;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this case, the @@ in front of the sensu check tells puppet to not actually
make it, just store it. Then the &amp;laquo;||&amp;raquo; operator on the server side will take
those stored configs, and make them.&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Sensu is still new, but it shows a lot of promise. It is built from the ground
up to be configured by machines, not by humans. It is also designed to scale,
allowing you to grow your RabbitMQ cluster and your Sensu-servers at will.&lt;/p&gt;
&lt;p&gt;Absent from Sensu (at the time of this writing) is the infrastructure for
complicated time periods, escalations, etc. Maybe it is better that way? It
does feel a little more unixy, with each individual Sunsu piece handling a
very particular function.&lt;/p&gt;
&lt;p&gt;Not mentioned in this post is how to manage subscriptions, making new handlers,
adding &lt;a href=&#34;http://docs.sensuapp.org/0.11/mutators.html&#34;&gt;mutators&lt;/a&gt;, supplementing
the checks with &lt;a href=&#34;http://docs.sensuapp.org/0.11/adding_a_metric.html&#34;&gt;metrics&lt;/a&gt;
and having Sensu handle them by shipping them
&lt;a href=&#34;http://docs.sensuapp.org/0.11/adding_a_metric.html&#34;&gt;off to a metric system&lt;/a&gt;,
&lt;a href=&#34;https://github.com/sensu/sensu-admin&#34;&gt;sensu-admin&lt;/a&gt;, having Sensu automatically
detect &lt;a href=&#34;https://github.com/agent462/sensu-handler-awsdecomm&#34;&gt;downed AWS nodes and not alert&lt;/a&gt;
on them, etc.&lt;/p&gt;
&lt;p&gt;In the brave new elastic-compute-config-management-controlled world, Sensu
looks like a lot better option than Nagios in my opinion.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Dropbear with Mosh on a Low End Server</title>
      <link>/dropbear-with-mosh-on-a-low-end-server/</link>
      <pubDate>Thu, 03 Oct 2013 05:07:55 +0000</pubDate>
      <guid>/dropbear-with-mosh-on-a-low-end-server/</guid>
      <description>&lt;p&gt;I love my &lt;a href=&#34;http://lowendbox.com/&#34;&gt;low end boxes&lt;/a&gt;. I also love &lt;a href=&#34;http://mosh.mit.edu/&#34;&gt;mosh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Low end boxes usually are tight on resources, so Dropbear is often used as a lightweight ssh server. Mosh is mostly tested with openssh-client/server, so I think there are some bugs.&lt;/p&gt;
&lt;p&gt;But it can work, just make sure:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You are using the same version of mosh on the &lt;strong&gt;server&lt;/strong&gt; as you are on your &lt;strong&gt;client&lt;/strong&gt;. (otherwise they may not support the same command line options)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure you have have a en_US.UTF-8. Mosh requires UTF8, and low end boxes usually have a bare install without this local. Run:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;locale-gen --no-archive en_US.UTF-8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For a reproducible puppet snipped:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;package { &#39;mosh&#39;: ensure =&amp;gt; latest }
ensure_packages([&#39;locales&#39;])
exec { &amp;quot;/usr/sbin/locale-gen --no-archive en_US.UTF-8&amp;quot;:
 creates =&amp;gt; &#39;/usr/lib/locale/en_US.utf8&#39;,
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Run mosh more than once. There is some sort of race condition or bug which prevents mosh from grabbing a tty. Running it multiple times will get it to work eventually. I haven&amp;rsquo;t tracked down the root cause.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    <item>
      <title>Goodbye Intel - My Favorite Commands</title>
      <link>/goodbye-intel-my-favorite-commands/</link>
      <pubDate>Wed, 26 Jun 2013 02:34:43 +0000</pubDate>
      <guid>/goodbye-intel-my-favorite-commands/</guid>
      <description>&lt;p&gt;Working at Intel has been a great experience. I wish I could have stayed longer, but in the end we decided to part ways.&lt;/p&gt;
&lt;p&gt;During my stay I learned lots of stuff. I would like to boil my experience down to my top Linux commands.&lt;/p&gt;
&lt;h2 id=&#34;the-list&#34;&gt;The List&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://try.github.com&#34;&gt;git&lt;/a&gt;: Lots of git.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.xkyle.com/Syscfg&#34;&gt;syscfg&lt;/a&gt;: Managing bios settings from within Linux. Nice. (Intel platforms)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.xkyle.com/Dell_setupbios&#34;&gt;setupbios&lt;/a&gt;: More bios settings from within Linux. (Dell platforms)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://puppetlabs.com/&#34;&gt;puppet&lt;/a&gt;: I actually enjoy manually running puppet. &amp;ndash;noop make me feel warm and fuzzy.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://software.intel.com/en-us/articles/intel-manycore-platform-software-stack-mpss&#34;&gt;micctrl&lt;/a&gt;: Borking a lot of kernel installs on &lt;a href=&#34;https://en.wikipedia.org/wiki/Intel_MIC&#34;&gt;mic &lt;/a&gt;cards, you end up using this command. Lots.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://download.intel.com/support/motherboards/server/ism/sb/intel_ofu_user_guide.pdf&#34;&gt;flashupdt&lt;/a&gt;/&lt;a href=&#34;http://flashrom.org/Flashrom&#34;&gt;flashrom&lt;/a&gt;: Soooo many bios&amp;rsquo; flashed. Intel is bios-crazy.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://software.intel.com/en-us/intel-vtune-amplifier-xe&#34;&gt;amplxe-gui&lt;/a&gt;: VTune Amplifier is a super awesome profiling tool. I could spend hours playing around in that gui exploring all programs trying to track down bottlenecks.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../7-underused-ipmitool-commands/&#34;&gt;ipmitool&lt;/a&gt;: Everyone needs more ipmitool in their life, totally &lt;a href=&#34;../../7-underused-ipmitool-commands/&#34;&gt;underrated&lt;/a&gt;. Sadly, I would bet most sysadmins don&amp;rsquo;t even know IPMI exists. :(&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://linuxmanpages.com/man8/numactl.8.php&#34;&gt;numactl&lt;/a&gt;: I&amp;rsquo;m waiting for &lt;a href=&#34;http://fedoraproject.org/wiki/Features/numad&#34;&gt;numad&lt;/a&gt;, personally. My server should be smart enough to understand its own architecture.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;honorablementions&#34;&gt;Honorable Mentions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://software.intel.com/en-us/intel-compilers/&#34;&gt;icc&lt;/a&gt;: I didn&amp;rsquo;t run icc many times at Intel, but I was impressed with it.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Objdump&#34;&gt;objdump&lt;/a&gt;: The few times I needed to run this, I felt like a wizard.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www-03.ibm.com/systems/technicalcomputing/platformcomputing/products/lsf/index.html&#34;&gt;bsub&lt;/a&gt;: On occasion I was required to submit jobs to LSF.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://manpages.courier-mta.org/htmlman1/lscpu.1.html&#34;&gt;lscpu&lt;/a&gt;: I felt like I ran this more than at other companies. Could be just selection bias.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Rebuilding Packages for ARM (or any other arch)</title>
      <link>/rebuilding-packages-for-arm-or-any-other-arch/</link>
      <pubDate>Fri, 21 Jun 2013 04:46:58 +0000</pubDate>
      <guid>/rebuilding-packages-for-arm-or-any-other-arch/</guid>
      <description>&lt;p&gt;Sometimes there are packages out there that don&amp;rsquo;t come in your cool new Architecture. In my case it is ARM, and the package I wanted was Puppet. Here is how to rebuild source packages the cool way.&lt;/p&gt;
&lt;h2 id=&#34;add-the-puppet-repo-so-you-can-get-fresh-source-packages&#34;&gt;Add the Puppet repo so you can get fresh source packages&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;cd /tmp
# Add the repo, even though it may not have arm binaries...
wget http://apt.puppetlabs.com/puppetlabs-release-precise.deb 
dpkg -i puppetlabs-release-precise.deb
# Get dependencies...
apt-get update
apt-get build-dep puppet facter
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;build--install&#34;&gt;Build / Install&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# Get sources..
apt-get source facter
cd facter-1.7.1
dpkg-buildpackage
cd /tmp
dpkg -i facter_1.7.1-1puppetlabs1_armhf.deb
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;more&#34;&gt;More&lt;/h2&gt;
&lt;p&gt;Facter is easy. Only one extra missing dependency that you can apt-get.&lt;/p&gt;
&lt;p&gt;Next try to build puppet. No problem, except when you try to install it, it depends on Hiera.&lt;/p&gt;
&lt;p&gt;Build Hiera, install it, then try puppet again. This process takes a while to build up all the dependencies.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>An Overdrive Pro Connecting on OpenWrt</title>
      <link>/an-overdrive-pro-connecting-on-openwrt/</link>
      <pubDate>Fri, 31 May 2013 01:45:13 +0000</pubDate>
      <guid>/an-overdrive-pro-connecting-on-openwrt/</guid>
      <description>&lt;p&gt;Have a fancy &lt;a href=&#34;http://www.freedompop.com/&#34;&gt;FreedomPop&lt;/a&gt; Overdrive Pro? Want to hook it up to your OpenWrt based router to use as a backup (or primary?) internet connection? Lets do it.&lt;/p&gt;
&lt;p&gt;Plug it into your router via USB. Then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;opkg install kmod-usb-net-cdc-ether
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run dmesg and it will report which eth device came up. Mine shows up as &amp;ldquo;eth1&amp;rdquo;. Now make eth1 your &amp;ldquo;wan&amp;rdquo; interface:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;uci set network.wan.ifname=eth1
uci commit
reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Whoa.&lt;/p&gt;
&lt;p&gt;Or, set it up as a second wan interface and use &lt;a href=&#34;http://wiki.openwrt.org/doc/uci/multiwan&#34;&gt;Multiwan&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;uci set network.wan2=interface
uci set network.wan2.proto=dhcp
uci set network.wan2.ifname=eth1
uci set network.wan2.dns=8.8.4.4, 8.8.8.8
uci commit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively you could add it to your main bridge with a static ip and use it as an alternate gateway on a per-client basis. Or just plug it into a pc. Or just use the built-in wifi of the device itself, but who would want to do that?&lt;/p&gt;
</description>
    </item>
    <item>
      <title>A Team Fortress 2 See &#39;n Say!</title>
      <link>/a-team-fortress-2-see-n-say/</link>
      <pubDate>Sat, 18 May 2013 21:12:21 +0000</pubDate>
      <guid>/a-team-fortress-2-see-n-say/</guid>
      <description>&lt;p&gt;Hopefully Valve will offer me a job instead of suing me? :)&lt;/p&gt;
&lt;h2 id=&#34;teardown&#34;&gt;Teardown&lt;/h2&gt;
&lt;h2 id=&#34;gallery-ids9919929939949959969991001100210001003997&#34;&gt;[gallery ids=&amp;quot;991,992,993,994,995,996,999,1001,1002,1000,1003,997&amp;rdquo;]&lt;/h2&gt;
&lt;h2 id=&#34;parts&#34;&gt;Parts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Many &lt;a href=&#34;http://en.wikipedia.org/wiki/See_&#39;n_Say&#34;&gt;See N&amp;rsquo; Says&lt;/a&gt; to destroy (I burned through 3)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An &lt;a href=&#34;http://arduino.cc/en/&#34;&gt;Arduino&lt;/a&gt; (yes, because I&amp;rsquo;m a lazy noob)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.ladyada.net/make/waveshield&#34;&gt;Wave shield&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some sort of ISP programmer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Speaker / Switch / Hot-glue / Resistors / etc&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-it-works&#34;&gt;How It Works&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A user pulls the handle, activating the normally-open switch and powering the arduino&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When the handle is released and the spinner starts spinning, a resistor sensor detects at least two succsessive reistor changes, indicating that the spinner is in motion and noting the first value of the resistor for the next step&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The wave shield plays a prelude for the class, &amp;ldquo;The scout says&amp;hellip;&amp;rdquo; and a random wave file in the &amp;ldquo;Scout&amp;rdquo; folder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By the time the handle gets back to the top, the wave file is over, the spinner stops spinning, and the swich is pushed open again, to power everyhing off and save the batteries.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;battery-math&#34;&gt;Battery Math&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;.09 Amps * 5 Volts = .45 Watts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.45 Watts * 6 Seconds per Spin = 2.7 Joules per Spin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4 Batteries * 9,000 Joules per Battery = 36,000 Joules&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;36,000 Joules / 2.7 Joules per Spin = 13,333 Spins?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Realistically the batteries will ooze before we run out of juice?&lt;/p&gt;
&lt;h2 id=&#34;source-code&#34;&gt;Source Code&lt;/h2&gt;
&lt;p&gt;Source code is on my &lt;a href=&#34;https://github.com/solarkennedy/TeamFortress2-SeeNSay&#34;&gt;Github&lt;/a&gt;. Includes code for extracting sounds from TF2 and Arduino code.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Getting Started With SPDY on Nginx</title>
      <link>/getting-started-with-spdy-on-nginx/</link>
      <pubDate>Sun, 12 May 2013 21:29:09 +0000</pubDate>
      <guid>/getting-started-with-spdy-on-nginx/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/SPDY&#34;&gt;SPDY&lt;/a&gt; is a fancy new way to do HTTP, pioneered by Google. Pretty much all modern browsers support it now, except for of course, IE.&lt;/p&gt;
&lt;p&gt;If you have SSL enabled and are using nginx, they you are pretty close to running your sites with SPDY. What how easy it is!&lt;/p&gt;
&lt;h2 id=&#34;step-1-get-a-version-of-nginx-with-spdy-enabled&#34;&gt;Step 1: Get a version of nginx with spdy enabled.&lt;/h2&gt;
&lt;h3 id=&#34;ubuntu&#34;&gt;Ubuntu&lt;/h3&gt;
&lt;p&gt;Get some &lt;a href=&#34;http://nginx.org/en/linux_packages.html&#34;&gt;packages&lt;/a&gt;. The &lt;strong&gt;Ubuntu&lt;/strong&gt; packages have &amp;ldquo;&amp;ndash;with-http_spdy_module&amp;rdquo; compiled, so you can install them with no problem:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /tmp
wget http://nginx.org/keys/nginx_signing.key
apt-key add nginx_signing.key
rm nginx_signing.key

echo &amp;quot;deb http://nginx.org/packages/ubuntu/ precise nginx
deb-src http://nginx.org/packages/ubuntu/ precise nginx&amp;quot; &amp;gt; /etc/apt/sources.list.d/nginx.list
apt-get update
apt-get remove nginx
apt-get autoremove
apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;centos--rhel&#34;&gt;Centos / RHEL&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;Centos&lt;/strong&gt; packages need to be rebuilt. And you need a new openssl. (carefully)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install yum-utils rpmdevtools
yum-builddep nginx
rpm -i http://nginx.org/packages/centos/6/SRPMS/nginx-1.4.1-1.el6.ngx.src.rpm

cd /tmp
wget http://www.openssl.org/source/openssl-1.0.1e.tar.gz
tar xzf openssl-1.0.1e.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now add these lines to the two configure commands (one normal, one debug) in the spec file (~/rpmbuild/SPECS/nginx.spec):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; --with-http_spdy_module \
 --with-openssl=/tmp/openssl-1.0.1e/ \
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now build yourself and RPM:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/rpmbuild/
rpmbuild -ba SPECS/nginx.spec
rpm -e nginx
rpm -Uvh RPMS/i386/nginx-1.4.1-1.el6.ngx.i386.rpm
/etc/init.d/nginx restart
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;configuringnginx&#34;&gt; Configuring nginx&lt;/h2&gt;
&lt;p&gt;Take your listen line, and add &amp;ldquo;ssl spdy&amp;rdquo; to it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server {
      listen 443 ssl spdy;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;
&lt;p&gt;Try this &lt;a href=&#34;http://spdycheck.org/#xkyle.com&#34;&gt;SPDY testing page&lt;/a&gt;.
And try a &lt;a href=&#34;https://chrome.google.com/webstore/detail/spdy-indicator/mpbpobfflnpcgagjijhmgnchggcjblin?hl=en&#34;&gt;Chrome plugin&lt;/a&gt; that will visually indicate if the server you are talking to supports SPDY.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/Screenshot-from-2013-05-16-174759.png&#34;&gt;&lt;img src=&#34;../../uploads/Screenshot-from-2013-05-16-174759.png&#34; alt=&#34;spdy indicator&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Disabling Microphone Auto-Gain (Sensitivity) For Google Plus Hangouts</title>
      <link>/disabling-microphone-auto-gain-sensitivity-for-google-plus-hangouts/</link>
      <pubDate>Wed, 17 Apr 2013 01:14:56 +0000</pubDate>
      <guid>/disabling-microphone-auto-gain-sensitivity-for-google-plus-hangouts/</guid>
      <description>&lt;p&gt;Google&amp;rsquo;s Google Plus Hangout / Gtalk plugin automatically adjust your volume to account for varying noise conditions by default. Sometimes this is an undesired behavior, but there is no button to turn it off. Here is how you do it:&lt;/p&gt;
&lt;h2 id=&#34;linux&#34;&gt;Linux:&lt;/h2&gt;
&lt;p&gt;Run this in a terminal:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &amp;quot;audio-flags=1&amp;quot; &amp;gt; ~/.config/google-googletalkplugin/options
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;windows&#34;&gt;Windows:&lt;/h2&gt;
&lt;p&gt;Set the registry Key:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;HKEY_CURRENT_USER\&amp;lt;wbr&amp;gt;&amp;lt;/wbr&amp;gt;Software\Google\Google Talk Plugin\options\audio-flags = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;mac-osx&#34;&gt;Mac OSX:&lt;/h2&gt;
&lt;p&gt;Edit the plist:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~/Library/Preferences/com.&amp;lt;wbr&amp;gt;&amp;lt;/wbr&amp;gt;google.GoogleTalkPluginD.plist
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and set &amp;ldquo;Audio Flags&amp;rdquo; = 1&lt;/p&gt;
&lt;h2 id=&#34;all&#34;&gt;All:&lt;/h2&gt;
&lt;p&gt;When you are done, all instances of Chrome must be restarted. Simply closing the windows isn&amp;rsquo;t enough though, reboot to be sure.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>My First Published Puppet Module: bios</title>
      <link>/my-first-published-puppet-module-bios/</link>
      <pubDate>Mon, 15 Apr 2013 21:06:09 +0000</pubDate>
      <guid>/my-first-published-puppet-module-bios/</guid>
      <description>&lt;h1 id=&#34;what&#34;&gt;What?&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;ve written lots of crappy Puppet modules. Here is a slightly less crappy module that can help you configure BIOS settings on your servers for you.&lt;/p&gt;
&lt;p&gt;It works on Dell C class servers and Intel platforms. Please pull request or email me if you want to have it work on something else too!&lt;/p&gt;
&lt;h1 id=&#34;why&#34;&gt;Why?&lt;/h1&gt;
&lt;p&gt;BIOS settings should be considered configuration just like any other configuration, and hence managed by your configuration management tool, if possible.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://forge.puppetlabs.com/KyleAnderson/bios&#34;&gt;http://forge.puppetlabs.com/KyleAnderson/bios&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/solarkennedy/puppet-bios&#34;&gt;https://github.com/solarkennedy/puppet-bios&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;how&#34;&gt; How?&lt;/h1&gt;
&lt;p&gt;Install it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;puppet module install KyleAnderson/bios
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here are some examples on how to use it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Easy to set turbo on a dell 
bios::setting {&#39;turbo_mode&#39;: value =&amp;gt; &#39;disabled&#39; } 

# Intel requires some more hand holding with turbo. You set 1/0 and expect Enabled/Disabled.. 
bios::setting {&#39;Intel(R) Turbo Boost Technology&#39;: value =&amp;gt; &#39;0&#39;, expect =&amp;gt; &#39;Disabled&#39;, section =&amp;gt; &#39;Processor Configuration&#39; }

# Set fan speed on intel: 
bios::setting {&#39;Fan PWM Offset&#39;: value =&amp;gt; &#39;100&#39;, section =&amp;gt; &#39;System Acoustic and Performance Configuration&#39; }

# Disabled Cstates on dell:
bios::setting {&#39;c_states&#39;: value =&amp;gt; &#39;disabled&#39; }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Puppet on OpenWrt!</title>
      <link>/puppet-on-openwrt/</link>
      <pubDate>Sun, 31 Mar 2013 19:38:28 +0000</pubDate>
      <guid>/puppet-on-openwrt/</guid>
      <description>&lt;h1 id=&#34;puppetopenwrtuploadspuppetopenwrtjpguploadspuppetopenwrtjpg&#34;&gt;&lt;a href=&#34;../../uploads/puppet+openwrt.jpg&#34;&gt;&lt;img src=&#34;../../uploads/puppet+openwrt.jpg&#34; alt=&#34;puppet+openwrt&#34;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h1 id=&#34;status&#34;&gt;Status:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Repo is here: &lt;a href=&#34;https://github.com/solarkennedy/puppet-on-openwrt/&#34;&gt;https://github.com/solarkennedy/puppet-on-openwrt/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OpenWrt package files are submitted for inclusion&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Puppet/facter patches have been included in Trunk for inclusion in puppet 3.2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Binary packages have been made for early adopters (and me)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;why&#34;&gt;Why?&lt;/h1&gt;
&lt;p&gt;To scratch my own itch, and for Fun!&lt;/p&gt;
&lt;h1 id=&#34;how&#34;&gt;How?&lt;/h1&gt;
&lt;p&gt;Downloads are here: &lt;a href=&#34;http://download.xkyle.com/openwrt/&#34;&gt;http://download.xkyle.com/openwrt/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Because of the dependencies, it is probably easier to add the repo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;. /etc/openwrt_release
VERSION=`echo $DISTRIB_RELEASE | cut -f 1 -d -`
TARGET=`echo $DISTRIB_TARGET | cut -f 1 -d /`
LINE=&amp;quot;src/gz puppet-packages http://download.xkyle.com/openwrt/$VERSION/$TARGET&amp;quot;
grep -q &amp;quot;$LINE&amp;quot; /etc/opkg.conf || echo &amp;quot;$LINE&amp;quot; &amp;gt;&amp;gt; /etc/opkg.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;opkg update; opkg install puppet
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;help&#34;&gt;Help?&lt;/h1&gt;
&lt;p&gt;Running Puppet on OpenWrt is still far from perfect. There are going to be lots of bugs to be worked out. There are many use-cases / puppet modules / openwrt targets that I am not testing. If you think there is something wrong that could use fixing, feel free to open a &lt;a href=&#34;https://github.com/solarkennedy/puppet-on-openwrt/issues/new&#34;&gt;Github Issue&lt;/a&gt;. I don&amp;rsquo;t want to bother upstream OpenWrt or Puppet with questions until things are better tested.&lt;/p&gt;
&lt;p&gt;To reiterate: Don&amp;rsquo;t comment on the blog if something doesn&amp;rsquo;t work. Open a &lt;a href=&#34;https://github.com/solarkennedy/puppet-on-openwrt/issues/new&#34;&gt;Github Issue&lt;/a&gt;. And yes, things are going to be broken. Lets work together to fix them one at a time.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Picking Server Hostnames: Worstest, Worser, Worst... Better, Betterer, Bestest</title>
      <link>/picking-server-hostnames-worstest-worser-worst-better-betterer-bestest/</link>
      <pubDate>Wed, 27 Mar 2013 23:58:32 +0000</pubDate>
      <guid>/picking-server-hostnames-worstest-worser-worst-better-betterer-bestest/</guid>
      <description>&lt;p&gt;Picking a server hostname is a&lt;a href=&#34;http://xkcd.com/910/&#34;&gt; big deal&lt;/a&gt;. I&amp;rsquo;ve seen quite a few, lets traverse the hostname-awesomeness-continuum and see if we can learn something.&lt;/p&gt;
&lt;h1 id=&#34;worsest&#34;&gt;Worsest&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;morpheous&lt;/li&gt;
&lt;li&gt;trinity&lt;/li&gt;
&lt;li&gt;alf&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why do these suck? These names have &lt;strong&gt;no information&lt;/strong&gt; what-so-ever. If you see a server alert, you have no clue what services are actually down. It might as well be a random string. IT is a random string.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Pro Tip: Don&amp;rsquo;t give make server hostnames random strings.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You wouldn&amp;rsquo;t do this would you?
hostname &lt;code&gt;shuf -n 1 /usr/share/dict/words&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/bios-meme.jpg&#34;&gt;&lt;img src=&#34;../../uploads/bios-meme-300x225.jpg&#34; alt=&#34;bios-meme&#34;&gt;&lt;/a&gt;
Additionally, the name almost &lt;strong&gt;enables&lt;/strong&gt; admins to overload the server with multiple services. &amp;ldquo;What server should we run DNS on? Put it on Alf, it has some spare cycles.&amp;rdquo; That conversation would not happen if the server was called &amp;ldquo;db04&amp;rdquo;. Also we have no way to judge the urgency of a server outage without being very familiar with the services it provides.&lt;/p&gt;
&lt;p&gt;Oh, and it doesn&amp;rsquo;t scale. Say it with me here: **Servers are not Precious Snowflakes! **And no, giving your server&amp;rsquo;s custy names does NOT increase your security. Prove me wrong.&lt;/p&gt;
&lt;h1 id=&#34;worser&#34;&gt;Worser&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;msr2&lt;/li&gt;
&lt;li&gt;eln4&lt;/li&gt;
&lt;li&gt;wtf5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/36743853.jpg&#34;&gt;&lt;img src=&#34;../../uploads/36743853-300x225.jpg&#34; alt=&#34;36743853&#34;&gt;&lt;/a&gt;These names sometimes come from ancient department abbreviations  or maybe three unrelated words. They also might hint at being part of a collection, but many times they are indicators of server cruft. For example, wtf5 could be the fifth server in a long line of failures. wtf1-4 don&amp;rsquo;t exist anymore, sorry for the confusion.&lt;/p&gt;
&lt;p&gt;Don&amp;rsquo;t do this! I appreciate the brevity, but save it for DNS CNAMES. I can understand naming something &amp;ldquo;server2&amp;rdquo; during an upgrade from &amp;ldquo;server&amp;rdquo;, but unless you have good reason, rename it back when you are done. Future employees will thank you and it makes your infrastructure _&lt;strong&gt;feel&lt;/strong&gt; _cleaner.&lt;/p&gt;
&lt;p&gt;And no, incrementing the number on the end of your hostname on every new server rebuild does not make you more secure. Prove me wrong again.&lt;/p&gt;
&lt;h1 id=&#34;worse&#34;&gt;Worse&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;srv001-100&lt;/li&gt;
&lt;li&gt;dell01-08&lt;/li&gt;
&lt;li&gt;node01-99&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We are getting slightly better here I think. This is another anti-pattern I have seen in the wild: pick a generic name and span it across the range. Fill up the servers as needed.&lt;/p&gt;
&lt;p&gt;Whyyy!!? Again, there is no inherent information or context from the hostname. I have no idea what runs on dell07. Sure I know it is a Dell. Or is it?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pro Tip: Bake tribal knowledge into your infrastructure by setting descriptive hostnames.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;better&#34;&gt;&lt;strong&gt;Better&lt;/strong&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;clientname&lt;/li&gt;
&lt;li&gt;different-client&lt;/li&gt;
&lt;li&gt;legacy-name (that has no relevant meaning today)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The world isn&amp;rsquo;t perfect. Sometimes it does make sense to group services by a client&amp;rsquo;s name, or maybe because you have some legacy that you want self-contained on a single server. Could be as good as it gets.&lt;/p&gt;
&lt;h1 id=&#34;betterer&#34;&gt;Betterer&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;dns1-5&lt;/li&gt;
&lt;li&gt;backend01-04&lt;/li&gt;
&lt;li&gt;fe01-99&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are nice. I have a good idea about what these servers do, how important it is if one goes down, what services are impacted, etc. These are pretty much bestest, honestly.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m conflicted on leading zeros. Future proofing is one thing, but how many dns servers do you honestly anticipate building? Better than this though: [ mail, mail1, mail2, mail3 ]. Ug. Renaming is not nearly as hard as people think. Hostnames are **NOT **permanent.&lt;/p&gt;
&lt;h1 id=&#34;bestest&#34;&gt;Bestest&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;db01a&lt;/li&gt;
&lt;li&gt;nfs01-04&lt;/li&gt;
&lt;li&gt;mail&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/36744679.jpg&#34;&gt;&lt;img src=&#34;../../uploads/36744679-300x300.jpg&#34; alt=&#34;36744679&#34;&gt;&lt;/a&gt;Yes. To me these are perfect. The very name of the server implies what runs on it, and deters admins from running other things on it. We are talking &lt;em&gt;one logical service per server&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I like db01a because it implies that there is a pair, db01b. (Bonus points for a db01 floating ip, if applicable)&lt;/p&gt;
&lt;p&gt;mail: It is the mail server. Don&amp;rsquo;t let your co-workers tell you that you are un-creative. They don&amp;rsquo;t even &lt;em&gt;know&lt;/em&gt;. Not every situation calls out for an HA solution, sometimes it is ok to have a mail server.&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;I have no idea what your situation is, don&amp;rsquo;t listen to me. Picking server hostnames is a &lt;a href=&#34;https://en.wikipedia.org/wiki/Parkinson&#39;s_law_of_triviality&#34;&gt;bikeshed &lt;/a&gt;problem. Pick one and move on with your life.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Decoding Balanced Payments Puzzle 1</title>
      <link>/decoding-balanced-payments-puzzle-1/</link>
      <pubDate>Thu, 21 Mar 2013 02:04:43 +0000</pubDate>
      <guid>/decoding-balanced-payments-puzzle-1/</guid>
      <description>&lt;p&gt;A strange string appeared at the bottom of a Balanced &lt;a href=&#34;http://blog.balancedpayments.com/balanced-payments-operations-automated-testing-continuous-deployment-jenkins/&#34;&gt;Payments blog post&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NmQ2ZjYzMmU3Mzc0NmU2NTZkNzk2MTcwNjQ2NTYzNm
U2MTZjNjE2MjQwNjU2MzZlNjU3MjY1NjY2NjY5NjQ2MTY1N
mI2MTZkNmY3NDc0NmU2MTc3Njk=&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;One of those puzzles to attract coders I guess. The guys at &lt;a href=&#34;https://news.ycombinator.com/item?id=5409062&#34;&gt;Hacker News&lt;/a&gt; spilled the beans, so lets spill them some more.&lt;/p&gt;
&lt;p&gt;First though,** Mad Props** to the Balanced team for thinking &amp;ldquo;outside&amp;rdquo; the unit-test-box. Plus Jenkins rocks. The world needs more Jenkins. &lt;/p&gt;
&lt;h1 id=&#34;bash&#34;&gt;Bash?&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;m not a developer, so my first instinct was to use the existing set of tools that people have &lt;em&gt;already written&lt;/em&gt; to solve this puzzle:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -s http://blog.balancedpayments.com/balanced-payments-operations-automated-testing-continuous-deployment-jenkins/ \
| html2text | grep -P &#39;[^.*]=$&#39; | head -n 1 | base64 -d \
| sed &#39;s/../0x&amp;amp; /g&#39; | xxd -r -c 100 | rev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I love the command line.&lt;/p&gt;
&lt;h1 id=&#34;python&#34;&gt;Python?&lt;/h1&gt;
&lt;p&gt;The Balanced guys look like they are Python people. That&amp;rsquo;s cool. &lt;a href=&#34;http://www.crummy.com/software/BeautifulSoup/&#34;&gt;BeautifulSoup&lt;/a&gt; is the only Python html parser I&amp;rsquo;ve used:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import urllib2
import BeautifulSoup
import re, base64
content = urllib2.urlopen(&#39;http://blog.balancedpayments.com/balanced-payments-operations-automated-testing-continuous-deployment-jenkins/&#39;).read()
soup = BeautifulSoup.BeautifulSoup(content)
# Last pre has the base64 string
string = soup.findAll(&#39;pre&#39;)[-1].getText()
print base64.b64decode(string).decode(&#39;hex&#39;)[::-1]
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;ruby&#34;&gt;Ruby?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hpricot/hpricot&#34;&gt;Hpricot&lt;/a&gt; is the only Ruby html parser I&amp;rsquo;ve used. Also, I love**_ .map_**:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;require &#39;hpricot&#39;
require &#39;open-uri&#39;
require &#39;base64&#39;
thehtml = open(&#39;http://blog.balancedpayments.com/balanced-payments-operations-automated-testing-continuous-deployment-jenkins/&#39;) { |f| Hpricot(f) }
string = thehtml.search(&amp;quot;//pre&amp;quot;)[1].to_plain_text
puts Base64.decode64(string).scan(/../).map {|a| a.to_i(16).chr}.join.reverse
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Solving puzzles is a fun way to learn new things! If you are hungry for more excuses to learn how to use languages, check out &lt;a href=&#34;https://projecteuler.net/&#34;&gt;Project Euler&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Hacking a Hallmark Text Band: First Attempt</title>
      <link>/hacking-a-hallmark-text-band-first-attempt/</link>
      <pubDate>Thu, 14 Mar 2013 04:08:20 +0000</pubDate>
      <guid>/hacking-a-hallmark-text-band-first-attempt/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://www.textbands.com/&#34;&gt;Hallmark Text Band&lt;/a&gt; is a strange thing:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/P3130076.jpg&#34;&gt;&lt;img src=&#34;../../uploads/P3130076-300x235.jpg&#34; alt=&#34;Hallmark Text Band&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Doesn&amp;rsquo;t Hallmark know kids have cell phones now?
Anyway, it is an extremely simple micro-controller driving a led matrix and a &lt;a href=&#34;http://www.c-max.com.hk/en/technology/rfcomm/2_4g_trans_ic&#34;&gt;C-Max CMM-9201&lt;/a&gt;. You get 10 characters, and a small reed-switch? triggers a hardware interrupt, and broadcasts your 10 characters to a friend, and you swap messages. The devices holds 24 messages, FIFO. Memory is volatile. Profanity filter included.&lt;/p&gt;
&lt;p&gt;Oh well. Lets hack it.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t have any fancy hardware to listen to the RF. I decided to sniff the SPI bus with a &lt;a href=&#34;http://dangerousprototypes.com/docs/Bus_Pirate&#34;&gt;Bus Pirate&lt;/a&gt; (Sparkfun version).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/P3130078.jpg&#34;&gt;&lt;img src=&#34;../../uploads/P3130078-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/P3130081.jpg&#34;&gt;&lt;img src=&#34;../../uploads/P3130081-300x300.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With the Bus Pirate I&amp;rsquo;ve tried using the SPISniffer and the text interface in SPI monitor mode. I&amp;rsquo;ve tried all sorts of variations of speed, etc, and I can&amp;rsquo;t get a reliable output.&lt;/p&gt;
&lt;p&gt;I should be able to use the bus pirate in SPI monitor mode and tap it right in the middle of the bus, right? (between the controller and the wireless modules)&lt;/p&gt;
&lt;p&gt;Setting the Bus Pirate to only give me data when CS goes low (according to the datasheet) should give me data only when it transmits, but it doesn&amp;rsquo;t. I get lots of strange output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[0x08(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x0A(0x28)0x00(0x29)]
[0x08(0x28)0x00(0x29)]
[0x08(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x0A(0x28)0x00(0x29)]
[0x08(0x28)0x00(0x29)]
[0x08(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x0A(0x28)0x00(0x29)]
[0x08(0x28)0x00(0x29)]
[0x08(0x28)0x00(0x29)]
[0x14(0x28)0x00(0x29)]
[0x08(0x28)0x00(0x29)]
[0x08(0x28)0x00(0x29)]
[0x14(0x28)0x00(0x29)]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When the device does transmit, I get some sort of data, but it just looks like more of this randomness:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[0x6E(0x28)0x00(0x29)0x6C(0x28)0x00(0x29)0x9C(0x28)0x00(0x29)0xB8(0x28)0x00(0x29)0x10(0x28)0x00(0x29)]
[0x81(0x28)0x00(0x29)0x1F(0x28)0x00(0x29)0x7E(0x28)0x00(0x29)0x9E(0x28)0x00(0x29)0x9E(0x28)0x00(0x29)0x3F(0x28)0x00(0x29)0x1B(0x28)0x00(0x29)0xB8(0x28)0x00(0x29)0xAA(0x28)0x00(0x29)0xAA(0x28)0x00(0x29)0xAB(0x28)0x00(0x29)0xFE(0x28)0x00(0x29)0xAB(0x28)0x00(0x29)0xF8(0x28)0x00(0x29)0xAB(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)0x55(0x28)0x00(0x29)]
[0x9C(0x28)0x00(0x29)]
[0xC0(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x00(0x28)0x00(0x29)0x00(0x28)0x00(0x29)]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Is this the message? I&amp;rsquo;m a hardware hacking noob. Criticism welcome.&lt;/p&gt;
&lt;h2 id=&#34;things-to-discover&#34;&gt;Things to Discover&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Does the profanity filter get applied on sending, receiving, or both?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How is the 10 character limit imposed? Could I buffer overrun it?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There could be more uses for this if I could come up with a USB interface for one, and a high gain 2.4ghz antenna&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Validating Graphite Metrics With Bash!</title>
      <link>/validating-graphite-metrics-with-bash/</link>
      <pubDate>Thu, 07 Mar 2013 05:35:49 +0000</pubDate>
      <guid>/validating-graphite-metrics-with-bash/</guid>
      <description>&lt;p&gt;At my dayjob I get to work with &lt;a href=&#34;http://graphite.wikidot.com/&#34;&gt;Graphite&lt;/a&gt; and power meters. It is cool:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/power-breakdown.png&#34;&gt;&lt;img src=&#34;../../uploads/power-breakdown.png&#34; alt=&#34;power-breakdown&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To make it easy for my clients to get power information, I&amp;rsquo;ve written a command line tool called &amp;ldquo;power&amp;rdquo; that they can run to get the power usage for a server when running their program. Here is an example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;power METER-NAME sleep 10s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pretty handy. The &amp;ldquo;METER-NAME&amp;rdquo; is pretty important, as it lets the script know which system&amp;rsquo;s power you are interested in. (It is optional, by default I let it return the power of the server that you are currently on, but this isn&amp;rsquo;t always true for all workloads)&lt;/p&gt;
&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;
&lt;p&gt;The thing is, my power meters and lab environment change often. I&amp;rsquo;m tired of updating the script to reflect the state of my lab. Can&amp;rsquo;t the script figure itself out on it&amp;rsquo;s own? Yes. Yes it can.&lt;/p&gt;
&lt;h2 id=&#34;spot&#34;&gt;S.P.O.T.&lt;/h2&gt;
&lt;p&gt;I believe in a &lt;a href=&#34;https://github.com/teddziuba/teddziuba.github.com/blob/master/_posts/2011-06-30-most-important-concept-systems-design.html&#34;&gt;Single Point Of Truth&lt;/a&gt;. Where is my SPOT regarding power data in my system? I can tell you where it isn&amp;rsquo;t: it** isn&amp;rsquo;t** in my script. It is in the Graphite database ya dingus.&lt;/p&gt;
&lt;p&gt;When my users run power -l, I want it to list valid power meters, but not some hand-curated list. I want a real list, straight from the source. Lets do that, and I will never have to update the script again.&lt;/p&gt;
&lt;h2 id=&#34;list-those-metrics&#34;&gt;List Those Metrics&lt;/h2&gt;
&lt;p&gt;So how can we get a list of all metrics with similar names? Easy:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -q -O - &amp;quot;http://$GRAPHITEHOST/render/?target=power.*.watts&amp;amp;format=json&amp;amp;from=-5second&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As far as I can tell, there isn&amp;rsquo;t really a way to get just a list of metrics without data too, but that is ok. We need the data for the next validation step&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;validate-those-metrics&#34;&gt;Validate Those Metrics&lt;/h2&gt;
&lt;p&gt;I crank my power metrics to the second, and the above api query will even return stale metrics, metrics that have old data, typo&amp;rsquo;ed metrics, etc. They will just have null data in the json.&lt;/p&gt;
&lt;p&gt;Heck man, we can just grep that out:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| egrep -v &#39;null.*null.*null.*null.*null&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will filter out any metric that doesn&amp;rsquo;t have up-to-the second data. Great! Side note: some of my meters might run a little behind, so they might have some null&amp;rsquo;s. I only grep out meters that are missing the last 5 seconds of data, that indicates that they really are stale.&lt;/p&gt;
&lt;p&gt;Full line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -q -O - &amp;quot;http://$GRAPHITEHOST/render/?target=power.*.watts&amp;amp;target=power.*.ipmi_power&amp;amp;format=json&amp;amp;from=-5second&amp;quot; | sed &#39;s/target/\n/&#39;g | egrep -v &#39;null.*null.*null.*null.*null&#39; \
| tr &#39;&amp;quot;&#39; &amp;quot;\n&amp;quot; | grep &amp;quot;^power&amp;quot; | cut -f 2 -d &amp;quot;.&amp;quot; | sort -u
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Obviously this is specific to my environment. You young whipper-snappers will probably have fancy json parsers and junk to validate your own metrics.&lt;/p&gt;
&lt;h2 id=&#34;bonus-points-bash-tab-completion&#34;&gt;Bonus Points: Bash Tab Completion&lt;/h2&gt;
&lt;p&gt;So that is cool. Now the script will only let your run against metrics that have fresh data.&lt;/p&gt;
&lt;p&gt;Now, I&amp;rsquo;m super lazy. Not only do I &lt;strong&gt;not&lt;/strong&gt; want to keep my script up to date with valid metrics, I also cannot be bothered to remember which ones are active, and I certainly don&amp;rsquo;t want to &lt;strong&gt;fully type them out&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Bash completion to the rescue. My script responds to &amp;ldquo;power -l&amp;rdquo; to report the list. Here is some code to go in bash_completion.d to help users discover the meters and enable them to be lazy:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;_power() {
  local cur
  cur=${COMP_WORDS[COMP_CWORD]}
  if [ $COMP_CWORD -eq 1 ]; then
    # First argument is the power meter
    powermeters=`power -l`
    COMPREPLY=( $(compgen -W &amp;quot;$powermeters&amp;quot; -- $cur) )
    return 0
  else
    # Everthing else will be a normal command
    COMPREPLY=( $(compgen -c -- $cur) )
    return 0
  fi
complete -F _power power
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All of the &lt;a href=&#34;https://wiki.xkyle.com/Bash_Completion&#34;&gt;bash completion code&lt;/a&gt; I&amp;rsquo;ve written in my life is &lt;a href=&#34;https://en.wikipedia.org/wiki/Cargo_cult_programming&#34;&gt;cargo-cultish&lt;/a&gt;. It sure is nice to have good tools though.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>An IPMI SEL Viewing Shootout!</title>
      <link>/an-ipmi-sel-viewing-shootout/</link>
      <pubDate>Wed, 13 Feb 2013 06:08:18 +0000</pubDate>
      <guid>/an-ipmi-sel-viewing-shootout/</guid>
      <description>&lt;h1 id=&#34;update-2015-02-18&#34;&gt;UPDATE (2015-02-18)&lt;/h1&gt;
&lt;p&gt;Albert Chu from FreeIPMI &lt;a href=&#34;https://github.com/solarkennedy/ipmi-sel-comparison/issues/1&#34;&gt;commented&lt;/a&gt;
that FreeIPMI does &lt;em&gt;NOT&lt;/em&gt; attempt to decode OEM events by default. These are events that
are OEM specific, so each motherboard may require a different interpretation.&lt;/p&gt;
&lt;p&gt;FreeIPMI has a &lt;code&gt;--interpret-oem-data&lt;/code&gt; option and possibly in conjunction with
the &lt;code&gt;-W assumesystemevent&lt;/code&gt; option, to attempt to decode these.&lt;/p&gt;
&lt;p&gt;Unfortunately I no longer have the motherboard I originally ran these on.
I might do a followup post with a new motherboard with similar &amp;ldquo;issues&amp;rdquo; and
see how FreeIPMI compares to the other tools with these options.&lt;/p&gt;
&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Servers are like women. You are supposed to know their needs.
&lt;a href=&#34;../../uploads/server_meme.png&#34;&gt;&lt;img src=&#34;../../uploads/server_meme.png&#34; alt=&#34;Server Says: If you don&amp;rsquo;t know what&amp;rsquo;s wrong, I&amp;rsquo;m not going to tell you&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So how do you know what is wrong with your server when it isn&amp;rsquo;t giving you any hints? &lt;strong&gt;IPMI Server Event Logs (SEL).&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-problem&#34;&gt;The Problem&lt;/h2&gt;
&lt;p&gt;There are four different tools I&amp;rsquo;m going to look at that can examine the SEL. Let&amp;rsquo;s take the same server and events and run them through the tools to see how it looks. Unfairly I will also be using a vendor-specific tool, Intel SELVIEW on an Intel server.&lt;/p&gt;
&lt;h2 id=&#34;procedure&#34;&gt;Procedure&lt;/h2&gt;
&lt;p&gt;Check out &lt;a href=&#34;https://github.com/solarkennedy/ipmi-sel-comparison&#34;&gt;https://github.com/solarkennedy/ipmi-sel-comparison&lt;/a&gt; up-to-date code on my procedure. It may get updated with more tools and output. For this blog post I&amp;rsquo;m comparing the following utilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://ipmiutil.sourceforge.net/&#34;&gt;ipmiutil&lt;/a&gt; 2.82&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.gnu.org/software/freeipmi/&#34;&gt;freeipmi&lt;/a&gt; 1.2.1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://ipmitool.sourceforge.net/&#34;&gt;ipmitool&lt;/a&gt; 1.8.11&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.intel.com/support/motherboards/server/sb/CS-031911.htm&#34;&gt;SELVIEWER&lt;/a&gt; 11.0 Build 5&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;comparison&#34;&gt;Comparison&lt;/h2&gt;
&lt;p&gt;Hopefully I got it all correlated correctly. Please feel free to check my code. Let&amp;rsquo;s see some events and how each utility decodes them.&lt;/p&gt;
&lt;h3 id=&#34;event-88-some-sort-of-bios-update&#34;&gt; Event 88: Some sort of BIOS Update?&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;freeipmi: Unknown SEL Record Type: 3h
ipmitool: Version Change #0x12 | 
ipmiutil: 0 4e 20 00 04 2b 12 70 00 10 ff 
selview : Version Change,FW Update Status (#0x12) Informational event: FW Update Status reports BIOS Update started with version 99.99.x038. Integrated BMC - LUN#0 (Channel#0)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Freeipmi&lt;/strong&gt; doesn&amp;rsquo;t know what to say. &lt;strong&gt;ipmitool&lt;/strong&gt; at least knows there was a version change. &lt;strong&gt;Ipmiutil&lt;/strong&gt; spits out the raw hex. &lt;strong&gt;Selview&lt;/strong&gt; the most descriptive output, including the actual version number, with the next event reporting the version it was updated to.&lt;/p&gt;
&lt;h3 id=&#34;event-117-non-critial-low-voltage&#34;&gt;Event 117: Non-critial low voltage&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;freeipmi: BB +1.1V STBY | Voltage | Lower Non-critical - going low ; Sensor Reading = -0.01 V ; Threshold = 0.96 V
ipmitool: Voltage #0xdd | Lower Non-critical going low 
ipmiutil: MIN BMC Voltage #dd Lo Noncrit thresh act=00 thr=bf
selview : Voltage,BB +1.1V STBY (#0xDD) Warning event: BB +1.1V STBY reports the sensor is in a low, but non-critical, and going lower state. Sensor reading: -0.0122 Volts. Threshold value: 0.96381 Volts. Integrated BMC - LUN#0 (Channel#0)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Freeipmi&lt;/strong&gt; and &lt;strong&gt;selview&lt;/strong&gt; get props here for letting us know what the values of the voltage and what the threshold is. &lt;strong&gt;Selview&lt;/strong&gt; gives us the most human-readable output. &lt;strong&gt;ipmitool&lt;/strong&gt; and &lt;strong&gt;ipmiutil&lt;/strong&gt; are not super helpful, as I don&amp;rsquo;t know what dd or bf mean.&lt;/p&gt;
&lt;h3 id=&#34;event-346-bad-ram&#34;&gt;Event 346: Bad RAM&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;freeipmi: POST Err Sensor | System Firmware Progress | System Firmware Error ; OEM Event Data2 code = 23h ; OEM Event Data3 code = 85h
ipmitool: System Firmware Error #0x06 | Unknown Error | Asserted
ipmiutil: MAJ EFI System Firmware #06 DIMM_B1 failed test/initialization 6f [a0 23 85]
selview : System Firmware Progress,POST Err Sensor (#0x06) Warning event: POST Err Sensor reports DIMM_B1 failed test/initialization. BIOS - LUN#0 (Channel#0)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;ipmiutil&lt;/strong&gt; and &lt;strong&gt;selview&lt;/strong&gt; win here for telling me which slot is bad (DIMM_B1). &lt;strong&gt;ipmitool&lt;/strong&gt; and &lt;strong&gt;freeipmi&lt;/strong&gt; lose, as they do not give us this crucial piece of information.&lt;/p&gt;
&lt;h3 id=&#34;event-857-server-cooling-down-from-overheating&#34;&gt;Event 857: Server Cooling Down from overheating&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;freeipmi: Exit Air Temp    | Temperature                 | Upper Critical - going high ; Sensor Reading = 73.00 C ; Threshold = 85.00 C
ipmitool: Temperature #0x2e | Upper Critical going high
ipmiutil: INF BMC  Temperature #2e HiC thresh OK now act=49 thr=55
selview : Temperature,Exit Air Temp (#0x2E)     CRITICAL event: Exit Air Temp reports the sensor is no longer in a critically high state.  Sensor reading: 73 degrees C.  Threshold value: 85 degrees C.        Integrated BMC - LUN#0 (Channel#0)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Freeipmi&lt;/strong&gt; and &lt;strong&gt;ipmitool&lt;/strong&gt; are a tad misleading, as this event is the server cooling down, not heating up. &lt;strong&gt;ipmiutil&lt;/strong&gt; at least says that it is now &amp;ldquo;OK&amp;rdquo;, but doesn&amp;rsquo;t give the actual temperature and threshold. &lt;strong&gt;Selview&lt;/strong&gt; comes out on top with an exact description of what is happening.&lt;/p&gt;
&lt;h2 id=&#34;conclusion--summary&#34;&gt;Conclusion / Summary&lt;/h2&gt;
&lt;p&gt;Of course &lt;strong&gt;Selview&lt;/strong&gt;, being a vendor-specific tool, gives the most accurate and detailed event information. Intel has all the special, but not proprietary, information. In many cases &lt;strong&gt;ipmiutil&lt;/strong&gt; had the important information, but in an abbreviated form. In general &lt;strong&gt;freeipmi&lt;/strong&gt; and &lt;strong&gt;ipmitool&lt;/strong&gt; had less information in critical areas, and unable to decode some of the more esoteric events entirely. In general though, it is kinda a mixed bag. If you are serious about discovering what is wrong with your server, get all the info you can get.&lt;/p&gt;
&lt;h2 id=&#34;problems-questions&#34;&gt;Problems? Questions?&lt;/h2&gt;
&lt;p&gt;Think I used the wrong command line arguments? Think I used the wrong version? Have another command to get the SEL output? &lt;a href=&#34;https://github.com/solarkennedy/ipmi-sel-comparison&#34;&gt;Fork my code on github and send me a pull reques&lt;/a&gt;t or make a github &lt;a href=&#34;https://github.com/solarkennedy/ipmi-sel-comparison/issues&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Configuring BIOS Settings With Puppet!</title>
      <link>/configuring-bios-settings-with-puppet/</link>
      <pubDate>Tue, 12 Feb 2013 03:35:01 +0000</pubDate>
      <guid>/configuring-bios-settings-with-puppet/</guid>
      <description>&lt;p&gt;You know what it is like to spend time configuring the BIOS on a a server. You reboot the server, and wait for it to take its sweet time to come back up, frantically push its button, hope that you didn&amp;rsquo;t miss your chance. Then spend some one-on-one alone time with the interface, making sure you do all the right keystrokes to get the settings you want. Sounds like a bad date.&lt;/p&gt;
&lt;h2 id=&#34;the-problem&#34;&gt;The Problem&lt;/h2&gt;
&lt;p&gt;If you are good then you don&amp;rsquo;t play the waiting game:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@server ~]$ ipmitool -H 192.168.0.120 -U root -P root  chassis bootparam set bootflag force_bios
Set Boot Device to force_bios
[root@server ~]$ ipmitool -H 192.168.0.120 -U root -P root chassis power reset
Chassis Power Control: Reset
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But even still, this doesn&amp;rsquo;t get you around having to manually choose the bios settings you want. Human interaction leads to mistakes, and more importantly, servers are &lt;strong&gt;NOT&lt;/strong&gt; snowflakes:
&lt;a href=&#34;../../uploads/bios-meme.jpg&#34;&gt;&lt;img src=&#34;../../uploads/bios-meme.jpg&#34; alt=&#34;bios-meme&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-solution&#34;&gt;The Solution&lt;/h2&gt;
&lt;p&gt;Configuration Management = The Solution. I use puppet. Here is how I manage my BIOS settings with Puppet.
However, the underlying tools are very vendor specific:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Intel Servers / Motherboards: &lt;a href=&#34;http://downloadcenter.intel.com/Detail_Desc.aspx?DwnldID=16921&#34;&gt;syscfg&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dell C-class Servers: &lt;a href=&#34;http://poweredgec.com/files/&#34;&gt;setupbios&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HP Proliant Servers: &lt;a href=&#34;http://h18004.www1.hp.com/products/servers/management/toolkit/stk/index.html&#34;&gt;conrep&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;m not releasing my module yet due to IP junk, but here is the general overview to get you going for your particular needs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class bios::setting::turbo($enable=true) {
 case $enable {
   true, &#39;1&#39;, &#39;enable&#39;,&#39;on&#39;, &#39;true&#39;: { $set_value=1 $expect_value=&#39;Enabled&#39; }
   false, &#39;0&#39;, &#39;disable&#39;, &#39;off&#39;, &#39;false&#39;: { $set_value=0 $expect_value=&#39;Disabled&#39; }
 }
 exec { &amp;quot;$bios::syscfg_command /bcs &#39;Processor Configuration&#39; &#39;Intel(R) Turbo Boost Technology&#39; $set_value&amp;quot;:
   unless =&amp;gt; &amp;quot;$bios::syscfg_command /d biossettings &#39;Intel(R) Turbo Boost Technology&#39; | grep &#39;Current Value&#39; | grep $expect_value&amp;quot;,
   provider =&amp;gt; [ shell =&amp;gt; &#39;sh&#39; ]
 }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is just a skeleton example. I have to leave the installation of your vendor-specific tool as an exercise to the reader. For example here would be the same function for a Dell server:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;case $enable {
  true, &#39;1&#39;, &#39;enable&#39;,&#39;on&#39;, &#39;true&#39;:      { $set_value=&#39;enabled&#39;  }
  false, &#39;0&#39;, &#39;disable&#39;, &#39;off&#39;, &#39;false&#39;: { $set_value=&#39;disabled&#39; }
}
exec { &amp;quot;$bios::setupbios_command setting set turbo_mode $set_value&amp;quot;:
  unless =&amp;gt; &amp;quot;$bios::setupbios_command setting get turbo_mode | grep $set_value&amp;quot;,
  provider =&amp;gt; [ shell =&amp;gt; &#39;sh&#39; ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You are only limited by your Imagination&amp;hellip; and whatever BIOS settings your vendor tool exports.&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.xkyle.com/Configuing_BIOS_From_Linux&#34;&gt;Personal wiki on vendor tools&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://docs.puppetlabs.com/guides/parameterized_classes.html&#34;&gt;Puppet parameterized classes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Building Linux Packages For Kernel Drivers! (dkms howto)</title>
      <link>/building-linux-packages-for-kernel-drivers/</link>
      <pubDate>Sun, 20 Jan 2013 03:39:48 +0000</pubDate>
      <guid>/building-linux-packages-for-kernel-drivers/</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;Most of the time the Linux kernel does a great job of having drivers you need, but sometimes you need to install a special driver or update an existing module.&lt;/p&gt;
&lt;p&gt;Running make; make install is all fine and dandy for testing, but for production you want a repeatable process. For me, this means OS packages. (deb/rpms)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/morpheus-ipmi.jpg&#34;&gt;&lt;img src=&#34;../../uploads/33657094-300x181.jpg&#34; alt=&#34;33657094&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So, how do you go from kernel module source code =&amp;gt; Debian package? DKMS. DKMS will automatically build your kernel module for you, even if your kernel gets updated.&lt;/p&gt;
&lt;h2 id=&#34;example-ixgbe&#34;&gt;Example: ixgbe&lt;/h2&gt;
&lt;p&gt;Lets build something. In this example I&amp;rsquo;m on an Ubuntu machine building the latest ixgbe driver.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get apt-get your stuff&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;        apt-get install debhelper dkms kernel-headers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Untar your source code into /usr/src/$modulename-$version, like /usr/src/ixgbe-3.12.6/&lt;/li&gt;
&lt;li&gt;Normally here you would run &amp;ldquo;make&amp;rdquo;, but instead we will make a dkms.conf file to describe how to build it. Like this:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;        MAKE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;make -C src/ KERNELDIR=/lib/modules/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;kernelver&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/build&amp;#34;&lt;/span&gt;
        CLEAN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;make -C src/ clean&amp;#34;&lt;/span&gt;
        BUILT_MODULE_NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ixgbe
        BUILT_MODULE_LOCATION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;src/
        DEST_MODULE_LOCATION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/updates&amp;#34;&lt;/span&gt;
        PACKAGE_NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ixgbe-dkms
        PACKAGE_VERSION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;3.12.6
        REMAKE_INITRD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Next we need to register that module with dkms:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;        root@server:/usr/src/ixgbe-3.12.6# dkms add -m ixgbe -v 3.12.6
        Creating symlink /var/lib/dkms/ixgbe/3.12.6/source -&amp;gt;
         /usr/src/ixgbe-3.12.6
        DKMS: add completed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Next we will build the module, but using the dkms build command instead of make:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;        root@server:/usr/src/ixgbe-3.12.6# dkms build -m ixgbe -v 3.12.6
        Kernel preparation unnecessary &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; this kernel. Skipping...
        Building module:
        cleaning build area....
        make KERNELRELEASE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;3.2.0-23-generic -C src/ KERNELDIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/lib/modules/3.2.0-23-generic/build....................
        cleaning build area....
        DKMS: build completed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Great! Next we will make a debian src package.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;        root@server:/usr/src/ixgbe-3.12.6# dkms mkdsc -m ixgbe -v 3.12.6 --source-only
        Using /etc/dkms/template-dkms-mkdsc
        copying template...
        modifying debian/changelog...
        modifying debian/compat...
        modifying debian/control...
        modifying debian/copyright...
        modifying debian/dirs...
        modifying debian/postinst...
        modifying debian/prerm...
        modifying debian/README.Debian...
        modifying debian/rules...
        copying legacy postinstall template...
        Copying source tree...
        Building source package... dpkg-source --before-build ixgbe-dkms-3.12.6
         debian/rules clean
         dpkg-source -b ixgbe-dkms-3.12.6
        dpkg-source: warning: no source format specified in debian/source/format, see dpkg-source&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
         dpkg-genchanges -S &amp;gt;../ixgbe-dkms_3.12.6_source.changes
        dpkg-genchanges: including full source code in upload
         dpkg-source --after-build ixgbe-dkms-3.12.6
        DKMS: mkdsc completed.
        Moving built files to /var/lib/dkms/ixgbe/3.12.6/dsc...
        Cleaning up temporary files...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Now we will build the &amp;ldquo;binary&amp;rdquo; debian package. In reality with &amp;ndash;source-only this binary package just contains the source code in the module with a post install script to build the module for each kernel you are using. Its magic:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;        root@server:/usr/src/ixgbe-3.12.6# dkms mkdeb -m ixgbe -v 3.12.6 --source-only
        Using /etc/dkms/template-dkms-mkdeb
        copying template...
        modifying debian/changelog...
        modifying debian/compat...
        modifying debian/control...
        modifying debian/copyright...
        modifying debian/dirs...
        modifying debian/postinst...
        modifying debian/prerm...
        modifying debian/README.Debian...
        modifying debian/rules...
        copying legacy postinstall template...
        Copying source tree...
        Building binary package...dpkg-buildpackage: warning: using a gain-root-command &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; being root
         dpkg-source --before-build ixgbe-dkms-3.12.6
         fakeroot debian/rules clean
         debian/rules build
         fakeroot debian/rules binary
         dpkg-genchanges -b &amp;gt;../ixgbe-dkms_3.12.6_amd64.changes
        dpkg-genchanges: binary-only upload - not including any source code
         dpkg-source --after-build ixgbe-dkms-3.12.6
        DKMS: mkdeb completed.
        Moving built files to /var/lib/dkms/ixgbe/3.12.6/deb...
        Cleaning up temporary files...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;We have a deb! Lets put it in ~&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;        root@server:/usr/src/ixgbe-3.12.6# cp /var/lib/dkms/ixgbe/3.12.6/deb/ixgbe-dkms_3.12.6_all.deb ~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;So we have a deb. I would like to install it, but we have to get rid of the build files so they will not conflict with the deb we just built:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;        root@server:/usr/src/ixgbe-3.12.6# rm -r /var/lib/dkms/ixgbe/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;Now we have a deb that you can install locally, distribute wherever, install across a cluster:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;        root@server:/usr/src/ixgbe-3.12.6# dpkg -i /root/ixgbe-dkms_3.12.6_all.deb
        Selecting previously unselected package ixgbe-dkms.
        &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Reading database ... &lt;span style=&#34;color:#ae81ff&#34;&gt;56500&lt;/span&gt; files and directories currently installed.&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        Unpacking ixgbe-dkms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;from .../root/ixgbe-dkms_3.12.6_all.deb&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ...
        Setting up ixgbe-dkms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3.12.6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ...
        Loading new ixgbe-3.12.6 DKMS files...
        First Installation: checking all kernels...
        Building only &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; 3.2.0-23-generic
        Building &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; architecture x86_64
        Building initial module &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; 3.2.0-23-generic
        Done.
        ixgbe:
        Running module version sanity check.
        - Original module
        - Installation
        - Installing to /lib/modules/3.2.0-23-generic/updates/dkms/
        depmod....
        DKMS: install completed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;33657298uploads33657298jpguploads33657298jpg&#34;&gt;&lt;a href=&#34;../../uploads/33657298.jpg&#34;&gt;&lt;img src=&#34;../../uploads/33657298.jpg&#34; alt=&#34;33657298&#34;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id=&#34;reading-more&#34;&gt;Reading More:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.xkyle.com/DKMS_Howto&#34;&gt;https://wiki.xkyle.com/DKMS_Howto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Dynamic_Kernel_Module_Support&#34;&gt;http://en.wikipedia.org/wiki/Dynamic_Kernel_Module_Support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Cool Things to Do After Installing OpenWrt</title>
      <link>/cool-things-to-do-after-installing-openwrt/</link>
      <pubDate>Sun, 06 Jan 2013 23:16:33 +0000</pubDate>
      <guid>/cool-things-to-do-after-installing-openwrt/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://openwrt.org/&#34;&gt;OpenWrt&lt;/a&gt; is the bomb. Think all the power of a full Linux distro on your tiny home router or plug computer.&lt;/p&gt;
&lt;h1 id=&#34;install-an-external-root-overlay&#34;&gt;Install an External Root Overlay&lt;/h1&gt;
&lt;p&gt;What the heck does that mean? OpenWrt uses an ingenious system were the root filesystem is a super compressed squashfs, merged with a read/write jffs2 filesystem called the overlay. This maximizes your available space on the device. Instead of using part of your remaining flash for read/write, you can use a larger, external device for the overlay.&lt;/p&gt;
&lt;p&gt;Lots of modern routers have USB ports. Special bonus points if you hack on an SD card mod to a device using only GPIO, like the venerable &lt;a href=&#34;http://wiki.openwrt.org/toh/linksys/wrt54g#adding.an.mmcsd.card&#34;&gt;WRT54G&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Instructions: &lt;a href=&#34;http://wiki.openwrt.org/doc/howto/extroot&#34;&gt;http://wiki.openwrt.org/doc/howto/extroot&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;security-tools&#34;&gt;Security Tools&lt;/h1&gt;
&lt;p&gt;A classic thing to do with any linux device, install every security tool there is. Apparently there are people out there who make a killing pre-installing security tools on small linux devices and selling them back to people who are ignorant of the ways of &amp;ldquo;opkg install nmap&amp;rdquo;&lt;/p&gt;
&lt;p&gt;You are smarter than that. If you know if a security tool, there is probably a package for it for you to &amp;ldquo;opkg install&amp;rdquo;. If not, do the world a favor and port it and upload your makefile to the OpenWrt devel mailing list.&lt;/p&gt;
&lt;p&gt;Instructions: &lt;a href=&#34;http://wiki.openwrt.org/doc/howto/wireless.overview&#34;&gt;http://wiki.openwrt.org/doc/howto/wireless.overview&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;make-a-pxe-boot-server&#34;&gt;Make a PXE Boot Server&lt;/h1&gt;
&lt;p&gt;Believe it or not, a stock OpenWrt install has all the pieces necessary to be a PXE boot server, out of the box. Dnsmasq is awesome.&lt;/p&gt;
&lt;p&gt;My Instructions: &lt;a href=&#34;https://wiki.xkyle.com/OpenWrt_PXE_Server&#34;&gt;https://wiki.xkyle.com/OpenWrt_PXE_Server
&lt;/a&gt;Official Documentation: &lt;a href=&#34;http://wiki.openwrt.org/doc/uci/dhcp&#34;&gt;http://wiki.openwrt.org/doc/uci/dhcp&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;httpswikixkylecomopenwrt_pxe_servermake-a-guest-hotspot&#34;&gt;&lt;a href=&#34;https://wiki.xkyle.com/OpenWrt_PXE_Server&#34;&gt; &lt;/a&gt;Make a Guest Hotspot&lt;/h1&gt;
&lt;p&gt;This is a cool thing to do. Once only a feature the highest end wireless routers, now possible with almost any router with OpenWrt.&lt;/p&gt;
&lt;p&gt;Instructions: &lt;a href=&#34;http://wiki.openwrt.org/doc/recipes/guest-wlan&#34;&gt;http://wiki.openwrt.org/doc/recipes/guest-wlan&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>7 Underused IPMItool Commands</title>
      <link>/7-underused-ipmitool-commands/</link>
      <pubDate>Thu, 20 Dec 2012 03:55:02 +0000</pubDate>
      <guid>/7-underused-ipmitool-commands/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;../../uploads/interesting-ipmi-239x300.jpg&#34; alt=&#34;&#34;&gt;
&lt;a href=&#34;http://en.wikipedia.org/wiki/Intelligent_Platform_Management_Interface&#34;&gt;IPMI&lt;/a&gt; is Awesome. But, it is underused. Most sysadmins don&amp;rsquo;t even enable it. If they do enable it, they probably enable it by manually going into the BIOS, and then probably only using the Web interface. LAME.&lt;/p&gt;
&lt;p&gt;There is no need to go to the BIOS to configure ipmi. You can use IPMItool to configure it in-band. This is my first underused command:&lt;/p&gt;
&lt;p&gt;(disclaimer: not all IPMI interfaces / bios versions / hardware platforms are equal. Don&amp;rsquo;t complain in a comment that your hardware doesn&amp;rsquo;t support all of these cool things)&lt;/p&gt;
&lt;h1 id=&#34;1-ipmitool-lan-set-1-ipsrc-dhcp&#34;&gt;1. ipmitool lan set 1 ipsrc dhcp&lt;/h1&gt;
&lt;h2 id=&#34;set-your-ipmi-interface-to-grab-an-ip-via-dhcp&#34;&gt;(Set your ipmi interface to grab an IP via DHCP)&lt;/h2&gt;
&lt;p&gt;Do it. Script it. Make a &lt;a href=&#34;https://github.com/zoide/puppet-ipmi/&#34;&gt;puppet module&lt;/a&gt;. There is no reason not to have IPMI configured on every server that supports it. Except laziness.  Don&amp;rsquo;t forget to set a password and enable at least one user. Seriously, this is probably the #1 under-utilized command, just configuring the darn thing.&lt;/p&gt;
&lt;h1 id=&#34;2ipmitool--h-server-ipmi--u-root--p-root-chassis-power-reset&#34;&gt;2. ipmitool -H server-ipmi -U root -P root chassis power reset&lt;/h1&gt;
&lt;h2 id=&#34;remote-reboot-via-ipmi&#34;&gt;(Remote reboot via IPMI)&lt;/h2&gt;
&lt;p&gt;Once you have IPMI configured, doing a remote reboot is the next cool thing. Seriously, never press the power button, bother a noc tech, telnet to an APC, again. Notice that you need -H, -U, -P, etc. as this command must be run over the lan interface to a remote server.&lt;/p&gt;
&lt;h1 id=&#34;3-ipmitool--h-server-ipmi--u-root--p-root-chassis-identify-1&#34;&gt;3. ipmitool -H server-ipmi -U root -p root chassis identify 1&lt;/h1&gt;
&lt;h2 id=&#34;blink-the-chassis-led&#34;&gt;(Blink the chassis LED)&lt;/h2&gt;
&lt;p&gt;Freak out a NOC tech by running this command on all your servers as soon as they replace a harddrive. Make a special Christmas youtube video with your server farm&amp;rsquo;s chassis LEDs.&lt;/p&gt;
&lt;h1 id=&#34;4ipmitool--h-server-ipmi--u-root--p-root-chassis-bootparam-set-bootflag-force_bios&#34;&gt;4. ipmitool -H server-ipmi -U root -P root  chassis bootparam set bootflag force_bios&lt;/h1&gt;
&lt;h2 id=&#34;make-your-server-go-directly-into-bios-on-next-reboot&#34;&gt;(Make your server go directly into bios on next reboot)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/morpheus-ipmi.jpg&#34;&gt;&lt;img src=&#34;../../uploads/morpheus-ipmi-300x300.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;Now we are getting fancy! We&amp;rsquo;ve all been there. Waiting for a slow-ass HP super server to boot, waiting and waiting for the signal to start frantically pounding the F2 key to enter the bios. Then missing it because the VGA didn&amp;rsquo;t show up in time. Reboot again. Repeat.&lt;/p&gt;
&lt;p&gt;Fuck that noise. I don&amp;rsquo;t wait for servers. The servers wait for me! Also works for EFI shell, PXE, disk, etc.&lt;/p&gt;
&lt;p&gt;Maybe someday I&amp;rsquo;ll combine this command with the next command (SOL) and generate bios setting macros, sending perfect sequences of keystrokes to set the BIOS like some sort of tool-assisted-server-configuring-speed-run (&lt;a href=&#34;https://www.youtube.com/watch?v=L_AerCVhoTM&#34;&gt;YES. THIS IS HOW WE SHOULD CONFIGURE SERVERS&lt;/a&gt;). Or if I&amp;rsquo;m lucky, just &lt;a href=&#34;https://wiki.xkyle.com/Configuing_BIOS_From_Linux&#34;&gt;configure the bios from Linux itself&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;5ipmitool--h-server01-ipmi--i-lanplus--u-root--p-root-sol-activate&#34;&gt;5. ipmitool -H server01-ipmi -I lanplus -U root -P root sol activate&lt;/h1&gt;
&lt;h2 id=&#34;connect-to-the-remote-servers-serial-console&#34;&gt;(Connect to the remote server&amp;rsquo;s serial console)&lt;/h2&gt;
&lt;p&gt;You know that fancy KVM over IP you have? The one that probably works like crap, needs to be rebooted all the time, lots of extra cables, special dongles, bla bla bla? You don&amp;rsquo;t need it man. All a server needs is power, and network.&lt;/p&gt;
&lt;p&gt;SOL or serial-over-lan allows you to use the server&amp;rsquo;s serial console over ipmi. Configure the bios to do serial console redirection, configure your boot loader and OS to do the same, and you are set. Then load up a screen full of them and use the serial console &lt;a href=&#34;https://wiki.xkyle.com/IPMI_Serial_Over_Lan#Like_a_Boss&#34;&gt;like a boss&lt;/a&gt;. Special props for using the magic-sysrq over SOL.&lt;/p&gt;
&lt;h1 id=&#34;6ipmitool--h-ipmihost--u-root--p-root-delloem-powermonitor&#34;&gt;6. ipmitool -H ipmihost -U root -P root delloem powermonitor&lt;/h1&gt;
&lt;h2 id=&#34;get-server-power-measurements&#34;&gt;(Get server power measurements)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/already-killawatt.jpg&#34;&gt;&lt;img src=&#34;../../uploads/already-killawatt-300x300.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
Yes. On some platforms you can actually measure how much power your server is using. Scrape that shit and pump it to graphite man! I&amp;rsquo;m trying to &lt;a href=&#34;https://wiki.xkyle.com/IPMI_Power_Measurement&#34;&gt;collect the different ways&lt;/a&gt; to do this, as there are different vendor specific implementations.&lt;/p&gt;
&lt;h1 id=&#34;7ipmitool--h-ipmihost--u-root--p-root-sensor-list&#34;&gt;7. ipmitool -H ipmihost -U root -P root sensor list&lt;/h1&gt;
&lt;h2 id=&#34;retrieve-low-level-hardware-sensor-output&#34;&gt;(Retrieve low level hardware sensor output)&lt;/h2&gt;
&lt;p&gt;If you suspect you are having hardware issues, this can be super valuable. Combined with &lt;a href=&#34;http://exchange.nagios.org/directory/Plugins/Hardware/Server-Hardware/IPMI-Sensor-Monitoring-Plugin/details&#34;&gt;automatic sensor monitoring via nagios&lt;/a&gt;, and you are an IPMI pro.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Carbon Fiber Table</title>
      <link>/carbon-fiber-table/</link>
      <pubDate>Sat, 15 Dec 2012 21:17:29 +0000</pubDate>
      <guid>/carbon-fiber-table/</guid>
      <description>&lt;p&gt;It kinda sucks. No matter how much sanding and polish I do, I can&amp;rsquo;t get it to look great. It is smooth, however. Corners are hard. Just posting these pics for archival purposes, not to show off here.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/PC1500021.jpg&#34;&gt;&lt;img src=&#34;../../uploads/PC1500021-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/PC150005.jpg&#34;&gt;&lt;img src=&#34;../../uploads/PC150005-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/PC150008.jpg&#34;&gt;&lt;img src=&#34;../../uploads/PC150008-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/PC150009.jpg&#34;&gt;&lt;img src=&#34;../../uploads/PC150009-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Carbon Fiber / Copper Solar Light</title>
      <link>/carbon-fiber-copper-solar-light/</link>
      <pubDate>Sun, 02 Dec 2012 18:39:02 +0000</pubDate>
      <guid>/carbon-fiber-copper-solar-light/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../../uploads/PB200015.jpg&#34;&gt;&lt;img src=&#34;../../uploads/PB200015-224x300.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/PC020002.jpg&#34;&gt;&lt;img src=&#34;../../uploads/PC020002-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/PC080001.jpg&#34;&gt;&lt;img src=&#34;../../uploads/PC080001-300x300.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A copper tube sculptural with carbon fiber leaves. One of the carbon fiber leaves is a solar panel from a deconstructed solar lamp. The tips of the small copper tubes have the white LEDs. The larger copper tube stores the battery and charge circuitry. I would show pictures of them at night but the sun doesn&amp;rsquo;t shine much here anymore&amp;hellip;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Configuring Nagios Like a Boss!</title>
      <link>/configuring-nagios-like-a-boss/</link>
      <pubDate>Mon, 19 Nov 2012 05:41:17 +0000</pubDate>
      <guid>/configuring-nagios-like-a-boss/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m tired of configuring Nagios by hand. Just tired. I always forget to do stuff. I&amp;rsquo;ll add a new host, or stick in a raid card, add a new website, whatever, and forget to add a nagios check for it.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/nagiosforget.png&#34;&gt;&lt;img src=&#34;../../uploads/nagiosforget.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So it happened. You setup a server, put critical infrastructure on it, but forgot to monitor it. It goes down, bad stuff happens. Your boss asks, why weren&amp;rsquo;t we monitoring this? Let me supply a few options to prevent this from happening in the future:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Enforce draconian punishment for people who forget to do it (one cutoff finger per service check?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Have strict workflows/bkms/procedures for doing things like adding a vhost, starting a server, etc that include a step for adding them to Nagios&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Invent a fake sysadmin named Paco, and blame all the mistake on him.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automate it with puppet. Then blame puppet when it goes wrong!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;a-migration-plan&#34;&gt;A Migration Plan&lt;/h1&gt;
&lt;p&gt;Let&amp;rsquo;s do it. Let&amp;rsquo;s make puppet do the work. After all, puppet is aware of my hosts, and it even knows what services are running them.&lt;/p&gt;
&lt;p&gt;You don&amp;rsquo;t have to switch all at once, you can have a mix of automatically generated and manually configured checks. I like to put my automated definitions go into folders called hosts.d and services.d. Do what makes sense for your environment.&lt;/p&gt;
&lt;h1 id=&#34;howto&#34;&gt;Howto&lt;/h1&gt;
&lt;p&gt;First, define a &amp;ldquo;virtual resource&amp;rdquo; wherever a service is defined. Lets take a really simple, but overlooked example of health-checking raid:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class nagios_checks::raid {
   file { &amp;quot;/usr/lib64/nagios/plugins/check_raid&amp;quot;:
      mode =&amp;gt; 555,
      source =&amp;gt; &amp;quot;puppet:///modules/nagios_checks/check_raid&amp;quot;,
   }
   @@nagios_service { &amp;quot;${fqdn}_raid&amp;quot;:
      ensure =&amp;gt; present,
      host_name =&amp;gt; &amp;quot;$fqdn&amp;quot;,
      use =&amp;gt; &amp;quot;generic-service&amp;quot;,
      target =&amp;gt; &amp;quot;/etc/nagios/services.d/$fqdn-raid.cfg&amp;quot;,
      check_command =&amp;gt; &amp;quot;check_nrpe!check_raid&amp;quot;,
      service_description =&amp;gt; &amp;quot;raid&amp;quot;,
      notify =&amp;gt; Service[&amp;quot;nagios&amp;quot;],
   }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So what is going on here? In this class we define a Nagios plugin, and we copy it over. (I like making things that puppet copies over set to 555 as a reminder that I shouldn&amp;rsquo;t be editing them)&lt;/p&gt;
&lt;p&gt;The virtual resource is &amp;ldquo;@@nagios_server&amp;rdquo;. The @@ means that the resource is just saved on the puppet master, and not instantiated on the client. (this assumes you have &lt;a href=&#34;http://projects.puppetlabs.com/projects/puppet/wiki/Using_Stored_Configuration&#34;&gt;stored configs&lt;/a&gt; enabled in your puppet setup.)&lt;/p&gt;
&lt;p&gt;With &amp;ldquo;target =&amp;gt;&amp;rdquo; I&amp;rsquo;m dumping the config into /etc/nagios/services.d/$fqdn-raid.cfg. It&amp;rsquo;s a good idea to let puppet put service definitions in separate files. Making puppet scan a single file chock full of definitions will be slow.&lt;/p&gt;
&lt;p&gt;If this virtual resource is defined on a bunch of clients, on some nagios server we need to let puppet dump these files:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class nagios::server {
   package { nagios:
      ensure =&amp;gt; latest;
   }
   service { &amp;quot;nagios&amp;quot;:
      ensure =&amp;gt; running,
      enabled =&amp;gt; true,
   }

   # Hack for bug #3299 where nagios stuff is root:600
   file { [&amp;quot;/etc/nagios/hosts.d/&amp;quot;, &amp;quot;/etc/nagios/services.d/&amp;quot;]:
      ensure =&amp;gt; directory,
      mode =&amp;gt; 644,
      recurse =&amp;gt; true,
   }

   # Collect and instantiate all the puppet stuff
   Nagios_host &amp;lt;||&amp;gt;
   Nagios_service &amp;lt;||&amp;gt;

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That is a basic recipe for a Nagios server. We get the package, make sure the package is running, fix some permissions&amp;hellip; when what the crap is that?&lt;/p&gt;
&lt;p&gt;The &amp;lt;||&amp;gt; operator takes virtual resources that were defined on other servers, and then makes them real. This means the $fqdn-host.cfg files will be created wherever this nagios::server is setup.&lt;/p&gt;
&lt;p&gt;So go forth, and define @@nagios_services&amp;rsquo;s whenever you have a puppet server setup. Like a boss.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/gravitron.jpg&#34;&gt;&lt;img src=&#34;../../uploads/gravitron-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Carbon Fiber Glasses</title>
      <link>/carbon-fiber-glasses/</link>
      <pubDate>Sat, 03 Nov 2012 22:07:27 +0000</pubDate>
      <guid>/carbon-fiber-glasses/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../../uploads/PA0900022.jpg&#34;&gt;&lt;img src=&#34;../../uploads/PA0900022-300x111.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/PA090004.jpg&#34;&gt;&lt;img src=&#34;../../uploads/PA090004-300x175.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/PA090005.jpg&#34;&gt;&lt;img src=&#34;../../uploads/PA090005-300x89.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/PB030038.jpg&#34;&gt;&lt;img src=&#34;../../uploads/PB030038-300x95.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/PB0300401.jpg&#34;&gt;&lt;img src=&#34;../../uploads/PB0300401-300x156.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/PB030041.jpg&#34;&gt;&lt;img src=&#34;../../uploads/PB030041-300x142.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Build Systems out of Poured Concrete, not Bricks</title>
      <link>/build-systems-out-of-poured-concrete-not-bricks/</link>
      <pubDate>Sun, 24 Jun 2012 17:05:04 +0000</pubDate>
      <guid>/build-systems-out-of-poured-concrete-not-bricks/</guid>
      <description>&lt;p&gt;Personally, I don&amp;rsquo;t have any kind of battle-hardened wisdom. Most of what I know comes from the wisdom of others. In particular I would like to acknowledge the real geniuses up front:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=Eu430bqbK5w&#34;&gt;My First Petabyte: Now What?&lt;/a&gt; (&lt;a href=&#34;http://www.cambridgecomputer.com/management.cfm&#34;&gt;Jacob Farmer&lt;/a&gt; from &lt;a href=&#34;http://www.cambridgecomputer.com&#34;&gt;Cambridge Computer&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://plus.google.com/112678702228711889851/posts/eVeouesvaVX&#34;&gt;Google Platforms Rant&lt;/a&gt; (&lt;a href=&#34;https://plus.google.com/110981030061712822816/posts&#34;&gt;Steve Yegge&lt;/a&gt; of Google)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://perspectives.mvdirona.com/&#34;&gt;http://perspectives.mvdirona.com/&lt;/a&gt; (&lt;a href=&#34;http://perspectives.mvdirona.com/&#34;&gt;James Hamilton&lt;/a&gt; of Amazon)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/teddziuba/teddziuba.github.com&#34;&gt;Ted Dzuiba&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tons of blogs posts, LISA talks, that I can&amp;rsquo;t site specifically.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Seriously, we are all a product of the RSS feeds we read?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;m not saying &lt;a href=&#34;https://www.networkworld.com/news/2008/010908-carr-wrong.html&#34;&gt;IT is dead&lt;/a&gt;. But IT is changing.&lt;/p&gt;
&lt;p&gt;Look at how building houses has changed over time:
&lt;a href=&#34;../../uploads/brick.jpg&#34;&gt;&lt;img src=&#34;../../uploads/brick.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/cinderblock.jpg&#34;&gt;&lt;img src=&#34;../../uploads/cinderblock.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/concrete.jpg&#34;&gt;&lt;img src=&#34;../../uploads/concrete-1024x731.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/Prefabricated_house_construction.jpg&#34;&gt;&lt;img src=&#34;../../uploads/Prefabricated_house_construction-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Brick - small pieces, one at a time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cinder Block - Big pieces, one at a time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Poured Concrete - continuous pieces, poured continuously&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Prefab Houses - one house at a time?&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I don&amp;rsquo;t have book to sell, I have a job to do. That job it to help build systems, and I will &lt;strong&gt;not&lt;/strong&gt; be doing it one at a time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You might think that I&amp;rsquo;m talking about &amp;ldquo;The Cloud&amp;rdquo;. Well, I don&amp;rsquo;t know what you are talking about. You might think I&amp;rsquo;m talking about things like Amazon&amp;rsquo;s EC2. While that is part of the puzzle, Amazon is just making it easier for us to rent bricks from them. &lt;a href=&#34;https://aws.amazon.com/dynamodb/&#34;&gt;Amazon DynamoDB&lt;/a&gt; however is more like poured concrete&amp;hellip;&lt;/p&gt;
&lt;p&gt;In the end, there is so much work to be done on internal stuff. Like it or not, lots and lots of computing just can&amp;rsquo;t be run on public infrastructure. (Utility Computing?) For that, we need private infrastructure. A &amp;ldquo;Private Cloud&amp;rdquo; you might say? Yes, but that is only the beginning of the story.  It is certainly a good start: get really good a supplying bricks. (Or prefab houses)&lt;/p&gt;
&lt;p&gt;The rest of the infrastructure story (I believe) has to do with simplifying and unifying our bricks, or concrete. It is not enough to be able to spin up VM&amp;rsquo;s on demand. A big scalable SAN is not enough. Who cares how fast you can provision, what is it that you are provisioning?&lt;/p&gt;
&lt;p&gt;Here is what we need to make it happen:&lt;/p&gt;
&lt;h2 id=&#34;1-blur-the-lines-of-storage--compute--networking&#34;&gt;1. Blur the lines of Storage / Compute / Networking&lt;/h2&gt;
&lt;p&gt;You system engineers should be &lt;a href=&#34;http://puppetlabs.com/blog/puppet-network-device-management/&#34;&gt;configuring your networking&lt;/a&gt;. Your network should be &lt;a href=&#34;https://en.wikipedia.org/wiki/Software_Defined_Networking&#34;&gt;configuring itself&lt;/a&gt;. The Storage should not just be salable, but agile and dynamic. The data should migrate to where it can be served the most efficiently. IaaS can enable this to happen as the apps are abstracted from the hardware. &lt;em&gt;Imagine a setup where every server node has internal SSDs and an agile filesystem automatically moves the most requested objects to its local storage (for the lowest latency)&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;2-devops&#34;&gt;2. Devops&lt;/h2&gt;
&lt;p&gt;Destroy the Silos! There should be no difference between development and ops. Make your developers keep their apps running. This gives them an incentive to build them better. The trick is of course to have the infrastructure in place for them to use. &lt;em&gt;Imagine a place where Developers own the end-to-end lifecycle of their application&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;3-forward-thinking-business-people&#34;&gt;3. Forward thinking business-people&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;IT&amp;rdquo; provides a huge competitive advantage for business, even more than it has in the past. There is no industry where IT is not a critical business component. Evolving IT helps lift up everything. &lt;em&gt;Imagine a world where the CTO can see the vision and imagine how cutting edge infrastructure provides real value to the business&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;4-apps-that-assume-they-are-distributed&#34;&gt;4. Apps that assume they are distributed&lt;/h2&gt;
&lt;p&gt;We can&amp;rsquo;t keep building our systems with single points of failure, whether they are in a &amp;ldquo;cloud&amp;rdquo; or not. Think about the pain of going from one MySQL server to two. How about the three? It is too hard. We need a more Mongodb-like approach. &lt;em&gt;Imagine a world where every app can be &amp;ldquo;poured&amp;rdquo; to one node or a hundred nodes&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;5-design-apps-to-use-objects-instead-of-files&#34;&gt;5. Design Apps to use Objects instead of Files&lt;/h2&gt;
&lt;p&gt;The S3 approach is good. We need to learn from this. Web-apps are not the only things that can benefit from the transition from file to objects. HTTP based object stores are much easier to scale and can keep a higher availability than traditional filesystems. &lt;em&gt;Imagine a world where applications can take advantage of distributed object stores as easily as they can use local filesystems&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Those are my predictions for the future. I&amp;rsquo;m excited to be a part of it!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Graph EVERYTHING with Graphite!</title>
      <link>/graph-everything-with-graphite/</link>
      <pubDate>Sun, 29 Apr 2012 19:46:17 +0000</pubDate>
      <guid>/graph-everything-with-graphite/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;I believe that a graphing tool should be flexible enough for the user to decide what metrics are important to their environment, and it should be able to accept metric data from any source.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are pretty good graphing tools out there for the Linux engineer: &lt;a href=&#34;http://munin-monitoring.org/&#34;&gt;Munin&lt;/a&gt;, &lt;a href=&#34;http://munin-monitoring.org/&#34;&gt;Ganglia&lt;/a&gt;, &lt;a href=&#34;http://www.cacti.net/&#34;&gt;Cacti&lt;/a&gt;, &lt;a href=&#34;http://www.zabbix.com/&#34;&gt;Zabbix&lt;/a&gt;, &lt;a href=&#34;http://collectd.org/&#34;&gt;Collectd&lt;/a&gt;, etc.&lt;/p&gt;
&lt;p&gt;I call these &amp;ldquo;graphing&amp;rdquo; tools, because I don&amp;rsquo;t consider them &amp;ldquo;monitoring&amp;rdquo; tools, like Nagios, WhatsUp, or Zabbix. Here is are my thoughts on graphing/monitoring:&lt;/p&gt;
&lt;p&gt;Graphing
Monitoring&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Shows trends over time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contains &lt;strong&gt;historic&lt;/strong&gt; data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Post-event analytics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Performance&lt;/strong&gt; trends&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More Dev&amp;rsquo;y?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;Will run out of disk space in 3 days&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;Ldap queries up 200% in 6 months&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/graphite_fullscreen_800.png&#34;&gt;&lt;img src=&#34;../../uploads/graphite_fullscreen_800.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alerts when thresholds are crossed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;States are definite: Ok/Bad/Warning&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Notifications are &lt;strong&gt;actionable&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Makes events&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More Ops&amp;rsquo;y?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;OMG OUT OF SPACE&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;LDAP IS DOWN&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/nagios.png&#34;&gt;&lt;img src=&#34;../../uploads/nagios.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Any good engineer knows you need both functions. Zabbix, WhatsUp, and some others handle both functions. Splunk can do threshold detection and make graphs too, but it ain&amp;rsquo;t no Nagios. Personally I like tools that&lt;a href=&#34;http://en.wikipedia.org/wiki/Unix_philosophy&#34;&gt; do one thing, and one thing well&lt;/a&gt;. I am not after some sort of monitoring super-tool, and I don&amp;rsquo;t believe that #monitoringsucks.&lt;/p&gt;
&lt;h1 id=&#34;what-makes-graphite-awesome&#34;&gt; What Makes Graphite Awesome&lt;/h1&gt;
&lt;h3 id=&#34;1-so-many-ways-to-get-data-into-it&#34;&gt;1: So many ways to get data into it&lt;/h3&gt;
&lt;p&gt;Graphite does &lt;strong&gt;not&lt;/strong&gt; have any kind of polling daemon. It just accepts incoming metrics, it is up to you how you want to get them there, and what to call them. It enforces no naming convention. All it needs you to do is echo your metricname, value into tcp port 2003, it does the rest.&lt;/p&gt;
&lt;p&gt;Ways you can get data into Graphite:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Push or pull from your &lt;a href=&#34;https://github.com/adamhjk/munin-graphite&#34;&gt;munin-nodes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pull from your existing &lt;a href=&#34;https://github.com/ganglia/ganglia_contrib/tree/master/graphite_integration/&#34;&gt;Ganglia&lt;/a&gt; install&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integrate sending metrics directly into your application with &lt;a href=&#34;https://github.com/etsy/statsd/tree/master/examples&#34;&gt;statsd&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;echo``&amp;quot;mycoolmetric.rate  9000 &lt;/code&gt;date +%s&lt;code&gt;&amp;quot;``|nc graphite.server 2003&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extract metrics from your log files with &lt;a href=&#34;https://github.com/etsy/logster&#34;&gt;logster&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://graphite.readthedocs.org/en/1.0/tools.html&#34;&gt;This list goes on&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-the-only-limit-to-visualizing-your-data-is-your-imagination&#34;&gt;2. The only limit to visualizing your data is your imagination&lt;/h3&gt;
&lt;p&gt;Unlike other graphing systems where the style of the graph is pre-determined, Graphite also does not enforce any kind of convention for making its graphs. It is more like a graph api. Composing your graphs is a manual process, and requires a bit of creativity.&lt;/p&gt;
&lt;p&gt;Graphite does &lt;strong&gt;not&lt;/strong&gt; present the user with pages and pages of pre-rendered graphs like Ganglia, Munin, etc.&lt;/p&gt;
&lt;p&gt;What kind of graphs can you make with Graphite? Lets see some cool examples:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://codeascraft.etsy.com/2010/12/08/track-every-release/&#34;&gt;Etsy&amp;rsquo;s&lt;/a&gt; php warnings correlated with code deploys:
&lt;img src=&#34;http://etsycodeascraft.files.wordpress.com/2010/12/warnings_1hr_deploys3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;My cool stacked latency graph:&lt;a href=&#34;../../uploads/graphite-latency.png&#34;&gt;&lt;img src=&#34;../../uploads/graphite-latency.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Filtering out &lt;a href=&#34;http://obfuscurity.com/2012/04/Unhelpful-Graphite-Tip-6&#34;&gt;deviant server loads&lt;/a&gt;: &lt;a href=&#34;../../uploads/graphite-load.png&#34;&gt;
&lt;img src=&#34;../../uploads/graphite-load.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can see that graphite fits my initial principles. It can suck in metrics from anywhere, and create graphs to fit your imagination. Combine this with a crazy amount of &lt;a href=&#34;http://graphite.readthedocs.org/en/1.0/functions.html&#34;&gt;functions&lt;/a&gt; that you can apply to your metrics, the sky is the limit!&lt;/p&gt;
&lt;p&gt;Cool graphs for you to make:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ratio of shopping cart items to unique visitors?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Overlay your average page load time with your code deploys?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Graph your average rate of change of your storage?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Plot the &lt;a href=&#34;http://obfuscurity.com/2012/04/Unhelpful-Graphite-Tip-1&#34;&gt;mortality rate of your EC2 Instances&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More Reading:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://obfuscurity.com/Tags/Graphite&#34;&gt; Lots of graphite tips&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My &lt;a href=&#34;https://wiki.xkyle.com/Graphite&#34;&gt;Graphite notes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to install graphite &lt;a href=&#34;https://github.com/dcarley/graphite-rpms&#34;&gt;via RPMS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Lose the Metawork and Get on with Your Life!</title>
      <link>/lose-the-metawork-and-get-on-with-your-life/</link>
      <pubDate>Mon, 16 Apr 2012 02:25:27 +0000</pubDate>
      <guid>/lose-the-metawork-and-get-on-with-your-life/</guid>
      <description>&lt;p&gt;Every job has metawork. Sometimes it becomes so commonplace that we just forget about it. We should never forget about it. I hope this blog post reminds you of what &lt;strong&gt;your&lt;/strong&gt; metawork is. For the purposes of this blog post it will focus on code-centric stuff, but could apply to anything.&lt;/p&gt;
&lt;p&gt;Different jobs have different types of metawork. Sometimes it is just paperwork. Other times it is called &amp;ldquo;overhead&amp;rdquo;. Commonly it is referred to as &amp;ldquo;Process&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I personally like the word metawork. In the same sense that metdata is the data about the data, metawork is the work done about the actual work. Let me give some examples with some sort of chart:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/metawork.png&#34;&gt;&lt;img src=&#34;../../uploads/metawork.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Try to put some of your activities on a similar chart. Where is most of your time spent?&lt;/p&gt;
&lt;p&gt;Another litmus test I like to use to determine metawork versus work is to compare the same task if I were doing it at home. For example, installing a new OS on a new laptop:&lt;/p&gt;
&lt;p&gt;At Home
AT Work&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install your OS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Register the laptop&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install your OS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do post install tasks to be compliant
with the corporate infrastructure&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Document the system in whatever tracker is used&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or how about this? Let&amp;rsquo;s compare working on some code at home versus at work:&lt;/p&gt;
&lt;p&gt;At Home
AT Work&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Make Changes to the code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit / Push&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reload the webserver&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a ticket/story in your tracker&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make changes to the code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code review&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit / push&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Close ticket / story&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Documentation?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Push to test / QA&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Push to production / reload&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That example might be stretching some things. I didn&amp;rsquo;t even mention branching / tagging / merging. Depending on who you ask, somethings might me more &amp;ldquo;meta&amp;rdquo; than others.&lt;/p&gt;
&lt;p&gt;But, what is the point here? Yes, it is a job, we have shit to do. Get over it!&lt;/p&gt;
&lt;p&gt;Except, I believe that life is short and precious. So short and precious that we should endeavor to eliminate as much metawork as possible.  Here is what I try to do to keep myself sane:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Automate as much as possible&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Resist meetings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep the metawork / work distinction in mind when building systems&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Only have an email client open during preset times&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use git :)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be conscious of when you are doing metawork (helps you recognize when you are doing too much?)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Knowing is half the battle. Do you know what percentage of your time is spent doing things that are not an &amp;ldquo;end in themselves&amp;rdquo;? Maybe someday as a species we will take drastic steps&amp;hellip;.&lt;/p&gt;
&lt;p&gt;Other people who think like this but write better than me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://teddziuba.com/2011/12/process.html&#34;&gt;http://teddziuba.com/2011/12/process.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://zachholman.com/posts/how-github-works/&#34;&gt;http://zachholman.com/posts/how-github-works/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Puppet versus CFEngine 2: Editing Files</title>
      <link>/puppet-versus-cfengine-editing-files/</link>
      <pubDate>Thu, 26 Jan 2012 01:46:30 +0000</pubDate>
      <guid>/puppet-versus-cfengine-editing-files/</guid>
      <description>&lt;h2 id=&#34;update-i-wrote-this-article-when-i-was-young-and-stupid-it-is-obsolete-puppet-wins-just-use-augeashttpprojectspuppetlabscomprojects1wikipuppet_augeas&#34;&gt;Update: I wrote this article when I was young and stupid. It is obsolete. Puppet wins, just use &lt;a href=&#34;http://projects.puppetlabs.com/projects/1/wiki/puppet_augeas&#34;&gt;Augeas&lt;/a&gt;.&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Both &lt;a href=&#34;http://puppetlabs.com/&#34;&gt;Puppet&lt;/a&gt; and &lt;a href=&#34;http://cfengine.com/&#34;&gt;CFEngine&lt;/a&gt; are formidable configuration management systems. Let&amp;rsquo;s compare the two to see how the match up on the common task of editing files. Feel free to jump straight to the conclusion if you are impatient.&lt;/p&gt;
&lt;h2 id=&#34;why-would-you-need-this&#34;&gt;Why would you need this?&lt;/h2&gt;
&lt;p&gt;What is the use-case here? These are some common tasks I do that involve editing files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Managing lines in /etc/fstab&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adding and revoking ssh keys in authorized_keys&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Editing hosts in /etc/hosts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Setting root passwords in /etc/shadow&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adding users in /etc/passwd&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adding lines to /etc/sudoers&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cfengine-2-capabilities&#34;&gt;CFEngine 2 Capabilities&lt;/h2&gt;
&lt;p&gt;Starting with CFEngine 2, here are the built in functions for editing files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Append&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AppendIfNoLineMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AppendIfNoSuchLine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AppendIfNoSuchLinesFromFile&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AppendToLineIfNotContains&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CommentLinesMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CommentLinesStarting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CommentNLines&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CommentToLineMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DeleteLinesAfterThisMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DeleteLinesContaining&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DeleteLinesMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DeleteLinesStarting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DeleteLinesNotContaining&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DeleteLinesNotMatchingFileItems&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DeleteLinesNotStartingFileItems&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DeleteNLines&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DeleteToLineMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EmptyEntireFilePlease&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FixEndOfLine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ForEachLineIn&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GotoLastLine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HashCommentLinesContaining&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HashCommentLinesMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HashCommentLinesStarting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;InsertFile&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;InsertLine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LocateLineMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PercentCommentLinesContaining&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PercentCommentLinesMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PercentCommentLinesStarting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Prepend&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PrependIfNoLineMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PrependIfNoSuchLine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ReplaceLineWith&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ReplaceAll With&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ReplaceFirst&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ReplaceLinesMatchingField&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RunScriptIfLineMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RunScriptIfNoLineMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SlashCommentLinesContaining&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SlashCommentLinesMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SlashCommentLinesStarting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UnCommentLinesContaining&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UnCommentLinesMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UnCommentsNLines&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UnCommentToLineMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WarnIfFileMissing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WarnIfLineContaining&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WarnIfLineMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WarnIfLineStarting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WarnIfNoLineContaining&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WarnIfNoLineMatching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WarnIfNoLineStarting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WarnIfNoSuchLine&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, lots of options for manipulating text files. Basically you can Append, Delete, Replace, Comment, or Uncomment (with various types of comment characters) any regex or normal string.&lt;/p&gt;
&lt;h3 id=&#34;example-etchosts&#34;&gt;Example:  /etc/hosts&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;editfiles:
 { /etc/hosts
   AppendIfNoSuchLine  &amp;quot;192.168.0.1   router&amp;quot;
   DeleteLinesMatching &amp;quot;192.168.0.254 laptop&amp;quot;
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;CFEngine 3 has a more &lt;a href=&#34;https://cfengine.com/manuals/cf3-reference.html#files-in-agent-promises&#34;&gt;refined edit_files bundle&lt;/a&gt;, but I have yet to dig into it and learn it. (I&amp;rsquo;m still stuck on CFEngine 2)&lt;/p&gt;
&lt;h2 id=&#34;puppet-capabilities&#34;&gt;Puppet Capabilities&lt;/h2&gt;
&lt;p&gt;How about Puppet? Well, it doesn&amp;rsquo;t have (at the time of this writing) built-in file editing capabilities. (See &lt;a href=&#34;http://projects.puppetlabs.com/projects/puppet/wiki/Pattern_Requests&#34;&gt;http://projects.puppetlabs.com/projects/puppet/wiki/Pattern_Requests&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;You can write your own definition if you feel so inclined, or copy and paste from the contributed &lt;a href=&#34;http://projects.puppetlabs.com/projects/1/wiki/Simple_Text_Patterns&#34;&gt;Simple Text Patterns&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For particular jobs there are existing modules for &lt;a href=&#34;http://projects.puppetlabs.com/projects/1/wiki/Module_Ssh_Auth_Patterns&#34;&gt;ssh key management&lt;/a&gt;, &lt;a href=&#34;http://docs.puppetlabs.com/references/stable/type.html#mount&#34;&gt;fstab mounts&lt;/a&gt;, &lt;a href=&#34;http://docs.puppetlabs.com/references/stable/type.html#host&#34;&gt;/etc/hosts entries&lt;/a&gt;, etc. However there isn&amp;rsquo;t a built in generic file editing procedure. Why not? Reading about the controversy might make you think differently about this seemingly &amp;ldquo;lack&amp;rdquo; of functionality in Puppet.&lt;/p&gt;
&lt;h3 id=&#34;example-etchosts-1&#34;&gt;EXAMPLE:  /ETC/HOSTS&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;host { &#39;router&#39;:
 ensure =&amp;gt; &#39;present&#39;,
 target =&amp;gt; &#39;/etc/hosts&#39;,
 ip =&amp;gt; &#39;192.168.0.1&#39;,
 host_aliases =&amp;gt; &#39;router&#39; 
}
host { &#39;laptop&#39;:
 ensure =&amp;gt; &#39;absent&#39;,
 target =&amp;gt; &#39;/etc/hosts&#39;,
 ip =&amp;gt; &#39;192.168.0.254&#39;,
 host_aliases =&amp;gt; &#39;laptop&#39; 
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;the-controversy&#34;&gt;The Controversy&lt;/h2&gt;
&lt;p&gt;Even in the CFEngine world there is disagreement about the editfiles functions. Some people believe that simply manipulating the text file is not the correct way to approach the problem, in fact some believe that it &lt;a href=&#34;http://web.archive.org/web/20100710052745/http://www.cfwiki.org/cfwiki/index.php/Editfiles_Considered_Harmful&#34;&gt;makes more problems&lt;/a&gt; than it solves.&lt;/p&gt;
&lt;p&gt;In the Puppet world, it seems that their model of system management is designed to be more atomic, with settings being either &lt;strong&gt;absent&lt;/strong&gt; or &lt;strong&gt;present&lt;/strong&gt;. The edit files functions have a more script-like mentality, leading to configurations that end up being un-maintainable. (&lt;a href=&#34;https://groups.google.com/group/puppet-users/browse_thread/thread/c64ba5017516b46f&#34;&gt;See this discussion&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;One might say that the solution to this problem is to use Puppet &lt;a href=&#34;http://docs.puppetlabs.com/guides/templating.html&#34;&gt;templates&lt;/a&gt;, or CFEngine&amp;rsquo;s copy functions. I agree that in some situations, like apache configs, sshd_config, or sudoers you want to have a predictable end result. Templates seem like a better solution than editing files for this end.&lt;/p&gt;
&lt;p&gt;On the other hand, there are some files that don&amp;rsquo;t really fit into templates, like fstab, /etc/hosts, or /etc/passwd. This may be especially true if the client computers are not fully controlled by the Puppet/CFEngine admin. (Say in a compliance situation, were you may not even know what is in /etc/passwd, all you know is that youneed your line appended to it.)&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If your environment involves keeping workstation and servers in compliance, where you do not have full control over the servers and need to keep the breakage to a minimum, CFEngine is probably the tool. Puppet certainly could be used, but CFEngine provides a richer set of pre-made tools. (You don&amp;rsquo;t have to write your own sed and greps)&lt;/p&gt;
&lt;p&gt;If your environment is fully under your control, you are probably better off following the more atomic and template based model of Puppet. In the end that style of configuration management should lead to more predictable outcomes and less cleanup.&lt;/p&gt;
&lt;p&gt;Honestly I&amp;rsquo;m still a CFEngine / Puppet noob. Feel free to disagree or correct me in the comments.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Achieving Awesome Single-Stream Performance Over Bonded Ethernet</title>
      <link>/achieving-awesome-single-stream-performance-over-bonded-ethernet/</link>
      <pubDate>Wed, 04 Jan 2012 14:19:10 +0000</pubDate>
      <guid>/achieving-awesome-single-stream-performance-over-bonded-ethernet/</guid>
      <description>&lt;p&gt;Ethernet Link Aggregation (aka PortChannel, Etherchannel, ethernet bonding, NIC teaming, trunking, link bundling, Smartgroup, Ethertrunk, etc) is a way to combine multiple Ethernet links to a single logical link. This improves redundancy and increases aggregate performance. It is good stuff, especially if you are into &lt;a href=&#34;../../blog/categories/highavailability/&#34;&gt;High Availability&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is a typical setup:
&lt;a href=&#34;../../uploads/typical.png&#34;&gt;&lt;img src=&#34;../../uploads/typical.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A good start. If you can spare the ports and cables to make this work, you should do it. You get the benefit of very fast fail-over between links if one dies. And you get the aggregated bandwidth. However, you probably will &lt;strong&gt;not&lt;/strong&gt; get the combined bandwidth over a **single **tcp stream. The reason for this is that the switch probably does not round-robin the ethernet frames to the source server. Usually switches have a configurable algorithm for switching frames over bonded links. Here are some options on my switch:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;10g-nexus(config)# port-channel load-balance ethernet ?
destination-ip Destination IP address
destination-mac Destination MAC address
destination-port Destination TCP/UDP port
source-dest-ip Source &amp;amp; Destination IP address
source-dest-mac Source &amp;amp; Destination MAC address
source-dest-port Source &amp;amp; Destination TCP/UDP port
source-ip Source IP address
source-mac Source MAC address
source-port Source TCP/UDP port
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yea, no round robin.  As referenced in &lt;a href=&#34;http://www.kernel.org/doc/Documentation/networking/bonding.txt&#34;&gt;http://www.kernel.org/doc/Documentation/networking/bonding.txt&lt;/a&gt; :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Many switches do not support any modes that stripe traffic
(instead choosing a port based upon IP or MAC level addresses);
for those devices, traffic for a particular connection flowing
through the switch to a balance-rr bond will not utilize greater
than one interface&amp;rsquo;s worth of bandwidth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you do know of a switch that supports striped frames, please &lt;a href=&#34;mailto:kyle@xkyle.com&#34;&gt;contact me&lt;/a&gt;. But! There is a way to work around this limitation and achieve Awesome performance! It costs an extra switch, but the benefits are double performance and the ability to withstand a switch failure. Here is a crappy diagram:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dual.png&#34;&gt;&lt;img src=&#34;../../uploads/dual.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is what is suggested in Section 12 in &lt;a href=&#34;http://www.kernel.org/doc/Documentation/networking/bonding.txt&#34;&gt;http://www.kernel.org/doc/Documentation/networking/bonding.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With this setup, each switch makes its own decision about where to send a frame, but it only has one choice, sort of. In a sense, no matter what aggregation algorithm you have on the switch, it doesn&amp;rsquo;t matter. What matters is the algorithm on the sending server. (round robin in my case)&lt;/p&gt;
&lt;p&gt;The end result give you key benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Resiliency for individual links (failure of cables / optics / nics )&lt;/li&gt;
&lt;li&gt;Resiliency for switches (failure of a switch, powersupply, etc?)&lt;/li&gt;
&lt;li&gt;Better than single-link performance on single streams&lt;/li&gt;
&lt;li&gt;iperf bragging rights?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Proof is in the pudding:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@server1:~# iperf -c server2
------------------------------------------------------------
Client connecting to server2, TCP port 5001
TCP window size: 27.9 KByte (default)
------------------------------------------------------------
[ 3] local 192.168.0.2 port 38576 connected with 192.168.0.1 port 5001
[ ID] Interval Transfer Bandwidth
[ 3] 0.0-10.0 sec 21.1 GBytes 18.1 Gbits/sec
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;exact-components-in-this-setup-if-you-want-to-reproduce-my-work&#34;&gt;Exact Components in this setup (if you want to reproduce my work)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Fast servers from &lt;a href=&#34;http://www.siliconmechanics.com/&#34;&gt;SiliconMechanics.com&lt;/a&gt; (~$10k, high end)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.myricom.com/products/network-adapters/10g-pcie2-8b2-2s.html&#34;&gt;Myricom 10G-PCIE2-8B2-2S&lt;/a&gt; Dual Port Nics (Works great, built in kernel support, supports bonding, etc. ~$700 each)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.newark.com/te-connectivity/2127932-2/sfp-cable-assembly-shld-twinax/dp/84R9082&#34;&gt;Inexpensive 10G copper cables &lt;/a&gt;(Get the right length you need, not something you can crimp. ~$50 each. You will need a bunch of course)&lt;/li&gt;
&lt;li&gt;2X &lt;a href=&#34;http://www.cisco.com/en/US/products/ps11215/index.html&#34;&gt;Cisco Nexus 5548&lt;/a&gt; (Fancy. ~$15k per)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.xkyle.com/Channel_Bonding&#34;&gt;Round Robin Bonding&lt;/a&gt; on the Linux server side&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../uploads/10g-switch.txt&#34;&gt;Switch Config Setup for Virtual Port Channel&lt;/a&gt; by some awesome networking dudes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the end it breaks down to about $2000 per 20g bond. (taking into account switch ports, nics, cables, etc) If your speed and availability can justify that cost, then it is a cool setup.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>4 Philosophies For Building Systems To Be Proud Of</title>
      <link>/4-philosophies-for-building-systems-to-be-proud-of/</link>
      <pubDate>Mon, 08 Aug 2011 02:21:32 +0000</pubDate>
      <guid>/4-philosophies-for-building-systems-to-be-proud-of/</guid>
      <description>&lt;p&gt;Below are a few philosophical guidelines that I use when thinking about systems. Everyone has systems that they are not proud of, even me. But I hope to someday say that I am proud of all of my systems, and I believe that these philosophies will get me there.&lt;/p&gt;
&lt;h2 id=&#34;1-try-toendeavorto-build-systems-with-as-few-dependencies-as-possible&#34;&gt;1. Try to endeavor to build systems with as few dependencies as possible.&lt;/h2&gt;
&lt;p&gt;Sometimes systems can sprawl and get out of hand. Before you know if you have all your servers using ldap, which gets looked up by DNS, and the DNS server has a mysql backend, which is stored on an NFS mount. So&amp;hellip; what happens after a power outage and your servers boot from scratch?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/server-dependencies.png&#34;&gt;&lt;img src=&#34;../../uploads/server-dependencies.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The above example seems obviously broken, but sometimes it is not so obvious with our own systems. (Nobody builds stuff like that&amp;hellip; right? :)) Our own familiarity with our own systems can blind us to their internal fragility. Some tips on how to achieve this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use /etc/hosts instead of DNS for critical servers (don&amp;rsquo;t go crazy here). CFEngine can do this easily for you.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use LDAP sparingly, and configure it to allow root to login when the LDAP server is down. Run a test with the ldap server off to confirm that your servers can function at all. (Login, reboot, startup, etc)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don&amp;rsquo;t use network filesystems (samba, nfs, sshfs, etc) when simple rsyncs would do. Mountpoints suck. Keep it local if possible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In smaller systems, try to keep database, application, and web servers on the same server. I know how it sounds, but sometimes everything you read in CIO Magazine isn&amp;rsquo;t what works best for all environments. Sprawling connected services over multiple servers makes the system as a whole less reliable, not more reliable. (Unless you are doing HA specific stuff)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-if-there-is-a-problem-with-your-system-and-your-monitoring-system-didnt-alert-you-you-have-two-problems&#34;&gt;2. If there is a problem with your system and your monitoring system didn&amp;rsquo;t alert you, you have two problems.&lt;/h2&gt;
&lt;p&gt;The second problem, of course, is that your monitoring system isn&amp;rsquo;t monitoring. Sure it may be checking pings or seeing if TCP port 80 is open. Can it detect when the website has a database connection failure? Will it send you a text when visitors can&amp;rsquo;t add things to the shopping cart? Does it go red when the credit card api is failing?&lt;/p&gt;
&lt;p&gt;Most of the time when responding to an urgent problem, the last thing on a sysadmin&amp;rsquo;s mind is writing a nagios plugin. But I suggest it should be the first. If it isn&amp;rsquo;t urgent, include the act of writing the nagios check part of the problem solving process. Use an all green nagios (and a manual verification) to be the final signal for the all-clear. A nagios check is never fully tested unless it shows red under a truly failed condition. Sure, you could write the nagios check later, but you can&amp;rsquo;t be 100% sure it will turn red next time, it might take a couple tries. Turn the failure into an opportunity.&lt;/p&gt;
&lt;h2 id=&#34;3-with-bigger-systems-try-to-design-them-so-that-no-single-server-reboot-stops-the-whole-system&#34;&gt;3. With bigger systems, try to design them so that no single server reboot stops the whole system.&lt;/h2&gt;
&lt;p&gt;This is a reformulation of the first philosophy, really. All servers need a reboot some day. Be proud of a system were you can reboot any server without asking for permission with minimal impact to your services. This is not achievable in all environments, but it sure is something to be proud of if you can make it happen.&lt;/p&gt;
&lt;h2 id=&#34;4-systems-should-be-self-documenting&#34;&gt;4. Systems should be self documenting&lt;/h2&gt;
&lt;p&gt;This is a controversial topic. There are some in a particular camp that believe that &amp;ldquo;Documentation&amp;rdquo; means some three ring binder with chapters describing each server, install walkthroughs (with screenshots), and copies of the apache configs on paper. I am not of that camp&amp;hellip;&lt;/p&gt;
&lt;p&gt;I believe the system itself should be self-documenting. What do I mean by this? Take the simple issue of hostnames as an example. Some like to give servers cutesy names based off of Nintendo characters, dog breeds, obscure hacker culture references, etc. These names may be good for some sort of security through obscurity, but they do not encourage a self documenting system. Hostnames like ldap1, ldap2 or mysql, or webserver make it easy for humans to develop models in our heads for how our systems work on a grand scale.&lt;/p&gt;
&lt;p&gt;How about another example: switchport configurations in managed switches. For some switches it is important to know what server is on what port. (vlans, poe, qos, etc) Should we print out our &amp;ldquo;show run&amp;rdquo; in order to be the documentation? I suggest we do not. It will be out of date the instant it was on the dead-tree medium. The only case one could make for having that kind of copy would be for a backup scenario. To that I would ask, &amp;ldquo;are you not making backups of your switch configurations already?&amp;rdquo; No, the switch configuration of a switch itself is the documentation for the switch. There is no need to maintain records of switch configurations in two places.&lt;/p&gt;
&lt;p&gt;Another powerful example of a self-documenting system is the power of &lt;a href=&#34;http://www.cfengine.com/community&#34;&gt;CFEngine&lt;/a&gt;. Remember that hypothetical three ring binder that has the description of how to setup each system in your server room? Yea, the one that is forever out of date and is useless to anyone except for the reason to say that you have &amp;ldquo;documentation?&amp;rdquo; Your CFEngine configs are the living digital version of that three ring binder. CFEngine itself can contain all the recipes, ingredients, workflows, and special sauce to recreate your systems. Need a copy of your documentation? It&amp;rsquo;s /var/cfengine. It is mostly human readable anyway. Print if management requires it, but the digital copy is your golden copy, not the paper.&lt;/p&gt;
&lt;p&gt;For everything else, I keep a &lt;a href=&#34;http://wiki.xkyle.com/&#34;&gt;wiki&lt;/a&gt;. It works for me.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>A DRBD Configuration Options Shootout!</title>
      <link>/a-drbd-configuration-options-shootout/</link>
      <pubDate>Sun, 24 Jul 2011 20:41:55 +0000</pubDate>
      <guid>/a-drbd-configuration-options-shootout/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.drbd.org/&#34;&gt;DRBD&lt;/a&gt; is the bomb. Think Raid 1 over the network between two servers. It enables sysadmins (in combination with heartbeat) to increase &lt;em&gt;&lt;strong&gt;service&lt;/strong&gt;&lt;/em&gt; uptime, while enabling &lt;strong&gt;&lt;em&gt;server&lt;/em&gt;&lt;/strong&gt; downtime. This means you can do kernel updates, do hardware maintenance, upgrade ram, move the server to another rack, etc, all while keeping the service up.&lt;/p&gt;
&lt;p&gt;Because DRBD is often used in &lt;a href=&#34;http://en.wikipedia.org/wiki/High_availability&#34;&gt;high availability&lt;/a&gt; scenario, there isn&amp;rsquo;t much room for experimentation with in-production systems. However, recently I had the opportunity configure DRBD on a pair of servers a couple of weeks before they were needed to be in service. I took the opportunity to benchmark different configurations of DRBD. Now, you might look at my graphs and say, &amp;ldquo;Oh, obviously the performance is like that&amp;rdquo;, but I would say it is not so obvious.&lt;/p&gt;
&lt;h2 id=&#34;philosophers-corner&#34;&gt;Philosopher&amp;rsquo;s Corner&lt;/h2&gt;
&lt;p&gt;A bit of philosophy here, sometimes we are tempted to claim knowledge about a certain subject. For example someone might say that &amp;ldquo;Intel is faster than AMD&amp;rdquo; or &amp;ldquo;Fords are better than Chevy&amp;rsquo;s&amp;rdquo;, or &amp;ldquo;DRBD protocol A (asynchronous replication) is faster than protocol C (fully synchronous replication)&amp;quot;. But when someone makes claims like this, often they do not believe that what they are saying is simply an opinion. They are claiming to have &lt;strong&gt;&lt;em&gt;knowledge&lt;/em&gt;&lt;/strong&gt; about the subject.&lt;/p&gt;
&lt;p&gt;In order to claim to have knowledge about something, many philosophers believe that in order to claim to have knowledge you have to have three things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What you are claiming is &lt;strong&gt;&lt;em&gt;actually&lt;/em&gt;&lt;/strong&gt; true.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You have to &lt;strong&gt;&lt;em&gt;believe&lt;/em&gt;&lt;/strong&gt; what you are saying.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You have to have &lt;em&gt;&lt;strong&gt;justification&lt;/strong&gt;&lt;/em&gt; for your claim.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For many of us, we don&amp;rsquo;t even get past step 1. Even if we do get past step 1 then we rarely get 3. With the case of DRBD, now that I have done these benchmarks I can feel confident to make claims. Not only will I believe myself, but I&amp;rsquo;m pretty sure they are actually true, and I will be justified as I have actually run tests to back up my claims.&lt;/p&gt;
&lt;h2 id=&#34;onto-the-benchmarks&#34;&gt;Onto the Benchmarks&lt;/h2&gt;
&lt;p&gt;My test setup is a pair of 2U Silicon Mechanics servers. Here are their specifics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.siliconmechanics.com/i28696/dual-xeon-server.php&#34;&gt;Silicon Mechanics R346&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Single Xeon (quad core) CPU (for storage servers, you don&amp;rsquo;t need tons of cpu, even this is overkill)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;24 GB Ram (Nice! Ram is cheap and gives an awesome speed boost to repeatedly accessed data)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;8X 3TB Seagate SAS drives (3T isn&amp;rsquo;t the best $/GB, but it is nice to go high)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3ware 9750-4i raid controller with BBU (If I could splurge on anything, this is it. I love 3ware raid cards)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;10g Ethernet card (only used for testing, not in final production)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Raid 6 across all 8 drives. XFS as the filesystem (Right now XFS is the filesystem of choice for large arrays, and raid6 is the only way to go with raid arrays this large if you need the space)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Basically I took these potential variables in a DRBD configuration and permutated all of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DRBD replication protocols A, B, C (Which protocol is right for me? Does it matter?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DRBD backing flushes on and off (This makes my computer really fast right?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;10G or 1G in a &amp;ldquo;crossover&amp;rdquo; between the two servers (Won&amp;rsquo;t this make my nosql queries return 10x faster?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Paired or in disconnected mode (How does being disconnected impact performance?)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My testing methodology was to configure DRBD in the test configuration, wait for the synchronization to finish, then make one node primary and mount the filesystem. From there I ran the Bonnie++ benchmark program (version 1.03), and then record the results. If you want my raw data, &lt;a href=&#34;../../uploads/drbd-shootout-bonnie.csv&#34;&gt;here it is&lt;/a&gt;. But I will also try to distill the data and share some conclusions.&lt;/p&gt;
&lt;h2 id=&#34;drbd-in-stand-alone-mode&#34;&gt;DRBD In Stand Alone Mode&lt;/h2&gt;
&lt;h2 id=&#34;uploadsdrbd-stand-alonepnguploadsdrbd-stand-alonepng&#34;&gt;&lt;a href=&#34;../../uploads/drbd-stand-alone.png&#34;&gt;&lt;img src=&#34;../../uploads/drbd-stand-alone.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The differences in speed here are within the standard deviation of just running bonnie, the only conclusion I would draw here is that in stand-alone mode the read and write speed of the array is the same as without drbd. (Sorry I don&amp;rsquo;t have the non-drbd on the list). This is mostly expected, but how can we &lt;strong&gt;&lt;em&gt;know&lt;/em&gt;&lt;/strong&gt; without testing?&lt;/p&gt;
&lt;h2 id=&#34;testing-read-speed&#34;&gt;Testing Read Speed&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/drbd-read-speeds1.png&#34;&gt;&lt;img src=&#34;../../uploads/drbd-read-speeds1.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With Read speeds across every configuration are about the same. There are some high and lows but they are within the standard deviation of Bonnie runs. I wish I had even more time to run many Bonnie runs and average them. The conclusion I take away from this is that DRBD does not impact the read speed performance. Again this is kinda expected, but_ I wasn&amp;rsquo;t about to claim to know this without testing_. As such from now on I will be focusing on write performance. Again, no matter what your DRBD configuration, your disk read speed should be around the same as if you didn&amp;rsquo;t have DRBD.&lt;/p&gt;
&lt;h2 id=&#34;10g-versus-1g&#34;&gt;10G versus 1G&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/drbd-write-speed.png&#34;&gt;&lt;img src=&#34;../../uploads/drbd-write-speed.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here I&amp;rsquo;m comparing paired DRBD configurations with a 1g Ethernet crossover versus a 10g Ethernet crossover. As mentioned before, no matter what your connection is, the read speed is the same. You could have a 16mb Token Ring adapter between the two servers and the read speed would be the same. It is the write speed that changes. Here the 10g Ethernet gives us a tangible speed increase. For about $1.5k (at the time of this writing) you can throw in 2X 10g cards and a copper crossover and get the full potential write speeds out of your disks. Now, of course if these servers are only connected to client computers via 1g and not much disk IO happens on the server itself, this upgrade may not pass the cost/benefit test. But it is good to &lt;strong&gt;&lt;em&gt;know&lt;/em&gt;&lt;/strong&gt; what it would be like if you did take the 10g plunge.&lt;/p&gt;
&lt;h2 id=&#34;protocol-choice-and-flushes-impact-on-write-speeds&#34;&gt;Protocol Choice and Flushes Impact on Write Speeds&lt;/h2&gt;
&lt;h2 id=&#34;uploadsdrbd-1g-writespnguploadsdrbd-1g-writespnguploadsdrbd-10g-writespnguploadsdrbd-10g-writespng&#34;&gt;&lt;a href=&#34;../../uploads/drbd-1g-writes.png&#34;&gt;&lt;img src=&#34;../../uploads/drbd-1g-writes.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/drbd-10g-writes.png&#34;&gt;&lt;img src=&#34;../../uploads/drbd-10g-writes.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;With the write speeds brought up next to each other it is easier to see the speed differences between the different protocols and whether disabling disk flushes matters. Here is a hint: it doesn&amp;rsquo;t matter. Well, at least with my particular situation it doesn&amp;rsquo;t matter. When the servers are linked together in a crossover situation (a very common scenario), the latency is so low that the protocol choice is mostly inconsequential. The bottom line is that most people can afford protocol C (completely synchronous replication).&lt;/p&gt;
&lt;p&gt;Regarding flushes, with my particular raid card with a BBU, the raid card basically lies to Linux when it asks to do a flush anyway. This is because it is &amp;ldquo;OK&amp;rdquo; for the 3ware card has a battery on its cache, so it is &amp;ldquo;safe&amp;rdquo;. If I didn&amp;rsquo;t have a battery or if it was faulty these charts would probably look different. (Maybe my next blog post) In other situations where a battery-backed raid card is not in use, disabling the flushes would bring the write speeds up to this level, but at a cost of a risk of losing data upon a power loss. (serious data, see &lt;a href=&#34;http://www.drbd.org/users-guide/s-disable-flushes.html&#34;&gt;http://www.drbd.org/users-guide/s-disable-flushes.html&lt;/a&gt; for more info). The bottom line here is that you should not disable flushes. Let Linux and your Raid card make the right decision for you.&lt;/p&gt;
&lt;h2 id=&#34;conclusions-skip-to-here-for-the-tldr-version&#34;&gt;Conclusions (skip to here for the TL;DR version)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Benchmarks on other people&amp;rsquo;s stuff are worthless, do them yourself to see what happens on &lt;strong&gt;your&lt;/strong&gt; OS with &lt;strong&gt;your&lt;/strong&gt; raid card and &lt;strong&gt;your&lt;/strong&gt; disks, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you DRBD servers are in the same datacenter and not replicating over a WAN, &lt;strong&gt;stick with protocol C&lt;/strong&gt;, the performance cost is negligible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you need &lt;strong&gt;full speed writes&lt;/strong&gt;, you must use &lt;strong&gt;10G Ethernet&lt;/strong&gt; to do DRBD replication. If your total input to the server is 1G anyway, you probably can get by without it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don&amp;rsquo;t disable DRBD&amp;rsquo;s flushes. If you need the speed, &lt;strong&gt;use a battery backed raid card&lt;/strong&gt; and let it give you the equivalent write speed boost.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do not be confused, &lt;strong&gt;read speeds are not impacted&lt;/strong&gt; by DRBD. If your workload is mostly reads, DRBD gives you super uptime for basically the cost of another server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In &lt;strong&gt;disconnected&lt;/strong&gt; mode, the write and read &lt;strong&gt;performance is the same&lt;/strong&gt; as if you didn&amp;rsquo;t have DRBD in the first place, so it doesn&amp;rsquo;t hurt you. (In fact on 1G it will probably speed up your writes)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DRBD involves many facets, the OS, raid cards, disks, networking throughput, latency, etc. It is a &lt;strong&gt;complicated system&lt;/strong&gt; and is difficult to draw performance conclusions &lt;strong&gt;without testing&lt;/strong&gt;. &lt;strong&gt;Measurement is knowing&lt;/strong&gt;. I am by no means immune to inconsistent logic and bad testing methodologies. Please &lt;a href=&#34;mailto:kyle@xkyle.com&#34;&gt;email me&lt;/a&gt; or leave a comment if you know something is wrong so I can fix it and not pollute the internet with false information.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Solving the NFS 16-Group Limit Problem</title>
      <link>/solving-the-nfs-16-group-limit-problem/</link>
      <pubDate>Sun, 10 Jul 2011 22:28:22 +0000</pubDate>
      <guid>/solving-the-nfs-16-group-limit-problem/</guid>
      <description>&lt;p&gt;I apologize for the verbose post. This is a complicated problem and it merits full explanation. If you are experiencing this problem I advise you to avoid skimming and read it very carefully :)&lt;/p&gt;
&lt;p&gt;Sometimes you come across a problem that is a little more complex than average. Sometimes it is problem that is rare enough that there isn&amp;rsquo;t an obvious answer in the first google hint. Sometimes a problem may seem unavoidable, which leads to work-arounds, and before you know it you have a mess. The NFS 16-group limit problem is like this. The internet is full of outdated and incorrect pieces of information. This blog post is an attempt to bring this problem to the year 2011. Google: Please make this the number 1 hit for &amp;ldquo;NFS 16 group limit&amp;rdquo; in order to save other souls the hours of troubleshooting that I went through to solve this.&lt;/p&gt;
&lt;p&gt;TL;DR version: Use Linux and &amp;ldquo;rpc.mountd &amp;ndash;manage-gids&amp;rdquo; and you are done.&lt;/p&gt;
&lt;h2 id=&#34;definingthe-actual-problem&#34;&gt;Defining the Actual Problem&lt;/h2&gt;
&lt;p&gt;So what is the actual problem? This problem occurs when a user, who is a member of more than 16 groups, tries to access a file or directory on an nfs mount that depends on his group rights in order to be authorized to see it.  The default authorization mechanism for NFS (auth_sys) will take only a subset of your groups and send it to the nfs server to check if you have rights to read a file. This leads to unpredicatable and intermittent permission problems when it looks like you &lt;em&gt;should&lt;/em&gt; have permission. Allow me to demonstrate:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/groups-failure.png&#34;&gt;&lt;img src=&#34;../../uploads/groups-failure-300x273.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Seems odd right? I &lt;em&gt;should&lt;/em&gt; be able to ls those other directories. Still don&amp;rsquo;t believe me? See a wireshark disessction of one of the nfs packet:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/wireshark-groups.png&#34;&gt;&lt;img src=&#34;../../uploads/wireshark-groups-300x176.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can see that the nfs client is telling the nfs server what groups you are in. And the protocol only has room for 16 :(&lt;/p&gt;
&lt;h2 id=&#34;dispellingmyths-and-superstition&#34;&gt;Dispelling Myths and Superstition&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This problem nothing to do with NFSv4, NFSv2, NFSv3, etc. This is a limitation of auth_sys. Going to NFSv4 does not make this problem go away.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The problem has nothing to do with the underlying filesystem on the nfs server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This 16 group limit with auth_sys is not tuneable. It is defined in &lt;a href=&#34;http://tools.ietf.org/html/rfc5531&#34;&gt;RFC 5531&lt;/a&gt; and cannot be adjusted or patched.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using group-based ACLs will not solve the problem.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Actually trying to wrap your brain around the problem and trying to solve it turns into a whiteboard that looks like this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/acl-whiteboard.jpg&#34;&gt;&lt;img src=&#34;../../uploads/acl-whiteboard-300x131.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-best-solution-ever-a-new-option-for-the-nfs-server&#34;&gt;The Best Solution Ever!: A New Option for the NFS Server&lt;/h2&gt;
&lt;p&gt;I hope this is the first thing you read after encountering this problem for the first time. I hope that you don&amp;rsquo;t have to read any of the other &amp;ldquo;solutions&amp;rdquo; on this page. I hope you haven&amp;rsquo;t wasted your time doing other work-arounds. I hope you are in an environment where you are able to use this solution:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rpc.mountd --manage-gids
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;rpc.mountd is the program that actually serves nfs. The &amp;ndash;manage-gids option allows the server to just plain ignore the incoming bogus 16 groups from the client, and allow the nfs server to look it up for itself. Straight from the man page:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;       -g  or  --manage-gids
              Accept requests from the kernel to  map  user  id  numbers  into
              lists  of  group  id  numbers for use in access control.  An NFS
              request will normally (except when using Kerberos or other cryp-
              tographic  authentication)  contains  a  user-id  and  a list of
              group-ids.  Due to a limitation in the NFS protocol, at most  16
              groups ids can be listed.  If you use the -g flag, then the list
              of group ids received from the client will be replaced by a list
              of  group ids determined by an appropriate lookup on the server.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You must have a modern (past 2007) version ( &amp;gt;1.0.12 ) of the linux nfs server for this option and a recent kernel (&amp;gt;2.6.21) to go with it. Most modern distros can do it, but if you are using Solaris or some sort of embedded NFS appliance, you are probably out of luck.&lt;/p&gt;
&lt;p&gt;On a modern Ubuntu server it has this option on by default. Check with the documentation on your distro on how to turn it on properly. Then party. I can stop writing this blog post because everyone runs modern versions of Linux for their NFS servers right??? :)&lt;/p&gt;
&lt;h2 id=&#34;a-crapy-solution-acls&#34;&gt;A Crapy Solution: ACLS&lt;/h2&gt;
&lt;p&gt;You might be thinking to yourself that you can get around this group limit by setting acls. You would be kinda right. The problem is, you &lt;strong&gt;cannot&lt;/strong&gt; use group based ACLs consistently. You &lt;strong&gt;can&lt;/strong&gt; use user-based ACLs and that will work. Why? Because your user id &lt;strong&gt;does&lt;/strong&gt; get passed to the NFS server, and it can decide if you should see a file or not based on the ACLs on it.&lt;/p&gt;
&lt;p&gt;So what, are you going to add every user that needs access to any file or folder in the acl? Who is going to maintain these acls? If it is going to be scripted, who is going to maintain the script? Does your filesystem even have enough meta data space to handle all of these user acls? (Hint: probably not. JFS and ZFS are the only ones that can handle lots and lots of acls.)&lt;/p&gt;
&lt;p&gt;You might read somewhere that you can use NFS4 specific acls. While this is true, that they do exist, they do not solve the 16 group limit problem:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/nfs4-acls.png&#34;&gt;&lt;img src=&#34;../../uploads/nfs4-acls-300x148.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You don&amp;rsquo;t have to believe my screen shots. Just do it for yourself.&lt;/p&gt;
&lt;p&gt;If you are going to go this route the only way is with ZFS or JFS with some sort of script that builds and modifies dozens and dozens of user ACLs recursively. Just say no.&lt;/p&gt;
&lt;h2 id=&#34;an-even-more-complicated-solution-kerberos&#34;&gt;An Even More Complicated Solution: Kerberos&lt;/h2&gt;
&lt;p&gt;Yea, just in case you didn&amp;rsquo;t think hundreds of ACLs couldn&amp;rsquo;t get any more complicated&amp;hellip;
Now, I don&amp;rsquo;t have much to say on this subject. This might be a potential solution for you if you have conversations like this:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Comrade&lt;/strong&gt;: Do you have a good recommendation for a text editor?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You&lt;/strong&gt;: I recommend Eclipse or Microsoft Visual Studio.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Comrade&lt;/strong&gt;: Hey dude, what is the key to your wifi?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You&lt;/strong&gt;: You need an active directory account syncronized with the RADIUS server before you can authenticate. What is your MAC address?&lt;/p&gt;
&lt;p&gt;Yes, you can replace auth_sys\ with auth_krb5. Get ready for authentication tickets, backup key servers, crypto exchanges, setting up trust relationships, etc. If you have this many groups you probably have LDAP or Active Directory as well as your NFS server and client machines. What&amp;rsquo;s one more complicated system you don&amp;rsquo;t fully understand thrown into the mix?&lt;/p&gt;
&lt;h2 id=&#34;oustide-the-box-solutions&#34;&gt;Oustide the Box Solutions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use Samba?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enforce everyone to be in fewer than 16 groups?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom home-brew rsync stuff?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Give everyone dropbox accounts? :)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google Docs?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;appendix-fully-understanding-what-is-going-on-behind-the-scenes-with---manage-gids&#34;&gt;Appendix: Fully Understanding What Is Going On Behind The Scenes With &amp;ndash;manage-gids&lt;/h2&gt;
&lt;p&gt;Ok. If you have come this far and you are using &amp;ndash;manage-gids to elegantly solve this problem. Congratulations. Ready for the behind the scenes look?&lt;/p&gt;
&lt;p&gt;Rpc.mountd is basically ignoring what the nfs client says about your auxiliary group memberships. This does &amp;ldquo;break&amp;rdquo; the RFC, but if you ask me the RFC was broken to begin with.&lt;/p&gt;
&lt;p&gt;When testing this, you may find some odd behavior. Don&amp;rsquo;t jump to conclusions without understanding!&lt;/p&gt;
&lt;p&gt;When the NFS server intercepts the access request, the server must now look up your groups. It will use whatever you have nsswitch.conf setup to look this stuff up. Be sure that the NFS server is reading your groups and user id membership stuff correctly, otherwise you will have permission failures.&lt;/p&gt;
&lt;p&gt;Also, the NFS server will cache group lookups so it doesn&amp;rsquo;t have to continuously make queries. The cache is visible like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@archive:~# cat /proc/net/rpc/auth.unix.gid/content
#uid cnt: gids...
0 9: 0 4 20 24 46 100 112 121 127
1001 30: 100 4 20 24 46 112 115 121 122 127 1001 1002 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see the map, and it provides a legend at the top. If you are making changes to group memberships very often, you must flush this cache to get reasonable results. The NFS rpc.mountd program will cache group mappings for &lt;!-- raw HTML omitted --&gt;30 minutes&lt;!-- raw HTML omitted --&gt; (nfs-utils-1.2.2/utils/mountd/cache.c line 157).  Flush it like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@archive:~# date +%s &amp;gt;  /proc/net/rpc/auth.unix.gid/flush
root@archive:~# cat /proc/net/rpc/auth.unix.gid/content
#uid cnt: gids...
0 9: 0 4 20 24 46 100 112 121 127
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also, you now have a new limit on group membership. It isn&amp;rsquo;t exactly a specific set number as much as a total number of bytes needed to represent your group memberships. In my experimenting it was 1000 bytes (characters). So if you are using group IDs that are 5 digits, +1 for a space separator and you have (1000 / 6) = 166 as your new group limit. This of course may change with time, so I encourage you to test this in your own environment. (I could not verify this with source code. It looks like it should be 100 to me? Experimentation was the only way for me to be sure what the new limit &lt;!-- raw HTML omitted --&gt;actually&lt;!-- raw HTML omitted --&gt; was.)&lt;/p&gt;
&lt;p&gt;When a user hits this limit, that user (and only that user) will have his process hang, and the nfs client kernel will complain that the nfs server isn&amp;rsquo;t responding, which it isn&amp;rsquo;t. The nfs server will not be able to look up the groups for that user, and fails to send back a nfs packet with a response.&lt;/p&gt;
&lt;p&gt;In addition, your gid map cache will have a special entry that will be commented out like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@archive:~# cat /proc/net/rpc/auth.unix.gid/content
#uid cnt: gids...
0 9: 0 4 20 24 46 100 112 121 127
#1001 0:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is an indication that the nfs server could not look up the groups for user 1001. I&amp;rsquo;ve setup a nagios check on my nfs servers to detect for this, in order to let us know right away that the problem is occurring. In addition I have nagios checks to alert us if we are approaching the new group limit.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>How to Benchmark Harddrives in Linux</title>
      <link>/how-to-benchmark-harddrives-in-linux/</link>
      <pubDate>Sat, 21 May 2011 03:02:47 +0000</pubDate>
      <guid>/how-to-benchmark-harddrives-in-linux/</guid>
      <description>&lt;p&gt;So you have some new harddrives. Maybe you are thinking about building a DIY storage server? Maybe some Raid? Maybe you just want to know if your drives are performing as well as when you bought them? How can you know? &lt;strong&gt;Measurement is Knowing&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The thing about benchmarks is that you always must be skeptical. Each system&amp;rsquo;s particular disks, controller, raid level and settings, cpu, ram, filesystem, operating system, etc can GREATLY affect the performance of a system. The only way to know is to &lt;strong&gt;do it yourself&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;_1. Super Easy Block Level Read Test: hdparm _&lt;/strong&gt;
This particular &amp;ldquo;benchmark&amp;rdquo; is easiest and the least reliable. It does raw reads only, good luck on where it pulls them from. Here is an example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@archive:/# hdparm -tT /dev/sda
/dev/sda:
Timing cached reads:   1472 MB in  2.00 seconds = 735.81 MB/sec
Timing buffered disk reads: 360 MB in  3.02 seconds = 119.24 MB/sec
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Its&amp;hellip; something. Good for just real quick, non-destructive read tests to compare between two disks or arrays.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;2. Better Block Level Read and Write Tests: palimpsest&lt;/em&gt;&lt;/strong&gt;
Palimpsest operates on a block device. It has nothing to do with files and filesystems like hdparm. If performed on a whole disk you can see the how the drive slows down as the head approaches the interior of the spindle. It also does seek tests.&lt;/p&gt;
&lt;p&gt;You can run &amp;ldquo;palimpsest&amp;rdquo; on the command line, or in a gnome environment go System-&amp;gt;Administration -&amp;gt; Disk Utility. Modern versions of the program can also connect to remote servers which may not have a gui. It can also be X-forwarded from remote servers.&lt;/p&gt;
&lt;p&gt;Here is a gallery of some examples:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/Screenshot-1-10.0-GB-RAID-1-Array-%E2%80%93-Benchmark.png&#34;&gt;&lt;img src=&#34;../../uploads/Screenshot-1-10.0-GB-RAID-1-Array-%E2%80%93-Benchmark-150x150.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/Screenshot-1-20-GB-RAID-5-Array-%E2%80%93-Benchmark.png&#34;&gt;&lt;img src=&#34;../../uploads/Screenshot-1-20-GB-RAID-5-Array-%E2%80%93-Benchmark-150x150.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/Screenshot-1-30-GB-RAID-0-Array-%E2%80%93-Benchmark.png&#34;&gt;&lt;img src=&#34;../../uploads/Screenshot-1-30-GB-RAID-0-Array-%E2%80%93-Benchmark-150x150.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/Screenshot-64-GB-Solid-State-Disk-ATA-Corsair-CSSD-V64GB2-%E2%80%93-Benchmark.png&#34;&gt;&lt;img src=&#34;../../uploads/Screenshot-64-GB-Solid-State-Disk-ATA-Corsair-CSSD-V64GB2-%E2%80%93-Benchmark-150x150.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/Screenshot-2.0-TB-Hard-Disk-ATA-WDC-WD20EARS-00MVWB0-%E2%80%93-Benchmark.png&#34;&gt;&lt;img src=&#34;../../uploads/Screenshot-2.0-TB-Hard-Disk-ATA-WDC-WD20EARS-00MVWB0-%E2%80%93-Benchmark-150x150.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Notice the slow writes on the raid 5 (second picture), and the small deviation on seeks on the SSD (forth picture). Also you can see how spinning disks slow down as the approach the center of the spindle. (fifth picture)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;3: Real World Filesystem Benchmarks: Bonnie++&lt;/em&gt;&lt;/strong&gt;
In some way, the above benchmarks are more theoretical than what would be ideal. Unless you have a special application, you are like the rest of us: &lt;strong&gt;you work on files&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Working with normal files means you interact with a filesystem. Working on a filesystem means you have block sizes, extents, permissions, fragmentation, etc. All of these additional complexities need to be measured.&lt;/p&gt;
&lt;p&gt;The solution here is bonnie++, which does what most applications do: write, read, seek, create, and delete files sequentially and randomly.&lt;/p&gt;
&lt;p&gt;Here would be a typical invocation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kyle@archive:/tmp# bonnie++
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is better to run it as not root. Run it in the directory where you want it to make files. Its output is&amp;hellip; a little hard to comprehend and outside the scope of this article. One can read the documentation and compile your own spreadsheet and graph with some Libreoffice Calc foo:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/Bonnie-Graphs.png&#34;&gt;&lt;img src=&#34;../../uploads/Bonnie-Graphs-300x178.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nothing too fancy. It has a lot of output, so you have to pick the numbers that are important to you. Another option is to use the bon_csv2html to output a slightly more readable output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat benchmarks.csv | bon_csv2html  &amp;gt; bench.html
firefox bench.html
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/bonnie-html.png&#34;&gt;&lt;img src=&#34;../../uploads/bonnie-html-300x62.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bonnie benchmarks are the hardest to read, but are they closest to the &lt;em&gt;reality&lt;/em&gt; of the performance of your disk in your environment.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;So that is it. Try out different raid configurations and filesystems, but benchmark them to &lt;strong&gt;&lt;em&gt;know&lt;/em&gt;&lt;/strong&gt; if it improves or degrades your performance instead of depending on hunches and superstition!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>New Technologies for a New Year</title>
      <link>/new-technologies-for-a-new-year/</link>
      <pubDate>Mon, 10 Jan 2011 02:33:49 +0000</pubDate>
      <guid>/new-technologies-for-a-new-year/</guid>
      <description>&lt;p&gt;Starting with the new year, I decided to move my xkyle.com domain and related stuff away from my account at &lt;a href=&#34;http://www.dreamhost.com/&#34;&gt;Dreamhost&lt;/a&gt;, a shared hosting server, to my virtual machine at &lt;a href=&#34;http://www.tummy.com/&#34;&gt;Tummy.com&lt;/a&gt;. I have nothing but good things to say about Dreamhost though, they are excellent at what they do. However, I wanted to do more than what a shared hosting provider could do for me, I needed Root!&lt;/p&gt;
&lt;p&gt;Moving my websites and dns to a dedicated server grants me the ability to implement a few technologies to usher in the new year. Here they are:&lt;/p&gt;
&lt;h2 id=&#34;ssl-on-everything&#34;&gt;&lt;strong&gt;SSL-On-Everything&lt;/strong&gt;!&lt;/h2&gt;
&lt;p&gt;I don&amp;rsquo;t like things listening and editing and manipulating traffic in transit between me and a server. Deep packet inspection, proxy servers, tcp monitors, etc all give me the jibblies. There are a couple things that might prevent one from implementing SSL on a site though.Historically websites here hosted with one website per ip address. Then we came out with virtual hosting (vhosts), which allowed multiple websites to be on a single ip address. (See &lt;a href=&#34;http://www.myipneighbors.net/&#34;&gt;http://www.myipneighbors.net/&lt;/a&gt; for a tool to see this in action) The problem was, SSL couldn&amp;rsquo;t do this. Recently, something called &lt;a href=&#34;http://en.wikipedia.org/wiki/Server_Name_Indication&#34;&gt;SNI&lt;/a&gt; (Server Name Identification) enabled this to work. There are some legacy systems that do not support this technology though, so be aware. Of course with IPV6 on the horizon, this will become less of an issue.The other barrier to entry for SSL is getting the cert itself. I am a believer that a self-signed cert is better than no cert at all, but we can do better. &lt;a href=&#34;http://www.startcom.org/&#34;&gt;Startcom&lt;/a&gt; is a SSL provider that provides free Level 1 certificates. Startcom&amp;rsquo;s CA is in almost all browsers. I&amp;rsquo;m a big fan. So now with a combination of some apache rewrite lines:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
RewriteEngine On
RewriteCond %{HTTPS} off
RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And that is my only vhost on :80, everything else is on :443.&lt;/p&gt;
&lt;h2 id=&#34;dnssec&#34;&gt;&lt;strong&gt;DNSSEC!&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Domain_Name_System_Security_Extensions&#34;&gt;DNSSEC&lt;/a&gt; is a security extension to our DNS infrastructure that sets up a chain of trust, going from the ROOT name servers all the way down, to ensure that the answer you get for a dns query can be cryptographically verified. Kinda like SSL, it makes sure that the DNS server you are talking to is giving good answers. This works by sticking your public keys one level up the chain, and then that chain above you signs them. For example, I would submit my keys to the .com registry, and they would sign them.&lt;/p&gt;
&lt;p&gt;But, .com is not yet participating in this. So as a temporary measure until all the TLDs are signing, ISC has setup a temporary trust anchor called &lt;a href=&#34;https://dlv.isc.org/&#34;&gt;DLV&lt;/a&gt;. I&amp;rsquo;ve generated my keys and submitted to them. Using a great DNSSEC visualization tool, &lt;a href=&#34;http://dnsviz.net/&#34;&gt;dnsviz.net&lt;/a&gt;, you can graphically see how the chain of trust flows (click to make it bigger):&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/auth_graph.png&#34;&gt;&lt;img src=&#34;../../uploads/auth_graph-300x300.png&#34; alt=&#34;A Graph Representing the DNSSEC Trust Relationships for xkyle.com&#34;&gt;&lt;/a&gt;
At the top right you can see the root, represented with a &amp;ldquo;.&amp;rdquo; You can see the black line means that it is not securely delegating to the .com part. But, the dlv.isc.org is, and it is giving a big blue arrow to my domain. See This for the full &lt;a href=&#34;http://dnsviz.net/d/xkyle.com/dnssec/&#34;&gt;visualization&lt;/a&gt;, including a legend and explanation for all the little things. Its great! I use this &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/64247/&#34;&gt;firefox extension&lt;/a&gt; to help let me know what sites are signed and which are not. You don&amp;rsquo;t even have to be using actual DNSSEC nameservers for this to work. DNSSEC is a huge topic, probably deserving a dedicated blog post&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;ipv6&#34;&gt;&lt;strong&gt;IPV6!&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;IPv6 is the next generation Internet protocol. It uses 128bit ip addresses instead of 32 bit ones to solve the problem of &lt;a href=&#34;http://ipv6.he.net/statistics/&#34;&gt;rapidly depleting address space&lt;/a&gt;. It is not all doom and gloom, certainly nothing to lose sleep over. But as a system administrator, I like being informed and up to speed on emerging technologies. Honestly though, IPv6 is not exactly new, it has been around in the Linux kernel since 1996&amp;hellip;&lt;/p&gt;
&lt;p&gt;Setting up IPv6 was pretty straightforward. I signed up for a tunnel from &lt;a href=&#34;http://tunnelbroker.net/main.php&#34;&gt;He.net&lt;/a&gt;, ran the provided commands on my server, then initialized AAAA (quad A) records for my domain names. Restart apache and you are done (assuming it is running on *:80)&lt;/p&gt;
&lt;p&gt;This of course is me setting up IPv6 on the server side. To do it on the client side (at my house) I intend to investigate &lt;a href=&#34;http://www.comcast6.net/&#34;&gt;Comcast&amp;rsquo;s IPv6 trials&lt;/a&gt;. Currently I just take that same server side tunnel and use radvd to advertise it as an ipv6 router to my vpn. This is not as efficient as it could be, Comcast&amp;rsquo;s IPv6 should provide lower latency. To give myself a warm fuzzy feeling, I use the &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/590/?id=590&#34;&gt;ShowIP Firefox extension&lt;/a&gt; so I can see when I&amp;rsquo;m connected to an IPv6 enabled website. If you&amp;rsquo;ve got it all setup, check out &lt;a href=&#34;http://xkyle.com&#34;&gt;http://xkyle.com&lt;/a&gt; directly, and it should show a nice green IPv6 number in the lower right hand corner:
&lt;a href=&#34;../../uploads/xkyle-ipv6.png&#34;&gt;&lt;img src=&#34;../../uploads/xkyle-ipv6.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;So you might be thinking to yourself, &amp;ldquo;Wow Kyle, that is a lot of new things. I&amp;rsquo;m scared.&amp;rdquo; Don&amp;rsquo;t be scared. Learning about these technologies is a lot of fun, and actually implementing them is even more fun! So now you might be thinking, &amp;ldquo;Ok, this is cool, but I don&amp;rsquo;t have a server or any of this stuff&amp;rdquo;. What would you say if I told you that everything I did here was done for free? (With the exception of actually buying the domain name) If you have a pet domain name to play with already, what else do you need? SSL certs: free at &lt;a href=&#34;http://www.startssl.com/&#34;&gt;startcom&lt;/a&gt;. IPv6 Addresses: Free at &lt;a href=&#34;http://tunnelbroker.net/&#34;&gt;he.net&lt;/a&gt;. DNSSEC: &lt;a href=&#34;https://dlv.isc.org/&#34;&gt;ISC&lt;/a&gt; provides this for free to encourage DNSSEC adoption. Dedicated server: Amazon provides a &lt;a href=&#34;http://aws.amazon.com/free/&#34;&gt;free micro virtual server&lt;/a&gt; for a year for your Linux enjoyment. So lets get cracking! I challenge you to join the cutting edge of the Internet and trace to me with &amp;ldquo;mtr -6 xkyle.com&amp;rdquo; and verify my domain with &amp;ldquo;dig +dnssec xkyle.com&amp;rdquo;!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Adding a Built-in Sensor Bar to a TV</title>
      <link>/adding-a-built-in-sensor-bar-to-a-tv/</link>
      <pubDate>Thu, 07 Oct 2010 01:21:22 +0000</pubDate>
      <guid>/adding-a-built-in-sensor-bar-to-a-tv/</guid>
      <description>&lt;p&gt;I was thinking about moving my Wii, and relocating it to a more conspicuous place. I was annoyed at my sensor bar getting in the way:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/Wii_sensorbar3_05012-706981.jpg&#34;&gt;&lt;img src=&#34;../../uploads/Wii_sensorbar3_05012-706981.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I knew that the sensor bar was just 2 IR LEDs. So why not just build those LEDs right into the TV? One less cord to lay around. Lets open it up!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/IMG_20101006_145345.jpg&#34;&gt;&lt;img src=&#34;../../uploads/IMG_20101006_145345-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/IMG_20101006_150230.jpg&#34;&gt;&lt;img src=&#34;../../uploads/IMG_20101006_150230-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I used the given board that had 2 White LEDs that lit up the Westinghouse Logo. I simply added my own IR leds and some wires:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/IMG_20101006_151845.jpg&#34;&gt;&lt;img src=&#34;../../uploads/IMG_20101006_151845-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/leds.jpg&#34;&gt;&lt;img src=&#34;../../uploads/leds-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/leds-in-hand.jpg&#34;&gt;&lt;img src=&#34;../../uploads/leds-in-hand-267x300.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Drill some holes and stick them in! Then put everything back in its place:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/IMG_20101006_154634.jpg&#34;&gt;&lt;img src=&#34;../../uploads/IMG_20101006_154634-300x118.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Works great! More powerful than the stock sensor bar LEDs, so they respond better with my TV next to the window:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/IMG_20101006_170304.jpg&#34;&gt;&lt;img src=&#34;../../uploads/IMG_20101006_170304-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/IMG_20101006_170251.jpg&#34;&gt;&lt;img src=&#34;../../uploads/IMG_20101006_170251-300x195.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Of course, our eyes cannot see the infrared, so the TV looks the same!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Solving &#34;Role Playing 4&#34;</title>
      <link>/solving-role-playing-4/</link>
      <pubDate>Tue, 05 Oct 2010 20:25:06 +0000</pubDate>
      <guid>/solving-role-playing-4/</guid>
      <description>&lt;p&gt;Last month Games Magazine published their &lt;a href=&#34;http://www.gamesmagazine-online.com/gameslinks/contest29.html&#34;&gt;Online Contest 29 - Role Playing 4&lt;/a&gt;. Here is the puzzle:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/GamesMagazineContest29.gif&#34;&gt;&lt;img src=&#34;../../uploads/GamesMagazineContest29.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The circles represent actors, the diamonds represent movies they have been in. Pink is for actresses and blue is for actors. The numbers represent the numbers in their name: First, Last. Question marks indicate the number in their name is 3,4,6, or 9 letters. The center actress is what we are after. Note there are no clues for her name, but she has been in 13 movies. All movies in this puzzle are in the last century (2000-now) and are not shorts or documentaries.&lt;/p&gt;
&lt;p&gt;Personally, I can&amp;rsquo;t imagine solving this puzzle without computer aid. Just ask yourself, how many actresses do you know with 7 letters in their last name? Uh&amp;hellip;.&lt;/p&gt;
&lt;p&gt;So how will we go about solving this? Let us start by numbering the nodes to make them easy to reference:
&lt;a href=&#34;../../uploads/GamesMagazineContest29-WithNodes.gif&#34;&gt;&lt;img src=&#34;../../uploads/GamesMagazineContest29-WithNodes.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My language of choice to solve this is going to be python. The first thing we will need though, is a copy of the IMDB. Luckily, the IMDB provides alternative interfaces besides their web interface, including &lt;a href=&#34;http://www.imdb.com/interfaces#plain&#34;&gt;plain text file downloads&lt;/a&gt;! And now we need the &lt;a href=&#34;http://imdbpy.sourceforge.net/&#34;&gt;python-imdbpy&lt;/a&gt; package. It comes with a script that will allow you to import these imdb downloads into local mysql tables. For exact commands you can check out my &lt;a href=&#34;https://dev.xkyle.com/gamesmagazine/Role%20Playing%204/README&#34;&gt;README&lt;/a&gt; file, which includes exact wget, mysql, and python commands to import the database locally.&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_539&amp;rdquo; align=&amp;quot;alignnone&amp;rdquo; width=&amp;quot;835&amp;rdquo; caption=&amp;quot;I&amp;rsquo;m hopeless without phpmyadmin. Yes I am a noob.&amp;quot;]&lt;a href=&#34;../../uploads/phpmyadmin-rp4.jpg&#34;&gt;&lt;img src=&#34;../../uploads/phpmyadmin-rp4.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;p&gt;So you have a local copy of the imdb? Great! Now how will we go about solving the puzzle? My approach is to start first by narrowing down all of the possibilities for the actors in each node. The center node possibilities are going to be any actress who has been in 13 movies in the last century (only a few hundred). How will we narrow down the other nodes? Regular expressions. For example, node 0 has 5 letters in their first name, and 3,4,6 or 9 letters in their last. Here is a regular expression to find that:&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;^(([^- ,]{3})|([^- ,]{4})|([^- ,]{6})|([^- ,]{9})), [^- ,]{5}( |$)
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Special thanks to &lt;a href=&#34;http://www.tummy.com/journals/users/jafo&#34;&gt;Jafo&lt;/a&gt; and &lt;a href=&#34;http://www.wwwdotorg.org/&#34;&gt;swarren &lt;/a&gt;for helping me create these. If you are wondering, the IMDB stores names as Last, First. We can narrow down these outlining actors (0-7) by only getting those actors/actresses with at least 2 movies in the last century, also if they have at least one record in the person_info table. (To exclude unpopular actors, extras, etc)&lt;/p&gt;
&lt;p&gt;So now we have lists for the possibilities of each actor. In my implementation I actually used two programs, one the create these lists (&lt;a href=&#34;https://dev.xkyle.com/gamesmagazine/Role%20Playing%204/find-actorpossibilities.py&#34;&gt;find-actorpossibilities.py&lt;/a&gt;) and then a second program to utilize these lists to solve the problem (&lt;a href=&#34;https://dev.xkyle.com/gamesmagazine/Role%20Playing%204/startatthecenter.py&#34;&gt;startatthecenter.py&lt;/a&gt;) I will now talk about the second one.&lt;/p&gt;
&lt;p&gt;To solve this, I used a recursive (my favorite kind) function. It basically looks like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;def recurse(level, centeractress, placedactors):
        if level == 8:
                # Print the solution
                print [actorname(i) for i in placedactors]
      print placedactors
      return

  for possibleactor in actor[level].possibilities:
      if possibleactor not in placedactors + [centeractress]:
          sharedmovies = moviesincommon(centeractress, possibleactor)
          if len(sharedmovies) &amp;gt;= len(actor[level].links):
              recurse(level+1, centeractress, copy.copy(placedactors + [possibleactor]))
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;The actor object has a property called links that has a tuple of the movies they are connected to. Most are 2 but one of them is 3. All I do is check how many movies they have been in with the center spoke. I&amp;rsquo;m not even testing what that movie is, or even recording it!  To make it a little faster and cut out false positives, I check between outlining actors at key points where they overlap:&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;        if level == 2:
      if len(moviesincommon3(placedactors[0], placedactors[1], centeractress)) &amp;lt; 1:
          return
  elif level == 3:
      if len(moviesincommon4(placedactors[0], placedactors[1], placedactors[2], centeractress)) &amp;lt; 1:
          return
  elif level == 6:
      if len(moviesincommon3(placedactors[4], placedactors[5], centeractress)) &amp;lt; 1:
          return
  elif level == 8:
                if len(moviesincommon3(placedactors[0], placedactors[7], centeractress)) &amp;lt; 1:
                        return
      else:
          print &amp;quot;I HAZ A SOLUTION:&amp;quot;
          print [actorname(i) for i in placedactors]
          print placedactors
          return
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;These points are on the chart where multiple actors are in the same movie with the center actress. This prunes down quite a bit. All we need now some code to kick use off:&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;for actress in actor[8].possibilities:
  placedactors = []
  placedmovies = []
  print &amp;quot;We are recursing with &amp;quot; + actorname(actress) + &amp;quot; (&amp;quot; + str(actress) + &amp;quot;)&amp;quot;
  recurse(0, actress, copy.copy(placedactors) )
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Notice we have to send copies of the list into the function because lists are mutable, and we need each branch of the recursive tree to have its own copy of the list. That is pretty much it. Just let it recurse through all the actors for a couple of hours. There are a couple of false positives, which actually may be technically correct (I didn&amp;rsquo;t thoroughly check them) due to foreign films, documentaries, etc.&lt;/p&gt;
&lt;p&gt;If you would like to check out my code and run it for yourself, check it out!:&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;svn co https://dev.xkyle.com/gamesmagazine
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Be sure to read the README for the prerequisites you will need. Also check out my &lt;a href=&#34;https://wiki.xkyle.com/Games_Magazine_Online_Contest_29_-_Role_Playing_4&#34;&gt;wiki page&lt;/a&gt; for one possible complete &lt;a href=&#34;https://wiki.xkyle.com/Games_Magazine_Online_Contest_29_-_Role_Playing_4#One_Possible_Solution&#34;&gt;solution&lt;/a&gt; and more information.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Plug Computers!</title>
      <link>/plug-computers/</link>
      <pubDate>Wed, 15 Sep 2010 22:27:30 +0000</pubDate>
      <guid>/plug-computers/</guid>
      <description>&lt;p&gt;Recently I gave a presentation on &lt;a href=&#34;http://en.wikipedia.org/wiki/Plug_computer&#34;&gt;Plug Computers&lt;/a&gt; at the local &lt;a href=&#34;http://nclug.org/&#34;&gt;NCLUG&lt;/a&gt;.  Plug computers are inexpensive, small, and low power computers, about the size of a wall wart.&lt;/p&gt;
&lt;p&gt;They make great home servers, appropriate for file sharing, exporting media files for your devices (&lt;a href=&#34;http://en.wikipedia.org/wiki/Digital_Living_Network_Alliance&#34;&gt;DLNA&lt;/a&gt;), making backups (&lt;a href=&#34;http://backuppc.sourceforge.net/&#34;&gt;backuppc&lt;/a&gt;), etc.&lt;/p&gt;
&lt;p&gt;If you would like to check out the slides for my presentation: &lt;a href=&#34;../../uploads/PlugComputers.odp&#34;&gt;Plug Computers Presentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you would like to see my wiki notes on plug computers: &lt;a href=&#34;http://wiki.xkyle.com/Plugcomputers&#34;&gt;http://wiki.xkyle.com/Plugcomputers&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Bash Boggle - A Boggle Solver Written in Bash!</title>
      <link>/bash-boggle-a-boggle-solver-written-in-bash/</link>
      <pubDate>Sun, 22 Aug 2010 07:24:10 +0000</pubDate>
      <guid>/bash-boggle-a-boggle-solver-written-in-bash/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../../uploads/boggle.jpg&#34;&gt;&lt;img src=&#34;../../uploads/boggle-300x239.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bash is my favorite computer language. I also love writing programs to help human problems.&lt;/p&gt;
&lt;p&gt;Inspired by this &lt;a href=&#34;http://www.circlemud.org/~jelson/software/netboggle.pl&#34;&gt;online Boggle solver&lt;/a&gt;, I decided to write my own solver while my friends were too busy playing the game and having fun :)&lt;/p&gt;
&lt;p&gt;If you would like to test my work, here is the code:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.xkyle.com/bashboggle/&#34;&gt;https://dev.xkyle.com/bashboggle/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You will need the linux &amp;ldquo;words&amp;rdquo; dictionary, which is installable on Ubuntu by running &amp;ldquo;sudo apt-get install wamerican&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Why Bash? Yea it is not as fast as C, not as terse as Perl, not as elegant as Python, bla bla bla. But Bash is Fun, and it is good to keep the skills sharp. I think I will port it to python next just for the practice.&lt;/p&gt;
&lt;p&gt;Here is an example input and output:&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;kyle@kyle:~/Projects/bashboggle$ cat board.txt
E    I    D    A    N
I    G    S    S    H
R    R    Qu   D    L
A    Y    T    E    T
I    A    O    A    E
kyle@kyle:~/Projects/bashboggle$ ./boggle.sh board.txt
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
arty
dash
delta
digs
diss
eels
girt
girted
gray
hassle
hassled
rigid
rigs
sans
sash
shad
shads
sled
sleds
sleet
teaed
teat
teed
tels
toed
tray
trig
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;The board format is pretty flexible. As long as there is some sort of whitespace in between the letters, it will work. It is also case insensitive. For test boggle problems I used this &lt;a href=&#34;http://www.easysurf.cc/boggle.htm&#34;&gt;online Boggle site&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Computer Assisted Jenga with the Wii Balance Board and Linux</title>
      <link>/computer-assisted-jenga-with-the-wii-balance-board-and-linux/</link>
      <pubDate>Sun, 01 Aug 2010 05:07:57 +0000</pubDate>
      <guid>/computer-assisted-jenga-with-the-wii-balance-board-and-linux/</guid>
      <description>&lt;p&gt;I like to think about how games work, in the case of &lt;a href=&#34;http://en.wikipedia.org/wiki/Jenga&#34;&gt;Jenga&lt;/a&gt;, it is just physics!&lt;/p&gt;
&lt;p&gt;But don&amp;rsquo;t you wish you could peel back reality and see what is happening with the physics from the inside? Well now you can, with the help of a Wii Balance Board.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/wii-jengasetup.jpg&#34;&gt;&lt;img src=&#34;../../uploads/wii-jengasetup-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For the setup you need these ingredients:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Wii Balance Board&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Computer with Bluetooth&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux, preferably Ubuntu&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jenga Set, alternatively &amp;ldquo;&lt;a href=&#34;http://www.argos.co.uk/static/Product/partNumber/3904172.htm&#34;&gt;Tension Tower&lt;/a&gt;&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some know-how to compile a trunk version of &lt;a href=&#34;http://abstrakraft.org/cwiid/&#34;&gt;Cwiid&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some other python stuff (see the build instructions for details)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://wiki.xkyle.com/WiiJenga&#34;&gt;And my code&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;m going to maintain all instructions on how to setup all the technical details on my wiki: &lt;a href=&#34;http://wiki.xkyle.com/WiiJenga&#34;&gt;http://wiki.xkyle.com/WiiJenga&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once you have it setup, you can see where the real center of balance is of your game, and you can tell how close it is to toppling over.&lt;/p&gt;
&lt;p&gt;In reality, the balance board isn&amp;rsquo;t quite sensitive enough to very accurately detect the center of balance of the Jenga blocks, or detect how many Jenga blocks there are, but it is fun to watch:&lt;/p&gt;
</description>
    </item>
    <item>
      <title>The Seagate Dockstar: A Very Cool Linux Device</title>
      <link>/the-seagate-dockstar-a-very-cool-linux-device/</link>
      <pubDate>Tue, 20 Jul 2010 05:35:25 +0000</pubDate>
      <guid>/the-seagate-dockstar-a-very-cool-linux-device/</guid>
      <description>&lt;p&gt;What if I told you there was a computer out there, a small one, with gigabit ethernet, 4 USB 2.0 ports, runs on 5 watts, and serves as a great NAS (network attached storage) for your home.  It can share files, serve media, be a router, make backups for you, host a lamp stack, be a mail server, etc. It can do whatever you can think up.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dockstar.jpg&#34;&gt;&lt;img src=&#34;../../uploads/dockstar.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;How much would you pay for such a neat little device? $100? $120? What if I told you that this device is ~$35. What a deal. Lose your P4 electricity guzzler and stick this on your shelf with some harddrives plugged into it.&lt;/p&gt;
&lt;p&gt;Now the next question, what Linux distro should we use, and how does one go about installing it? After all, there is no keyboard ports, no display, no cdrom drive. No problem.&lt;/p&gt;
&lt;p&gt;To hack this thing, all you need to do is connect to its internal serial port. Here are some instructions to hook up a &lt;a href=&#34;http://wiki.xkyle.com/Seagate_Dockstar&#34;&gt;serial port to the Seagate Dockstar&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/2010-07-19-23.31.22.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2010-07-19-23.31.22-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now, there are lots of distros, not too many that support the ARM processor. The stock OS is indeed Ubuntu 9.04, however my OS of choice for this hardware is &lt;a href=&#34;http://openwrt.org&#34;&gt;OpenWRT&lt;/a&gt;. Openwrt is a very light, simple, linux distro, designed for embedded systems and routers.  If you wish to follow my steps, here are some instructions on &lt;a href=&#34;http://wiki.xkyle.com/Install_Openwrt_on_a_Seagate_Dockstar&#34;&gt;installing Openwrt on a Dockstar&lt;/a&gt;. I plan to buy a bunch of these and build some sort of super cheap SAN. I&amp;rsquo;ll let you know where it goes. The possibilities are only bounded by your imagination. (And I guess maybe the hardware)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Setting Up Your Very Own PXE Server!</title>
      <link>/setting-up-your-very-own-pxe-server/</link>
      <pubDate>Fri, 16 Jul 2010 22:42:46 +0000</pubDate>
      <guid>/setting-up-your-very-own-pxe-server/</guid>
      <description>&lt;p&gt;Ever fumbled around your house looking for a Linux CD,  but you can&amp;rsquo;t find it? Ever suspected that your ram was going bad, but  you didn&amp;rsquo;t have a way to test it? Ever needed to backup files on a  computer that had a dead and broken operating system? A solution to all  these problems is a super cool tool called PXE booting. PXE booting  allows you to load alternative operating systems over the network,  without the need for cds, cdroms, etc!&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_509&amp;rdquo; align=&amp;quot;alignnone&amp;rdquo; width=&amp;quot;1024&amp;rdquo; caption=&amp;quot;Things you can do with a PXE server&amp;rdquo;]&lt;a href=&#34;../../uploads/pxebooting.jpg&#34;&gt;&lt;img src=&#34;../../uploads/pxebooting-1024x623.jpg&#34; alt=&#34;Things you can do with a PXE server&#34;&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;p&gt;Sound like something that you could benefit from? Setting up your  own PXE boot environment is easy and Fun! Check out my &lt;a href=&#34;http://wiki.xkyle.com/File:Pxe.pdf&#34;&gt;presentation&lt;/a&gt; and then later my &lt;a href=&#34;http://wiki.xkyle.com/pxe&#34;&gt;wiki  page&lt;/a&gt; for notes, commands, and configuration snippets to get your own  setup going.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>ISPs Should Capitalize on their Reverse DNS!</title>
      <link>/isps-should-capitalize-on-their-reverse-dns/</link>
      <pubDate>Wed, 19 May 2010 01:20:39 +0000</pubDate>
      <guid>/isps-should-capitalize-on-their-reverse-dns/</guid>
      <description>&lt;p&gt;Actually&amp;hellip; no they shouldn&amp;rsquo;t. Here is what it would look like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;                                           My traceroute  [v0.75]
kyle (0.0.0.0)                                                              Tue May 18 15:14:52 2010
Keys:  Help   Display mode   Restart statistics   Order of fields   quit

 Host                                                           Loss%    Snt  Last  Avg  Best  Wrst StDev
 1. 192.168.0.1                                                 0.0%     10   12.0  15.6  11.3  33.6   6.7
 2  UPGRADE-YOUR-CONNECTION-1800-COMCAST.res.comcast.net        0.0%     10   13.1  15.8  11.5  31.1   5.9
 3. TURBOBOOST-UP-TO-50MBS.car1.Den.core.comcast.net            44.4%    10   15.3  17.7  11.8  23.1   4.5
 4. LIKE-WHAT-YOU-SEE?-GET-WITH-LEVEL3!.Level3.net              0.0%     10   27.5  22.5  12.5  43.5   9.0
 5. v----LEVEL3-EATS-SAVVISs-PACKETS.Level3.net                 0.0%     10   43.6  35.9  29.7  43.6   5.7
 6. ^----SUCK-IT-L3.das3-v3037.ch3.savvis.net                   50.0%    10   31.2  32.1  30.8  34.5   1.5
 7. FOR-A-GOOD-PING-TIME-CALL-888-638-6771.dallas3.savvis.net   0.0%     9    28.8  31.8  28.8  43.5   4.8
 8. We-heart-savvis.dllstx0.us.bb.gin.ntt.net                   0.0%     9    30.1  33.1  29.4  51.5   7.0
 9. 4.2.2.2......jk..25.209.2.4                                 0.0%     9    70.3  83.1  68.1 186.6  38.9
10. 0.0.0.zero                                                  0.0%     9    51.6  58.0  51.6  72.9   8.0
11. nothing.here.move.along.                                    0.0%     9    55.4  55.1  51.7  62.1   3.5
12. THIS-SPACE-FOR-RENT!!!                                      0.0%     9    86.3  87.4  83.7  91.3   2.7
13. the-real-site.net                                           0.0%     9    103.9 105.9  84.0 128.2  12.0
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Stream of Conciousness Youtube Videos on Linux</title>
      <link>/stream-of-conciousness-youtube-videos-on-linux/</link>
      <pubDate>Mon, 17 May 2010 03:20:20 +0000</pubDate>
      <guid>/stream-of-conciousness-youtube-videos-on-linux/</guid>
      <description>&lt;p&gt;While sitting watching TV I yearned for a more &lt;a href=&#34;http://en.wikipedia.org/wiki/Stream_of_consciousness_%28psychology%29&#34;&gt;stream-of-consciousness&lt;/a&gt; experience. Youtube was the answer.&lt;/p&gt;
&lt;p&gt;However, Youtube requires too much interaction. I wanted to vege out and let it just feed me the stream of random images and sound. Selecting purely random youtube videos sounded like a bad idea though&amp;hellip;&lt;/p&gt;
&lt;p&gt;I decided to do a twitter search for anything with a youtube link, and then let a script just enqueue them into totem, ad-infinitum. Here is my abomination:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
while [ 1 ]; 
do
 for EACHVIDEO in `wget -O - -q &amp;quot;http://search.twitter.com/search.atom?q=youtube.com&amp;quot; | grep http://www.youtube.com | grep &amp;quot;&amp;lt;content&amp;quot; | sed &#39;s/quot;/\n/g&#39; | grep &amp;quot;http://www.youtube.com&amp;quot; | cut -f 1 -d &amp;quot;&amp;amp;&amp;quot; `
 do
 totem --enqueue `youtube-dl -g -b &amp;quot;$EACHVIDEO&amp;quot; ` &amp;amp;
 sleep  2s
 done
 sleep 30s
done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You need a recent version of the youtube-dl script, located &lt;a href=&#34;http://bitbucket.org/rg3/youtube-dl/wiki/Home&#34;&gt;here&lt;/a&gt;. Put it in your path as appropriate. Press N for next! Next! Next!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Sparkfun&#39;s Autonomous Vehicle Competition</title>
      <link>/sparkfuns-autonomous-vehicle-competition/</link>
      <pubDate>Sun, 18 Apr 2010 03:50:33 +0000</pubDate>
      <guid>/sparkfuns-autonomous-vehicle-competition/</guid>
      <description>&lt;p&gt;The Sparkfun Autonomous Vehicle Competition (AVC) was a smash! You can watch some footage of the event at &lt;a href=&#34;http://www.ustream.tv/channel/autonomous-vehicle-competition&#34;&gt;Sparkfun&amp;rsquo;s Ustream&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Here is what the starting / finishing line looked like:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/startingline.jpg&#34;&gt;&lt;img src=&#34;../../uploads/startingline-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And some judges on the roof watching to make sure the Flying robots do not cut corners.&lt;/p&gt;
&lt;p&gt;[](/uploads/startingline.jpg)&lt;a href=&#34;../../uploads/Judges.jpg&#34;&gt;&lt;img src=&#34;../../uploads/Judges-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I was very impressed by the UAVs (unmanned aerial vehicles). Most of them were able to complete the course in record time. Some were even able to land autonomosouly!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/Robota-Landing.3gp&#34;&gt;Robota-Landing&lt;/a&gt; &lt;a href=&#34;../../uploads/DougWiebel-landing.3gp&#34;&gt;DougWiebel-landing&lt;/a&gt; &lt;a href=&#34;../../uploads/Robota-Launch.3gp&#34;&gt;Robota-Launch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sorry for the 3gp format, it is native to the Droid. I wasn&amp;rsquo;t satisfied with the outcome of a transcode from ffmpeg or gstreamer. If someone wants to transcode for me, I would be happy to re-upload.&lt;/p&gt;
&lt;p&gt;I was unimpressed with the ground vehicles. Only a few were able to complete the course. (Just four turns around the Sparkfun building) Most couldn&amp;rsquo;t make it past the first turn. Did they simply not test them? Was it the new environment? I wasn&amp;rsquo;t able to tell.&lt;/p&gt;
&lt;p&gt;For sparkfun, having a three-piece band to play during the heats was a big win! They certainly kept the audience entertained, and by the time the 3rd heat came around, every team had their very own made-up-silly-them-song. I suppose it would be the equivalent of the organ player at a baseball game, but on steroids.&lt;/p&gt;
&lt;p&gt;I hope to enter and win the next years competition!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Yes yes... very professional...</title>
      <link>/yes-yes-very-professional/</link>
      <pubDate>Sun, 11 Apr 2010 00:42:25 +0000</pubDate>
      <guid>/yes-yes-very-professional/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../../uploads/2010-04-10-15.49.42.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2010-04-10-15.49.42-1024x764.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not saying that all OS&amp;rsquo;s don&amp;rsquo;t have problems, but it would be nice if you didn&amp;rsquo;t plaster the problems all over the store :)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>How to Fix a Power Plug with Sugru!</title>
      <link>/how-to-fix-a-power-plug-with-sugru/</link>
      <pubDate>Thu, 08 Apr 2010 02:52:53 +0000</pubDate>
      <guid>/how-to-fix-a-power-plug-with-sugru/</guid>
      <description>&lt;p&gt;I have a first generation Asus Eeepc, but the power plug is failing. All plugs do this eventually. Lots of tiny wires, bending back and forth all the time&amp;hellip; It just happens.&lt;/p&gt;
&lt;p&gt;So should I throw it away and buy a new one? No! It can be easily fixed. Here is what you need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Soldering Iron + Solder&lt;/li&gt;
&lt;li&gt;Flux helps if you have it (If you have not soldered with flux, you are missing out big time)&lt;/li&gt;
&lt;li&gt;Heat shrink or electrical tape&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sugru.com/&#34;&gt;Sugru&lt;/a&gt; can add a nice touch&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Start by using a sharp blade to cut off the plastic molding around the connector to expose the raw barrel connector and wires:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/plug.jpg&#34;&gt;&lt;img src=&#34;../../uploads/plug-300x222.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/2010-04-07-19.37.16.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2010-04-07-19.37.16-300x192.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now your soldering skills will be put to the test. Flux helps! Don&amp;rsquo;t forget to put the heat shrink on first before you solder:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/soldering.jpg&#34;&gt;&lt;img src=&#34;../../uploads/soldering-1024x743.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yea, the sugru, graciously provided by &lt;a href=&#34;http://www.dangerjim.com/&#34;&gt;DangerJim&lt;/a&gt; could use an artist&amp;rsquo;s touch.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/2010-04-07-19.54.19.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2010-04-07-19.54.19-1024x824.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But it works! Looks pretty good.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Help Wanted: What is the pattern in these new WEP Keys?</title>
      <link>/help-wanted-what-is-the-pattern-in-these-new-wep-keys/</link>
      <pubDate>Fri, 02 Apr 2010 18:40:56 +0000</pubDate>
      <guid>/help-wanted-what-is-the-pattern-in-these-new-wep-keys/</guid>
      <description>&lt;p&gt;Can you see the pattern?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ESSID
ESSID in Hex
BSSID
KEY

MCFVC
23CB158
0021636A7177
F8AA1AABA2

H47MD
1B6B095
001D19E2A557
BFD896F9D4

Q36G7
29C9D67
0021632D31E3
BCD77B3755

UX78G
31880E0
0024d2682944
18DD3AB249
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These key pairs were graciously provided by &lt;a href=&#34;http://ericbetts.org&#34;&gt;Eric Betts&lt;/a&gt;. They do not conform to my existing &lt;a href=&#34;../../verizon-fios-wireless-key-calculator/&#34;&gt;WEP key calculator&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Maybe Verizon wised up and made them random? The previous correlation was dead obvious, but this one I can&amp;rsquo;t see.&lt;/p&gt;
&lt;p&gt;Of course, I am only a wannabe cryptologist :)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Status.net - The future (hopefully) of microblogging!</title>
      <link>/status-net-the-future-hopefully-of-microblogging/</link>
      <pubDate>Thu, 18 Mar 2010 01:25:37 +0000</pubDate>
      <guid>/status-net-the-future-hopefully-of-microblogging/</guid>
      <description>&lt;p&gt;First, if you think Twitter / Google Buzz / &lt;a href=&#34;http://www.petstatus.com/&#34;&gt;Petstatus.com&lt;/a&gt; are silly and just fads, you can go ahead and navigate away from this page.&lt;/p&gt;
&lt;p&gt;For those of you who believe that &amp;ldquo;microblogging&amp;rdquo; is a new form of communication between people, then listen up. If you have an account on twitter, why do I have to have an account on twitter as well to subscribe to your updates? What about facebook?&lt;/p&gt;
&lt;p&gt;If you have a hotmail email account, I don&amp;rsquo;t have to have hotmail to email you, why should it be the same with microblogging?&lt;/p&gt;
&lt;p&gt;What we need is a common protocol, so people on different networks can follow and join the conversation! What we need is a protocol&amp;hellip; what we need is&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/statustheme_logo.png&#34;&gt;&lt;img src=&#34;../../uploads/statustheme_logo.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yes, Status.net! Status.net is an application that allows you to microblog, and converse with people even if they are different networks. That&amp;rsquo;s right! Now you can follow your favorite pets on &lt;a href=&#34;http://www.petstatus.com/&#34;&gt;Petstatus.com&lt;/a&gt; even though you are on&lt;a href=&#34;http://identi.ca/&#34;&gt; Identi.ca&lt;/a&gt;. People on &lt;a href=&#34;http://swisen.com/&#34;&gt;Swisen.com&lt;/a&gt; can subscribe to people on &lt;a href=&#34;http://wowtweet.net/&#34;&gt;WowTweet.net&lt;/a&gt;. Amazing!&lt;/p&gt;
&lt;p&gt;And guess what, you can actually MOVE and DELETE your status updates. Yes you actually own them. You can move them to another server if you want. Does twitter allow that? Didn&amp;rsquo;t think so.&lt;/p&gt;
&lt;p&gt;If you are using Dreamhost to host a website, installing Status.net is super easy! They have &lt;a href=&#34;http://status.net/trackback/338&#34;&gt;one-click install for status.net&lt;/a&gt;. If you have trouble working with their installer, I have &lt;a href=&#34;http://wiki.xkyle.com/Dreamhost-statusnet&#34;&gt;some notes&lt;/a&gt; that might help.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>XKCD&#39;s Collatz Conjecture</title>
      <link>/xkcds-collatz-conjecture/</link>
      <pubDate>Fri, 05 Mar 2010 05:44:25 +0000</pubDate>
      <guid>/xkcds-collatz-conjecture/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;http://xkcd.com&#34;&gt;XKCD&lt;/a&gt; comic dated 3/4/2010, the &lt;a href=&#34;http://xkcd.com/710/&#34;&gt;Collatz Conjecture&lt;/a&gt; presents the following scenario:
&lt;img src=&#34;http://imgs.xkcd.com/comics/collatz_conjecture.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Well I don&amp;rsquo;t know if your friends will stop calling your or not, but I was curious about what the graph would actually look like. The graph in the comic looks like it was created with Graphviz, one of my favorite programs!&lt;/p&gt;
&lt;p&gt;So I wrote a quick bash script to generate the approrpiate links for graphviz to interpret:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash&lt;/span&gt;
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;digraph \&amp;#34;xkcd\&amp;#34; {&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; NUMBER in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;seq &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 100&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;$NUMBER % 2&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#We are even&lt;/span&gt;
        let OUTPUT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$NUMBER/2
      &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#Odd&lt;/span&gt;
        let OUTPUT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$NUMBER*3+1
      &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
      echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$NUMBER&lt;span style=&#34;color:#e6db74&#34;&gt; -&amp;gt; &lt;/span&gt;$OUTPUT&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;}&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So what does it really look like? Here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/xkcd-collatz.png&#34;&gt;&lt;img src=&#34;../../uploads/xkcd-collatz-672x1024.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are lots of straggling links. This is of course only because I went to 100. Why not 1000? It is a little big&amp;hellip; click &lt;a href=&#34;../../uploads/xkcd-collatz2.jpg&#34;&gt;Here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Turns out with even more numbers we end up with even more isolated links, no big super chain.&lt;/p&gt;
&lt;p&gt;If you would like to run this code for yourself, first make sure you have the graphviz package installed in your linux system. Then copy that code above into a script, say called xkcd.sh. Then run like so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./xkcd.sh | neato -Tpng | display
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Adjust as necessary.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Sugru Covered Joysticks</title>
      <link>/sugru-covered-joystick/</link>
      <pubDate>Thu, 25 Feb 2010 03:30:06 +0000</pubDate>
      <guid>/sugru-covered-joystick/</guid>
      <description>&lt;p&gt;A shout out and big thanks to my friend &lt;a href=&#34;http://www.dangerjim.com/&#34;&gt;DangerJim&lt;/a&gt; who gave me some &lt;a href=&#34;http://www.sugru.com/&#34;&gt;sugru&lt;/a&gt; to help coat the joysticks of my RC trainsmitter so they don&amp;rsquo;t hurt my thumbs. The results look pretty nice:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/2010-02-24-20.19.49.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2010-02-24-20.19.49-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/2010-02-24-20.19.37.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2010-02-24-20.19.37-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/2010-02-24-20.26.11.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2010-02-24-20.26.11-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Super Paper Mario - Chapter 2 Graph</title>
      <link>/super-paper-mario-graph/</link>
      <pubDate>Sun, 24 Jan 2010 19:15:09 +0000</pubDate>
      <guid>/super-paper-mario-graph/</guid>
      <description>&lt;p&gt;My girlfriend plays an interesting Wii game called &lt;a href=&#34;http://en.wikipedia.org/wiki/Super_Paper_Mario&#34;&gt;Super Paper Mario&lt;/a&gt; where Mario can shift between a 2-dimensional and a 3-dimensional world. Pretty interesting. In chapter 2 section 4 there is a maze of rooms where one must find the last room, room 10. Of course there are walk-throughs all over the internet, but I had her read to me what room she was in, which door she walked through, and what in what room she emerged. Like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Room 9 BR&amp;rdquo; -&amp;gt; &amp;ldquo;Room 5 Top&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This means that Room 9&amp;rsquo;s Bottom Right door drops you into Room 5&amp;rsquo;s top door. I inputed all the all of the connections, and let one of my favorite programs, &lt;a href=&#34;http://www.graphviz.org/&#34;&gt;graphviz&lt;/a&gt; do the rest!&lt;/p&gt;
&lt;p&gt;Using the graphviz mediawiki plugin, all I have to do is input the graph text into a page on my wiki, click save, and it will spit out a graphical version (click to see the full size):&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/papergraph.png&#34;&gt;&lt;img src=&#34;../../uploads/papergraph-255x300.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It could use some tweaking for the overlaps, but its pretty good as is if you ask me. It certainly gives you an insight into the developers thinking when creating the maze. This would certainly be very difficult to do on paper and have it come out clean.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://wiki.xkyle.com/Paper_Mario_Map&#34;&gt;Here is the link to my actual wiki article&lt;/a&gt;. Feel free to edit the graph and click save to see what change happens. (You will have to create an account. Really feel free, I don&amp;rsquo;t mind, edit away!)&lt;/p&gt;
&lt;p&gt;And if you have some suggestions to make the graph look even better, just make them! I watch the recent changes rss feed and I will see it.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>DIYDrone: IMU First steps</title>
      <link>/diydrone-imu-first-steps/</link>
      <pubDate>Fri, 15 Jan 2010 16:45:54 +0000</pubDate>
      <guid>/diydrone-imu-first-steps/</guid>
      <description>&lt;p&gt;This is my first step towards building a UAV, it is a &lt;a href=&#34;http://en.wikipedia.org/wiki/Inertial_measurement_unit&#34;&gt;Inertial Measurement Unit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/2010-01-13-19.57.44.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2010-01-13-19.57.44-300x244.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/2010-01-13-19.57.30.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2010-01-13-19.57.30-300x256.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/2010-01-31-17.42.41.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2010-01-31-17.42.41-300x224.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Automated Aftershock Playing Bot</title>
      <link>/automated-aftershock-playing-bot/</link>
      <pubDate>Mon, 30 Nov 2009 02:18:16 +0000</pubDate>
      <guid>/automated-aftershock-playing-bot/</guid>
      <description>&lt;p&gt;This is a bot I wrote to play Aftershock games for me. Aftershock produces these 5 games that are all basically the same, but with different themes:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.enginesofwar.com&#34;&gt;Engines of War&lt;/a&gt; - 138071613
&lt;a href=&#34;http://www.undeadlive.com&#34;&gt;Undead Live&lt;/a&gt; - 175496321
&lt;a href=&#34;http://www.markofmafia.com&#34;&gt;Mark of Mafia&lt;/a&gt; - 833613775
&lt;a href=&#34;http://gunshockracing.com&#34;&gt;Gunshock Racing&lt;/a&gt; - 124286853
&lt;a href=&#34;http://www.dragonmastersworld.com&#34;&gt;Dragon Masters&lt;/a&gt; - 304299067&lt;/p&gt;
&lt;p&gt;If you play any of these games, feel free to ally with me :) If aftershock bans me, no big deal :)&lt;/p&gt;
&lt;p&gt;These are the types of games that make you log in often to check your status, and use your energy (otherwise it is wasted). The thing is, most of the decisions and things I do in these games are just to preocupy your time, I could write a program to do the simple things for me. So I did! Now only if I could run it periodically from a cronjob. You see, they require you to type in a CAPTCHA every time you log into the web interface, so for my program to work I have to manually log in first. But wait, the ipod app doesn&amp;rsquo;t require a captcha&amp;hellip; if only I could run the app from the ipod, steal it&amp;rsquo;s auth cookie, then run my program it could be compeltely automated! Well the best way I could find to do this was to use the &lt;a href=&#34;http://www.vncrobot.com/&#34;&gt;T-Plan&lt;/a&gt; vnc robot to do the required key presses, then let ssh and bash do the rest.&lt;/p&gt;
&lt;p&gt;I also looked into using the &lt;a href=&#34;http://ericasadun.com/ftp/EricaUtilities/&#34;&gt;Erica Utilities&lt;/a&gt; to start the game without the complexity of vnc, but I found they didn&amp;rsquo;t work on my platform with the 3.0 firmware. So now I can just sit back and let my robot level me up forever!&lt;/p&gt;
&lt;p&gt;Here are some more technical details on the script itself if you are interested. Anyone who plays these games would find these features very desireable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Recovers from raids&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Repairs your buildings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Accepts all incoming ally invitations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automatically uses all your fighting power to get at least 2exp for every fight, and choosing opponents that you can win against. (It automatically heals you if you need it)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redeems combo/key/spell codes from a large number of websites to gain a huge amount of free, non-upkeep items. (And it posts your code everywhere when you have a new one)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sends ally invitations to a huge list of available codes from a large number of code sharing sites to build up your command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Goes through internal game pages to scrape profiles for ally codes to send more invites to.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Quits automatically when you reach the 50 invite 24 hour limit or if your cookie expires.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deposits money in the bank&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course you can change the order or the functions, and they are all optional. All the code is &lt;a href=&#34;https://dev.xkyle.com/&#34;&gt;here&lt;/a&gt;. The code is just bash, using grep, sed, awk, html2text, cat, etc. You will want to edit the variables to meet your needs before you use it of course. You can check out the code with svn:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;svn co &lt;a href=&#34;https://dev.xkyle.com/aftershock&#34;&gt;https://dev.xkyle.com/aftershock&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Explaination of commands:&lt;/p&gt;
&lt;p&gt;aftershock.sh - Main script, takes the argument 1-5 for the particular game you are playing. Needs the -i argument if you need the cookie from the ipod instead of firefox
go-ipod.sh - Runs each game consecutivly by vnc&amp;rsquo;ing to the ipod, running the game, getting the cookie, then running the appropriate aftershock.sh instance
spawnall.sh - Runs an exterm for each aftershock game. Useful if you have logged into each game through firefox, and need the robot to just do everything&lt;/p&gt;
&lt;p&gt;I will try to support people who genuily who want to run this program. It is GPL. Email &lt;a href=&#34;mailto:kyle@xkyle.com&#34;&gt;kyle@xkyle.com&lt;/a&gt; if you need help.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>A Car Wreck</title>
      <link>/a-car-wreck/</link>
      <pubDate>Wed, 25 Nov 2009 01:33:01 +0000</pubDate>
      <guid>/a-car-wreck/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../../uploads/2009-11-16-07.34.491.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2009-11-16-07.34.491-300x224.jpg&#34; alt=&#34;Car after Accident &#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/2009-11-19-15.59.05.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2009-11-19-15.59.05-300x224.jpg&#34; alt=&#34;2009-11-19 15.59.05&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/2009-11-24-16.34.08.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2009-11-24-16.34.08-300x224.jpg&#34; alt=&#34;2009-11-24 16.34.08&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is mostly for my archival purposes.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>My Jar of Fireflies</title>
      <link>/my-jar-of-fireflies/</link>
      <pubDate>Wed, 30 Sep 2009 20:12:35 +0000</pubDate>
      <guid>/my-jar-of-fireflies/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve seen a lot of electronic fireflies on the internet. &lt;a href=&#34;http://negativeacknowledge.com/2008/10/18/led-fireflies-in-a-jar/&#34;&gt;Here&lt;/a&gt;, &lt;a href=&#34;http://www.instructables.com/id/Jar-of-Fireflies/&#34;&gt;here&lt;/a&gt;, and probably others. The theory is simple, just small LED&amp;rsquo;s &lt;a href=&#34;http://en.wikipedia.org/wiki/Charlieplexing&#34;&gt;charlieplexed&lt;/a&gt; with a microcontroller. I wanted to take it a step futher, with a light sensor, solar panel, and more complex firmware.&lt;/p&gt;
&lt;p&gt;This is my first microcontroller project from scratch, and I got to learn all sorts of interesting things like SPI programming, Watchdog Timers, Sleep states, and many other things&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/IMAG0001.JPG&#34;&gt;&lt;img src=&#34;../../uploads/IMAG0001-300x225.jpg&#34; alt=&#34;IMAG0001&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/IMAG0002-fireflies.JPG&#34;&gt;&lt;img src=&#34;../../uploads/IMAG0002-300x225-fireflies.jpg&#34; alt=&#34;IMAG0002&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I wanted to flash more than just one firefly at a time, so I couldn&amp;rsquo;t do true PWM with all 12 with an ATtiny85. So I came up with my own way to control varying levels of brightness. Also I wanted a light sensor so the fireflies could come out slowly during the night, and the quickly disappear when the lights come on. The hardware was pretty difficult to solder, involving stripping &lt;a href=&#34;http://www.radioshack.com/product/index.jsp?productId=2036277&#34;&gt;magnet wire&lt;/a&gt; and hand soldering SMD LEDs.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/IMAG0016.JPG&#34;&gt;&lt;img src=&#34;../../uploads/IMAG0016-300x225.jpg&#34; alt=&#34;IMAG0016&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/IMAG0005-fireflies.JPG&#34;&gt;&lt;img src=&#34;../../uploads/IMAG0005-300x225-fireflies.jpg&#34; alt=&#34;IMAG0005&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sorry for the poor pictures, my camera doesn&amp;rsquo;t do well in low light.&lt;/p&gt;
&lt;p&gt;[flashvideo file=&amp;quot;video/fireflies.flv&amp;rdquo; /]&lt;/p&gt;
&lt;p&gt;All the code is located &lt;a href=&#34;https://github.com/solarkennedy/fireflies&#34;&gt;here&lt;/a&gt;. You can check it out using svn or just download it directly. I was hoping to use a solar panel to make them self-sufficient, but they required too much power for them to be useful unless they were in direct sunlight.&lt;/p&gt;
&lt;p&gt;The parts list and schematic and more info are on my &lt;a href=&#34;http://wiki.xkyle.com/Fireflies&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Final Clock Post</title>
      <link>/final-clock-post/</link>
      <pubDate>Wed, 16 Sep 2009 01:43:46 +0000</pubDate>
      <guid>/final-clock-post/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve finally moved to Colorado, and I had to leave the big clock behind, and luckily I had finished it:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/photo.jpg&#34;&gt;&lt;img src=&#34;../../uploads/photo-300x225.jpg&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I finilized the code, installed the clock in my &lt;a href=&#34;http://relevantchurch.com&#34;&gt;church&lt;/a&gt;, and programmed it for there needs. The code is stored &lt;a href=&#34;https://github.com/solarkennedy/clock&#34;&gt;here&lt;/a&gt; if someone want to see it. If you want to check it out run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/solarkennedy/clock.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I have a little more technical info on my &lt;a href=&#34;http://wiki.xkyle.com/Clock&#34;&gt;wiki&lt;/a&gt;, but it basically goes like this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/68fbb4a6882a094ecd708c15fca783ee.png&#34;&gt;&lt;img src=&#34;../../uploads/68fbb4a6882a094ecd708c15fca783ee.png&#34; alt=&#34;68fbb4a6882a094ecd708c15fca783ee&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So using this and Openvpn, I can control the clock through the serial interface anywhere in the world, even Colorado! And of course the best part of it all, the church staff can also control it by sending an &lt;a href=&#34;http://twitter.com/relevantclock&#34;&gt;@reply using twitter!&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Finishing Clock Teaser</title>
      <link>/finishing-clock-teaser/</link>
      <pubDate>Thu, 30 Jul 2009 00:09:55 +0000</pubDate>
      <guid>/finishing-clock-teaser/</guid>
      <description>&lt;p&gt;The clock is almost finished, I&amp;rsquo;m just sanding the rough edges and putting on the final coat of paint. All schematics and code will be on my wiki when I&amp;rsquo;m finished.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/DCAM0005-clock.JPG&#34;&gt;&lt;img src=&#34;../../uploads/DCAM0005-300x225.jpg&#34; alt=&#34;DCAM0005&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Toorcamp: Day 2</title>
      <link>/toorcamp-day-2/</link>
      <pubDate>Sun, 05 Jul 2009 02:14:13 +0000</pubDate>
      <guid>/toorcamp-day-2/</guid>
      <description>&lt;p&gt;After this second day of talks and no missle silo, there was this strange influx of women as the sunset approached. Turns out they were not for the camp, they were for the band:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/DCAM1-0.jpg&#34;&gt;&lt;img src=&#34;../../uploads/DCAM1-0-300x225.jpg&#34; alt=&#34;DCAM1-0&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/DCAM3-0.jpg&#34;&gt;&lt;img src=&#34;../../uploads/DCAM3-0-300x225.jpg&#34; alt=&#34;DCAM3-0&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;They thought it was cool I guess. Somehow the owner of the silo booked these two events to have them intersect. Why else would 3 bands play in the middle of nowhere?&lt;/p&gt;
&lt;p&gt;Afterwards there was free beer, and let me tell you, geeks can party hardy all night long:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/DCAM0011.JPG&#34;&gt;&lt;img src=&#34;../../uploads/DCAM0011-300x225.jpg&#34; alt=&#34;DCAM0011&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/DCAM0010.JPG&#34;&gt;&lt;img src=&#34;../../uploads/DCAM0010-300x225.jpg&#34; alt=&#34;DCAM0010&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That is two people with EL wires suits and a pirate&amp;rsquo;s mast camp. Below is a zip of all the movies and pictures I collected from this day:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../other/day2.zip&#34;&gt;Day2.zip&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>ToorCamp: Day 1</title>
      <link>/toorcamp-day-1/</link>
      <pubDate>Fri, 03 Jul 2009 17:37:32 +0000</pubDate>
      <guid>/toorcamp-day-1/</guid>
      <description>&lt;p&gt;When I first arrived at toor camp, I was issued a Hardhat and a kit of electronics to construct my own badge:&lt;/p&gt;
&lt;p&gt;[&lt;a href=&#34;../../uploads/DCAM0008-toorcamp.jpg&#34;&gt;&lt;img src=&#34;../../uploads/DCAM0008-300x225.jpg&#34; alt=&#34;DCAM0008&#34;&gt;&lt;/a&gt;](/uploads/DCAM0007-toorcamp.jpg)&lt;a href=&#34;../../uploads/DCAM0007.jpg&#34;&gt;&lt;img src=&#34;../../uploads/DCAM0007-300x225.jpg&#34; alt=&#34;DCAM0007&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What a cool start! Combined with the already cool scenery:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/DCAM0001.jpg&#34;&gt;&lt;img src=&#34;../../uploads/DCAM0001-150x150.jpg&#34; alt=&#34;DCAM0001&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/DCAM0005-toorcamp.jpg&#34;&gt;&lt;img src=&#34;../../uploads/DCAM0005-150x150.jpg&#34; alt=&#34;DCAM0005&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/DCAM0012-toorcamp.jpg&#34;&gt;&lt;img src=&#34;../../uploads/DCAM0012-150x150.jpg&#34; alt=&#34;DCAM0012&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/DCAM0016.jpg&#34;&gt;&lt;img src=&#34;../../uploads/DCAM0016-150x150.jpg&#34; alt=&#34;DCAM0016&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Only one problem: no silo access. We&amp;rsquo;ll see if that changes for day two&amp;hellip;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Decrypting an eBook to make it Searchable</title>
      <link>/decrypting-an-ebook-to-make-it-searchable/</link>
      <pubDate>Thu, 11 Jun 2009 20:23:43 +0000</pubDate>
      <guid>/decrypting-an-ebook-to-make-it-searchable/</guid>
      <description>&lt;p&gt;So I spent $22 on an &lt;a href=&#34;http://www.diesel-ebooks.com/cgi-bin/item/0931541611/Voyage-of-Discovery-From-the-Big-Bang-to-the-Ice-Age-eBook.html&#34;&gt;ebook&lt;/a&gt; for school.&lt;/p&gt;
&lt;p&gt;It has this crappy DRM that only lets me view the pdf on one computer using only &amp;ldquo;Adobe Digital Editions&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;If that wasn&amp;rsquo;t so bad, only a small subset of the text is OCR&amp;rsquo;d, so most of it isn&amp;rsquo;t even searchable!&lt;/p&gt;
&lt;p&gt;Now I&amp;rsquo;m pissed, but wait, what do you say? These files are just RSA encrypted, and I have the key?&lt;/p&gt;
&lt;p&gt;Some cool guy named **&lt;a href=&#34;http://i-u2665-cabbages.blogspot.com/2009/02/circumventing-adobe-adept-drm-for-epub.html&#34;&gt;i♥cabbages&lt;/a&gt; **has released code do extract your key, and then decrypt the file to a good ol&amp;rsquo; plain pdf. If you want to reproduce my steps you will need to use the &lt;a href=&#34;http://www.cs.helsinki.fi/u/vahakang/ineptpdf.pyw&#34;&gt;PDF decrypter&lt;/a&gt; unless you have epubs.&lt;/p&gt;
&lt;p&gt;So I use the tool and get a pdf, now I can use one of the most awesome tools in the world: &lt;a href=&#34;http://en.wikipedia.org/wiki/ImageMagick&#34;&gt;Imagemagick&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Imagemagick can whip this pdf into shape. The first thing I&amp;rsquo;m going to do is convert each page into a tiff:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ convert -density 200 input.pdf[1-124] -depth 8 -monochrome %05d.tif
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then I&amp;rsquo;m going to run tesseract-ocr on them to get the text:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ for i in $(seq --format=%005.f 1 324)
do
tesseract $i.tif tesseract-$i -l eng
done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now all I have to do is cat all the text together:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat *.txt &amp;gt; output.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now I have a fully searchable, plain text file. Exactly what I wanted in the first place!&lt;/p&gt;
&lt;p&gt;For the REAL magic, I use agrep to search for strings similar to provided example test questions to help &amp;ldquo;highlight&amp;rdquo; the answers. More technical details on that magic on &lt;a href=&#34;http://wiki.xkyle.com/Answer_Finder&#34;&gt;my wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/answer.JPG&#34;&gt;&lt;img src=&#34;../../uploads/answer-300x25.jpg&#34; alt=&#34;answer&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>My Wireless Cracking Tool</title>
      <link>/my-wireless-cracking-tool/</link>
      <pubDate>Mon, 01 Jun 2009 08:00:51 +0000</pubDate>
      <guid>/my-wireless-cracking-tool/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve become a semi-expert on wireless networking and their security features.. and how to get around them. Before I continue I want to emphasize:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The act of cracking encryption is not illegal just like picking a lock is not illegal. It is the unauthorized access of that network which is illegal, just like breaking and entering is illegal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So. To sum it up, there are two types of encryption. There is the weak kind (&lt;a href=&#34;http://en.wikipedia.org/wiki/Wired_Equivalent_Privacy&#34;&gt;wep&lt;/a&gt;) and the strong kind (&lt;a href=&#34;http://en.wikipedia.org/wiki/Wi-Fi_Protected_Access&#34;&gt;wpa&lt;/a&gt;). WEP can be broken in about 5-10 minutes. WPA can be broken in about 24 hours (as long as their password is in your password try-out list).&lt;/p&gt;
&lt;p&gt;The actual process or hacking into a network like this requires a suite of tools called the &lt;a href=&#34;http://www.aircrack-ng.org&#34;&gt;aircrack-ng suite&lt;/a&gt;. You can read their tutorials and such, and I highly recommend you do if you want to get into this sort of thing. It&amp;rsquo;s a lot of FUN! Be prepared to learn linux while you are at it&amp;hellip;.&lt;/p&gt;
&lt;p&gt;But, once you understand what you are doing, you will appreciate the tool I have written. It automates the process of getting the keys. I wrote it as a type of &amp;ldquo;set-it-and-forget-it&amp;rdquo; tool that I could just leave running. It isn&amp;rsquo;t too clean, but if you can read bash scripting you can figure it out.&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_137&amp;rdquo; align=&amp;quot;aligncenter&amp;rdquo; width=&amp;quot;500&amp;rdquo; caption=&amp;quot;Here is a screen shot of my tool cracking wep&amp;rdquo;]&lt;a href=&#34;../../uploads/screenshot.jpg&#34;&gt;&lt;img src=&#34;../../uploads/screenshot.jpg&#34; alt=&#34;Here is a screen shot of my tool cracking wep&#34;&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;p&gt;Remember! Don&amp;rsquo;t try to just run this tool without understanding what it does and how to read it. If you haven&amp;rsquo;t breaking a wep key manually you don&amp;rsquo;t want to run this. It does WEP and WPA cracking (saving the handshake for later). Good luck! I will provide minimal support via comments on this post. Don&amp;rsquo;t forget to have your radio in monitor mode first, and if you are  going to do wpa you need the &lt;a href=&#34;http://homepages.tu-darmstadt.de/~p_larbig/wlan/&#34;&gt;mdk3&lt;/a&gt; tool.&lt;/p&gt;
&lt;p&gt;Here is the download link to &lt;a href=&#34;../../other//superscanner.tgz&#34;&gt;Kyle&amp;rsquo;s Wireless Cracking Tool&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is a link to a more updated versio of my &lt;a href=&#34;../../other//superscanner2.tgz&#34;&gt;Cracking Tool&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Discrete Wavelets Final Project - Decaptcha,</title>
      <link>/discrete-wavelets-final-project-decaptcha/</link>
      <pubDate>Fri, 01 May 2009 17:17:02 +0000</pubDate>
      <guid>/discrete-wavelets-final-project-decaptcha/</guid>
      <description>&lt;p&gt;This semester I took a class on &lt;a href=&#34;http://en.wikipedia.org/wiki/Discrete_wavelet_transform&#34;&gt;Discrete Wavelets&lt;/a&gt;. It was awesome. The coolest part was our group final project. My group had the best topic by far: Decoding a Captcha! (Click on any of the following images to view them full size)&lt;/p&gt;
&lt;p&gt;[](/uploads/file_captcha.jpg)&lt;a href=&#34;../../uploads/captcha.jpg&#34;&gt;&lt;img src=&#34;../../uploads/captcha.jpg&#34; alt=&#34;captcha&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve all seen Captchas before. They are used on websites to make sure that the person on the website is a real human, not a computer program. Why do we want to break them? The same reason we want to climb Mount Everest, it&amp;rsquo;s There!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/input_captcha.jpg&#34;&gt;&lt;img src=&#34;../../uploads/input_captcha-300x108.jpg&#34; alt=&#34;input\_captcha&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The above is the captcha we intended to solve. Its not particularly difficult, but this class is an introduction to wavelets and requires no previous experience with the language we had to use: Mathematica. Our real task was to implement the algorithm in &lt;a href=&#34;http://faculty.gvsu.edu/aboufade/web/cmj101-108.pdf&#34;&gt;this paper&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So how do we do it? First we need to isolate the image without the background.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/captchab.jpg&#34;&gt;&lt;img src=&#34;../../uploads/captchab-300x108.jpg&#34; alt=&#34;captchab&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No problem. The color of the text is different from the background so it is easy to isolate. Next we need to take those pieces of the matrix and turn them into a list of coordinate pairs. Then we can apply a rotation matrix transform to undo the angle. What angle? Well I don&amp;rsquo;t know. How can we figure out how much it was rotate? Of course! Linear regression from Statistics!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/regression.jpg&#34;&gt;&lt;img src=&#34;../../uploads/regression-300x239.jpg&#34; alt=&#34;regression&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fortunately Mathematica has a function for this. This is the easy part. Now we need to take these rotated vectors and &amp;ldquo;Unrotate&amp;rdquo; them, then put them back into a matrix:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/alligned.jpg&#34;&gt;&lt;img src=&#34;../../uploads/alligned.jpg&#34; alt=&#34;alligned&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No problem! Well actually this isn&amp;rsquo;t as easy as it sounds. Arbitrary image rotation is non trivial. But let us press on. Now we must Cut the image into its component letters. This is easy, the columns of the matrix that are all white are the demarcation points.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/segmented.jpg&#34;&gt;&lt;img src=&#34;../../uploads/segmented.jpg&#34; alt=&#34;segmented&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ok now what? Well we have an individual matrix for each unknown letter. Let us resize it to a standard square size (pad it), say 80x80. Oh I forgot to mention, before we stared on this we made a &amp;ldquo;&lt;a href=&#34;http://www.merriam-webster.com/dictionary/canon&#34;&gt;Canon&lt;/a&gt;&amp;rdquo; of letters from A-Z0-9 with the same font into 80x80 squares too. At this point we could compare each letters &amp;ldquo;difference&amp;rdquo; and see which has the least difference. Let me show you:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/subtract.jpg&#34;&gt;&lt;img src=&#34;../../uploads/subtract.jpg&#34; alt=&#34;subtract&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Eh so that is a crappy example. When you take two letters and subtract them, you get all black where they are the same, and some white or gray where the &amp;ldquo;differences&amp;rdquo; are (Math terms=2 dimensional norm). The letter with the least difference is most likely to be the original letter.&lt;/p&gt;
&lt;p&gt;So all we have to do is iterate through each canonical letter until we get the least difference. Do that for each letter and we can decode (you can see the unknown on the left, and the matching canon on the right):&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/compare.jpg&#34;&gt;&lt;img src=&#34;../../uploads/compare-116x300.jpg&#34; alt=&#34;compare&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Seems pretty good. But it gets better with some Discrete Wavelet Magic! Our comparison can get even better if we ignore the errors and wavey crap that was introduced in the align section. The way we do this is with the &lt;a href=&#34;http://en.wikipedia.org/wiki/Haar_wavelet&#34;&gt;Haar Wavelet Transform&lt;/a&gt;. Don&amp;rsquo;t mind the math, we are basically blurring the image:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/haar.jpg&#34;&gt;&lt;img src=&#34;../../uploads/haar-300x157.jpg&#34; alt=&#34;haar&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The part we want is in the upper most left hand corner, the &amp;ldquo;blur&amp;rdquo;. It turns out that 3 iterations of the HWT gives the best results. By doing this we were able to decode our CAPTCHAs 75% of the time. In the end the major flaws take place in the linear regression and the align function. If we used Mathematica 7 instead of 6 we could have used its built in image processing functions to take the error out of our sloppy rounding.&lt;/p&gt;
&lt;p&gt;But of course, the proof is in the code, I mean, the pudding. Here is our notebook:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/final3.nb&#34;&gt;Mathematica Notebook&lt;/a&gt;
To use this you need the &lt;a href=&#34;http://cam.mathlab.stthomas.edu/wavelets/packagesmathematica.php&#34;&gt;Discrete Wavelets Package&lt;/a&gt;. Mathematica 7 comes with a function but this is written for 6.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/final3.nbp&#34;&gt;Notebook for Mathematica Player&lt;/a&gt;
Not everyone has Mathematica, but their &lt;a href=&#34;http://www.wolfram.com/products/player/download.cgi&#34;&gt;player&lt;/a&gt; is cross platform and free as in beer.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/captcha.ppt&#34;&gt;Our Powerpoint Presentation&lt;/a&gt;
Blarg&amp;hellip; If someone can convert this to pdf I will change this.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Camping at Rocky Bayou State Park</title>
      <link>/camping-at-rocky-bayou-state-park/</link>
      <pubDate>Sat, 21 Mar 2009 22:49:40 +0000</pubDate>
      <guid>/camping-at-rocky-bayou-state-park/</guid>
      <description>&lt;p&gt;Cody and I camped two nights at &lt;a href=&#34;http://www.floridastateparks.org/rockybayou/&#34;&gt;Rocky Bayou State Park&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/imag0007.jpg&#34;&gt;&lt;img src=&#34;../../uploads/imag0007-300x225.jpg&#34; alt=&#34;imag0007&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yea she doesn&amp;rsquo;t look very happy. Yes, we are camping on concrete&amp;hellip;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/imag0008.jpg&#34;&gt;&lt;img src=&#34;../../uploads/imag0008-300x225.jpg&#34; alt=&#34;imag0008&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Day 2. That&amp;rsquo;s better!&lt;/p&gt;
&lt;p&gt;NEXT: Our previous vacation was a &lt;a href=&#34;../../cruise-day-12/&#34;&gt;Cruise!&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Verizon FiOS Wireless Key Calculator!</title>
      <link>/verizon-fios-wireless-key-calculator/</link>
      <pubDate>Tue, 03 Mar 2009 18:58:33 +0000</pubDate>
      <guid>/verizon-fios-wireless-key-calculator/</guid>
      <description>&lt;p&gt;More Update: There are new AP&amp;rsquo;s that don&amp;rsquo;t conform to this pattern. If the calculator doesn&amp;rsquo;t work on yours, maybe it is like these &lt;a href=&#34;../../help-wanted-what-is-the-pattern-in-these-new-wep-keys/&#34;&gt;non-conforming-wep&lt;/a&gt; keys&lt;/p&gt;
&lt;p&gt;Update:  A cool cool guy named Dylan Taylor wrote a java implementation of this script: &lt;a href=&#34;http://www.fwc.dylanmtaylor.com/&#34;&gt;http://www.fwc.dylanmtaylor.com/&lt;/a&gt; if you need an offline version&lt;/p&gt;
&lt;p&gt;Update: I wrote a bash implementation to make it easy to script, and for &lt;a href=&#34;../../other/fioscalc.sh&#34;&gt;offline usage&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In my &lt;a href=&#34;../../verizon-fios-wireless-security-analysis/&#34;&gt;previous post&lt;/a&gt; I showed a correlation between the WEP key of a Verizon FiOS install and the MAC address of the access point. This was simply a collection of experimental data that I gathered.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&#34;http://www.linkedin.com/pub/dir/Fred/Williams?trk=ppro_find_others&#34;&gt;Fred Williams?&lt;/a&gt; for pointing out the correlation between the ESSID and the WEP. With these powers combined form:
&lt;a href=&#34;../../uploads/captain-planet.jpeg&#34;&gt;&lt;img src=&#34;../../uploads/captain-planet-185x300.jpg&#34; alt=&#34;captain-planet&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Well.. Not exactly. If there was a super hero with the phrase: &amp;ldquo;Hack the Planet&amp;rdquo; instead of &amp;ldquo;Save the Planet&amp;rdquo; I would have chosen it.&lt;/p&gt;
&lt;p&gt;So what is the deal?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/verizon_fios_250.jpg&#34;&gt;&lt;img src=&#34;../../uploads/verizon_fios_250.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The first part of the key is a combination of the second and third part of the MAC, which is either 1801 or 1F90.&lt;/p&gt;
&lt;p&gt;The second part of the key is this forumula.. hold on to your butts:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The 5-character SSID name is a base-36 number of the lower 48 bits (6 hex digits) of the WEP key. The string is reversed, with the most significant digit on the right.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Base-36 numbers uses 0-9 followed A-Z to represent 36 digits (0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ)
It maps out like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    0=00, 1=01, 2=02, 3=03, 4=04, 5=05,
    6=06, 7=07, 8=08, 9=09, A=10, B=11,
    C=12, D=13, E=14, F=15, G=16, H=17,
    I=18, J=19, K=20, L=21, M=22, N=23,
    O=24, P=25, Q=26, R=27, S=28, T=29,
    U=30, V=31, W=32, X=33, Y=34, Z=35
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To go through an example, the SSID name of “E3X12″ comes out as follows.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    E*(36^0) is 14 * 1 = 14
    3*(36^1) is 03 * 36 = 108
    X*(36^2) is 33 * 1296 = 42,768
    1*(36^3) is 01 * 46656 = 46,656
    2*(36^4) is 02 * 1679616 = 3,359,232
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Add these up, and you get 3,448,778 decimal which is 349FCA in Hexadecimal notation.
The first 4 hex digits of the WEP key are the 2nd and 3rd byte from the MAC address as indicated in the original post above.&lt;/p&gt;
&lt;p&gt;Thanks again Fred! To math majors this is like a beam of light coming down from the heavens&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.flickr.com/photos/dorowski/456250234/&#34;&gt;&lt;img src=&#34;../../uploads/lightbeam.jpg&#34; alt=&#34;lightbeam&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So I wrote this Javascript calculator (my first javascript program actually) in order to aid the calculation of the keys! Just type in your neighbor&amp;rsquo;s ESSID and out comes the KEY!
(Sorry about the iframe if that is an issue to you. Goto &lt;a href=&#34;../../other/wep.html&#34;&gt;here&lt;/a&gt; if it is.)
Your browser does not support iframes.
Want to try it out? Here is a list of keys I&amp;rsquo;ve collected in my travels. Theres are cracked with Aircrack-ng, not calculated.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;E3X12,1801349FCA
NAMX2,18014B311F
MWXV2,180149FF66
R0LC7,1801BC5C6B
JE2K7,1801C1B02B
HH150,1F900396C5
3RA18,1801CDF4AF
OQ838,1801CF5700
7WY20,1F90021D27
C7WA0,1F9007C188
DJP80,1F90063349
BJ2Z0,1F9018F797
RSHZ0,1F901944DB
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>My Desktop</title>
      <link>/my-desktop/</link>
      <pubDate>Fri, 20 Feb 2009 23:06:21 +0000</pubDate>
      <guid>/my-desktop/</guid>
      <description>&lt;p&gt;Posting a screenshot of your desktop is the cool thing for geeks to do apparently.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/screenshot3.png&#34;&gt;&lt;img src=&#34;../../uploads/screenshot3-300x187.png&#34; alt=&#34;screenshot3&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s Ubuntu 8.10, no big surprise there. I&amp;rsquo;m using the &amp;ldquo;Dusk&amp;rdquo; theme with the proposed background for the next Ubuntu. I really like it.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Couples Kayak at Anclote Key</title>
      <link>/couples-kayak-at-anclote-key/</link>
      <pubDate>Sun, 15 Feb 2009 22:17:09 +0000</pubDate>
      <guid>/couples-kayak-at-anclote-key/</guid>
      <description>&lt;p&gt;The weekend I Kayaked to Anclote Key. Here is a picture of us unloading our Kayaks! (Not me in the picture)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/imag0022.jpg&#34;&gt;&lt;img src=&#34;../../uploads/imag0022-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We Kayaked 4 hours to the north end of Anclote Key. Here the the google &lt;a href=&#34;http://maps.google.com/maps?ll=28.187778,-82.845556&amp;amp;spn=0.3,0.3&amp;amp;t=h&amp;amp;q=28.187778,-82.845556&#34;&gt;maps link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We camped overnight on the night of Valentines day. How romantic right?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/imag0018.jpg&#34;&gt;&lt;img src=&#34;../../uploads/imag0018-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And here is Cody inside the tent looking cutsy:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/imag0015.jpg&#34;&gt;&lt;img src=&#34;../../uploads/imag0015-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And if you have &lt;a href=&#34;http://earth.google.com/&#34;&gt;Google Earth&lt;/a&gt;, here is a link to a path I made of the trip: &lt;a href=&#34;../../uploads/anclote-key-trip.kmz&#34;&gt;anclote-key-trip&lt;/a&gt; &lt;a href=&#34;../../uploads/anclote-key-trip.kmz&#34;&gt;&lt;img src=&#34;http://www.gearthblog.com/images/gelogoicon.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And if you want to use Google Maps, here is a &lt;a href=&#34;http://maps.google.com/maps?f=q&amp;amp;source=s_q&amp;amp;hl=en&amp;amp;geocode=&amp;amp;q=anclote+key&amp;amp;sll=37.0625,-95.677068&amp;amp;sspn=48.374125,79.101563&amp;amp;ie=UTF8&amp;amp;ll=28.213206,-82.845755&amp;amp;spn=0.013236,0.019312&amp;amp;t=h&amp;amp;z=17&#34;&gt;link to the arial photo&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>My Dad&#39;s Terminal Patent</title>
      <link>/my-dads-terminal-patent/</link>
      <pubDate>Thu, 12 Feb 2009 19:40:06 +0000</pubDate>
      <guid>/my-dads-terminal-patent/</guid>
      <description>&lt;p&gt;I suppose I come from a&amp;hellip; short line of engineers. My father used to work for &lt;a href=&#34;http://www.paradyne.com/&#34;&gt;Paradyne&lt;/a&gt; which was gobbled up by At&amp;amp;t, and is now owned by &lt;a href=&#34;http://www.zhone.com/&#34;&gt;Zhone&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But back in the day they worked on &amp;ldquo;&lt;a href=&#34;http://en.wikipedia.org/wiki/Computer_terminal&#34;&gt;Terminals&lt;/a&gt;&amp;quot;. You know, back when &amp;ldquo;Computers&amp;rdquo; has a gazillion serial ports and the &amp;ldquo;Terminal&amp;rdquo; was the box that had a monitor and keyboard which parsed the 300baud green text? Yea neither do I&amp;hellip;&lt;/p&gt;
&lt;p&gt;But I&amp;rsquo;ve read about such times, and I know about the history of my &lt;a href=&#34;http://en.wikipedia.org/wiki/Xterm&#34;&gt;xterm&lt;/a&gt; and &lt;a href=&#34;http://efault.net/npat/hacks/picocom/&#34;&gt;picocom&lt;/a&gt; programs. They emulate these devices. Such devices that my Dad (Richard Anderson) designed! It is good to know your roots. Amazing:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/terminal.jpg&#34;&gt;&lt;img src=&#34;../../uploads/terminal-300x221.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../other/patd273189.pdf&#34;&gt;Terminal Design (PDF)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&amp;amp;Sect2=HITOFF&amp;amp;d=PALL&amp;amp;p=1&amp;amp;u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&amp;amp;r=1&amp;amp;f=G&amp;amp;l=50&amp;amp;s1=D273,189.PN.&amp;amp;OS=PN/D273,189&amp;amp;RS=PN/D273,189&#34;&gt;Link to the Original Patent&lt;/a&gt; (uspo.gov)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Myspace Phishing Analysis</title>
      <link>/myspace-phishing-analysis/</link>
      <pubDate>Wed, 11 Feb 2009 22:40:10 +0000</pubDate>
      <guid>/myspace-phishing-analysis/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../../uploads/myspace.jpeg&#34;&gt;&lt;img src=&#34;../../uploads/myspace.jpeg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A couple of years ago, a large list of phished Myspace accounts was leaked on the internet.
I stumpled upon them and ran a very simple analysis. Check it out:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@a:/# cat myspace.hackedlist | cut -f 2 -d : | sort | uniq -c | sort -n | tail -n 20
14 qwerty1
15 123456a
15 babygirl1
15 blink182
16 123456
16 123abc
16 iloveyou2
17 football1
17 nicole1
18 number1
19 password
23 myspace1
24 fuckyou1
28 iloveyou1
28 monkey1
29 fuckyou
54 abc123
74 password1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The file was in the form of &amp;ldquo;Username:password&amp;rdquo;, so the first part of that command &amp;ldquo;cuts&amp;rdquo; the second column, with the colon as the delimiter. Then it is piped through sort, which sorts the list alphabetcially, then the uniq -c command, which counts the number of times that a word shows up, then I sort it again to get the most freqent passwords, and tail the last 20 lines.&lt;/p&gt;
&lt;p&gt;It is interesting to see that a lot of these passwords just tack &amp;ldquo;1&amp;rdquo; on to them. And of course blink182 was all the rage back then aparently&amp;hellip;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Verizon FiOS Wireless Security Analysis</title>
      <link>/verizon-fios-wireless-security-analysis/</link>
      <pubDate>Sat, 07 Feb 2009 18:29:04 +0000</pubDate>
      <guid>/verizon-fios-wireless-security-analysis/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../../uploads/verizon_fios_250.jpg&#34;&gt;&lt;img src=&#34;../../uploads/verizon_fios_250.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Take a look at some wireless keys that I&amp;rsquo;ve collected from some Verizon FiOS installs around Tampa:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;00-18-01-EA-3D-99,E3X12,6,WEP,1801349FCA
00-18-01-F0-6D-C4,NAMX2,1,WEP,18014B311F
00-18-01-F0-95-78,MWXV2,11,WEP,180149FF66
00-18-01-FD-4F-0E,R0LC7,1,WEP,1801BC5C6B
00-18-01-FE-15-46,JE2K7,1,WEP,1801C1B02B
00-18-01-FF-DF-DD,HH150,1,WEP,1F900396C5
00-1F-90-E0-B1-F8,3RA18,6,WEP,1801CDF4AF
00-1F-90-E0-B5-AC,OQ838,6,WEP,1801CF5700
00-1F-90-E2-7E-61,7WY20,6,WEP,1F90021D27
00-1F-90-E3-1E-90,C7WA0,6,WEP,1F9007C188
00-1F-90-E3-2E-07,DJP80,6,WEP,1F90063349
00-1F-90-E6-A7-D5,BJ2Z0,11,WEP,1F9018F797
00-1F-90-E6-D4-E3,RSHZ0,4,WEP,1F901944DB&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What you are looking at here is MAC, SSID, Channel, Encryption, Key.&lt;/p&gt;
&lt;p&gt;Notice that they are all WEP, 64bit, with 5 Alpha numeric SSID&amp;rsquo;s.&lt;/p&gt;
&lt;p&gt;I want to emphasize that these are the defaults, and only geeks, nerds and the like change the defaults. :)&lt;/p&gt;
&lt;p&gt;Here is a typical type of router (actiontec) that does this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/mi424wr.gif&#34;&gt;&lt;img src=&#34;../../uploads/mi424wr-300x216.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Take a real close look at two of the examples:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;00-18-01-FE-15-46,JE2K7,1,WEP,1801C1B02B
00-1F-90-E2-7E-61,7WY20,6,WEP,1F90021D27&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Notice the relationship the MAC and the key have. Let me split up the bytes for you:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;00:18:01:FE:15:46   -  18:01:C1:B0:2B&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Verizon, or Actiontec, or someone is setting the first byte of the 40bit key to the second byte of the MAC of the unit. And then they are setting the second byte of the key to the third byte of the MAC!&lt;/p&gt;
&lt;p&gt;You can look on the list, and this is mostly the case, there is some overlap on the OIDs. (sometimess it is 1801, sometimes 1f90) Why is this useful? Well if you know it is a FiOS install, you have already decreased your &amp;ldquo;64bit&amp;rdquo; key to a real &amp;ldquo;40bit&amp;rdquo; key, and you already know 16 bits of it, so you only have to crack 24 bits. This is insane. This is like guessing 3 letters.&lt;/p&gt;
&lt;p&gt;The way to use this is with the &lt;a href=&#34;http://www.aircrack-ng.org&#34;&gt;Aircrack-ng&lt;/a&gt; program. Capture some packets, and use the -d option to tell it what the key starts with.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;aircrack-ng -d 1801 stupid-fios.cap&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You will get the key in No time! Silly Verizon, you didn&amp;rsquo;t think we would notice you weren&amp;rsquo;t using constructed (not random) keys?&lt;/p&gt;
&lt;p&gt;Have FiOS yourself? Want to share your MAC and default key in the comments? :)&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
</description>
    </item>
    <item>
      <title>Amazing Breakfasts with Cody!</title>
      <link>/amazing-breakfasts-with-cody/</link>
      <pubDate>Sat, 10 Jan 2009 15:31:52 +0000</pubDate>
      <guid>/amazing-breakfasts-with-cody/</guid>
      <description>&lt;p&gt;Often I get to enjoy wonderful mornings with my girlfriend Cody. She is a great cook, and one of her best concoctions are these AMAZING breakfast burritos:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/image_00002.jpg&#34;&gt;&lt;img src=&#34;../../uploads/image_00002-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sorry for the bad picture, I took it with the webcam on my eeepc. I don&amp;rsquo;t apologize for her cleavage. I did that intentionally without her knowing :)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Cruise - Day 5</title>
      <link>/cruise-day-5/</link>
      <pubDate>Sat, 20 Dec 2008 23:05:19 +0000</pubDate>
      <guid>/cruise-day-5/</guid>
      <description>&lt;p&gt;Today was our trip back to Tampa, so we saw a show:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/pict00011.jpg&#34;&gt;&lt;img src=&#34;../../uploads/pict00011-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Crowd Control?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/pict00022.jpg&#34;&gt;&lt;img src=&#34;../../uploads/pict00022-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m sure this family had fun. I wonder what the personality is like of whoever made the door decorations:&lt;a href=&#34;../../uploads/pict00051.jpg&#34;&gt;&lt;img src=&#34;../../uploads/pict00051-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Cruise - Day 4</title>
      <link>/cruise-day-4/</link>
      <pubDate>Sat, 20 Dec 2008 23:00:05 +0000</pubDate>
      <guid>/cruise-day-4/</guid>
      <description>&lt;p&gt;Today we visited the ancient &lt;a href=&#34;http://en.wikipedia.org/wiki/Tulum&#34;&gt;Mayan ruins of Tulum&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/pict0009.jpg&#34;&gt;&lt;img src=&#34;../../uploads/pict0009-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[gallery]&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Cruise - Day 3</title>
      <link>/cruise-day-3/</link>
      <pubDate>Sat, 20 Dec 2008 20:42:53 +0000</pubDate>
      <guid>/cruise-day-3/</guid>
      <description>&lt;p&gt;Today Cody and I visited the beautiful &lt;a href=&#34;http://en.wikipedia.org/wiki/Grand_Cayman&#34;&gt;Grand Cayman&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/pict0003.jpg&#34;&gt;&lt;img src=&#34;../../uploads/pict0003-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Myspace shot:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/pict0002.jpg&#34;&gt;&lt;img src=&#34;../../uploads/pict0002-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And for the geek in everyone, hacked someone&amp;rsquo;s WEP key and used their wireless while on the land. The ip I used was 63.136.113.229 which is hosted by Cable and Wireless. Here is an MTR to it:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/screenshot-terminal-kylekyle-laptop-bin-wireless.png&#34;&gt;&lt;img src=&#34;../../uploads/screenshot-terminal-kylekyle-laptop-bin-wireless-300x201.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yea..maybe not so interesting to others. Our shore excursions to go snorkeling with sting rays got canceled because of the weather&amp;hellip;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Cruise - Day 1,2</title>
      <link>/cruise-day-12/</link>
      <pubDate>Sat, 20 Dec 2008 20:35:49 +0000</pubDate>
      <guid>/cruise-day-12/</guid>
      <description>&lt;p&gt;Cody and I took started off our cruise in Tampa on Monday, Dec 15:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/imag0002.jpg&#34;&gt;&lt;img src=&#34;../../uploads/imag0002-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Beautiful! Here is look at the Bow (We were on the &lt;a href=&#34;http://www.carnival.com/Ship_Detail.aspx?shipCode=IS&#34;&gt;Carnival Inspiration&lt;/a&gt;):&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/imag0004.jpg&#34;&gt;&lt;img src=&#34;../../uploads/imag0004-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And the cool Radars!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/imag0005.jpg&#34;&gt;&lt;img src=&#34;../../uploads/imag0005-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Giving My WRT54GL a 2G Drive</title>
      <link>/giving-my-wrt54gl-a-2g-drive/</link>
      <pubDate>Sat, 06 Dec 2008 22:05:55 +0000</pubDate>
      <guid>/giving-my-wrt54gl-a-2g-drive/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://en.wikipedia.org/wiki/Linksys_WRT54G_series&#34;&gt;WRT54GL&lt;/a&gt; is a pretty cool little toy. Yes it is a router with a cheezy web interface for grandmas with ESSID&amp;rsquo;s named &amp;ldquo;linksys&amp;rdquo;. But you can flash it with your own linux and solder in your own SD card to turn it from a 4MB machine to a 2GB machine&amp;hellip; far out!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/imag0053.jpg&#34;&gt;&lt;img src=&#34;../../uploads/imag0053-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Above it the bare board that I&amp;rsquo;ve unscrewed out of the thing. Some solder + a card&amp;hellip;..&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/imag0060.jpg&#34;&gt;&lt;img src=&#34;../../uploads/imag0060-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now we are talking. For the record this thing is exremely well documented and has a large userbase. I had no problems figureing out how to solder this in. If you want to go to the source of this type of documentation:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://wiki.openwrt.org/OpenWrtDocs/Hardware/Linksys/WRT54GL&#34;&gt;http://wiki.openwrt.org/OpenWrtDocs/Hardware/Linksys/WRT54GL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now all I have to do is format and mount it&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/screenshot-kylekyle-home.png&#34;&gt;&lt;img src=&#34;../../uploads/screenshot-kylekyle-home-300x216.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Holy cow it worked. 2G. Now all I have to do is &lt;a href=&#34;http://wiki.openwrt.org/OpenWrtDocs/KamikazeConfiguration/PackagesOnExternalMediaHowTo&#34;&gt;chroot into it&lt;/a&gt;. Doing a time on a DD gives about 160kBytes/Second. Now I will turn this into something amazing&amp;hellip;&amp;hellip;..&lt;/p&gt;
</description>
    </item>
    <item>
      <title>My Home-Made Laptop Security Program </title>
      <link>/my-home-made-laptop-security-program/</link>
      <pubDate>Fri, 05 Dec 2008 17:17:50 +0000</pubDate>
      <guid>/my-home-made-laptop-security-program/</guid>
      <description>&lt;p&gt;The NetworkManager program in linux has a create feature called a dispatcher, which can run arbitrary programs when certian things about the network change. For instance it can turn on a firewall or notify a user when the network comes up, or &lt;a href=&#34;../../custom-arp-alerts-ii/&#34;&gt;start up an arp alert program&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;I wanted a program that would alert me of my laptop&amp;rsquo;s where-a-bouts, as well as use the webcam to take a picture, in order to aid me in tracking it down if it got stolen. I wanted something simple and didn&amp;rsquo;t way to pay for anything&amp;hellip; I know I&amp;rsquo;m cheap :)&lt;/p&gt;
&lt;p&gt;The code is pretty simple:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    fswebcam -F &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; -S &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; -r 640x480 --jpeg &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; --save /tmp/capture.jpg
    ifconfig &amp;gt; /tmp/ifconfig.txt
    wget -q -O - checkip.dyndns.org &amp;gt;&amp;gt; /tmp/ifconfig.txt
    FILENAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;date +%F-%H-%M-%S&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    mv /tmp/ifconfig.txt /tmp/$FILENAME.txt
    mv /tmp/capture.jpg /tmp/$FILENAME.jpg
    scp /tmp/$FILENAME.jpg /tmp/$FILENAME.txt root@X.0.0.0:OBSCURED FOR SECURITY REASONS
    rm /tmp/$FILENAME.jpg /tmp/$FILENAME.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can see that it takes a picture, grabs my ifconfig and public ip, then ships it all to my server.  I just saved it in my /usr/local/bin/ and added the program to my /etc/network/if-up.d/openvpn program. This program is called whenever the interface comes up, so it will also run this program too when it&amp;rsquo;s ready.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/2008-12-05-11-51-571.jpg&#34;&gt;&lt;img src=&#34;../../uploads/2008-12-05-11-51-571-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not amazing, but its good. Feel free to take my script and adjust for your needs. You may have a different command-line tool to take a picture with your webcam or whatever. You could even go crazy and setup something to email you or whatver, its YOUR program!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Boom-Boom Classes?</title>
      <link>/boom-boom-classes/</link>
      <pubDate>Sat, 22 Nov 2008 19:19:26 +0000</pubDate>
      <guid>/boom-boom-classes/</guid>
      <description>&lt;p&gt;I was talking with my girlfriend recently, and I told her that her &amp;ldquo;RA Class&amp;rdquo; (RA is short for &lt;a href=&#34;http://en.wikipedia.org/wiki/Resident_assistant&#34;&gt;resident assistant&lt;/a&gt;, someone who lives on campus to assist other residents) is a &amp;ldquo;Boom Boom&amp;rdquo; class. She is from &lt;a href=&#34;http://en.wikipedia.org/wiki/Niceville&#34;&gt;Niceville&lt;/a&gt; and had never heard of the term. I knew it as a slang term for a low level class that required no effort, taken simply for credit.&lt;/p&gt;
&lt;p&gt;In an effort to locate some sort of source for my definition besides anecdotes of the people I knew, I was only able to find other personal references (myspace, facebook) coincidentally from people in Tampa. Turns out that this term appears to originate specifically from Tampa!&lt;/p&gt;
&lt;p&gt;Here is my evidence:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.urbandictionary.com/define.php?term=boom%20boom&#34;&gt;Urban Dictionary &lt;/a&gt;Claiming this fact[
](&lt;a href=&#34;http://www.urbandictionary.com/define.php?term=boom%20boom&#34;&gt;http://www.urbandictionary.com/define.php?term=boom%20boom&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.google.com/search?hl=en&amp;amp;client=firefox-a&amp;amp;rls=com.ubuntu%3Aen-US%3Aunofficial&amp;amp;hs=HQd&amp;amp;q=%22boom+boom+class%22+site%3Amyspace.com&amp;amp;btnG=Search&#34;&gt;Google Results &lt;/a&gt;only turning up myspace pages in Tampa and Arizona?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.google.com/search?hl=en&amp;amp;client=firefox-a&amp;amp;rls=com.ubuntu:en-US:unofficial&amp;amp;hs=kmI&amp;amp;sa=X&amp;amp;oi=spell&amp;amp;resnum=0&amp;amp;ct=result&amp;amp;cd=1&amp;amp;q=%22boom+boom+class%22+forum&amp;amp;spell=1&#34;&gt;More Google&lt;/a&gt; on forum hits, again only Tampa and Arizona specific things&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Boom_Boom_(disambiguation)&#34;&gt;Nothing on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;That is all I have. Its mostly anecdotal.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    <item>
      <title>VNC Surpirse!</title>
      <link>/vnc-surpirse/</link>
      <pubDate>Tue, 18 Nov 2008 03:01:04 +0000</pubDate>
      <guid>/vnc-surpirse/</guid>
      <description>&lt;p&gt;Don&amp;rsquo;t you just love it when co-workers communicate with you in the most interesting ways???&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/screenshot-untitled-window.png&#34;&gt;&lt;img src=&#34;../../uploads/screenshot-untitled-window.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sorry it is so small. Click on it!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>New/Old Laptop: Ubuntu Montage </title>
      <link>/newold-laptop-ubuntu-montage/</link>
      <pubDate>Tue, 18 Nov 2008 01:20:49 +0000</pubDate>
      <guid>/newold-laptop-ubuntu-montage/</guid>
      <description>&lt;p&gt;You may remember my old laptop from such posts as &lt;a href=&#34;../../compact-flash-replacement/&#34;&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Well it broke, so I bought another one!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/mm20.gif&#34;&gt;&lt;img src=&#34;../../uploads/mm20.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It even has the original stickers. But.. Its slower than I remember. So I&amp;rsquo;m trying out different Ubuntu versions to see what boots the fastest. Here are my methodology and results.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Methodology&lt;/strong&gt;:
The first number is the ammount of seconds from the 0 in the grub countdown till the X in the initial X-server. The second number is the seconds till the firefox screen pops up after I click it while its booting (with auto login enabled.) The reason for this is to account for the total time till my computer is usable. (internet) This is with no performace tweaks, and keeping the default settings. (except enabling auto-login)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Version
Time Till X
Time till Firefox

Ubuntu 8.10
1:04
2:57

Ubuntu 8.04
1:12
2:53

Ubuntu 7.10
1:15
2:46

Xubuntu 8.10
1:09
2:29

Xubuntu 7.10
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yea so I got tired after all those versions. Maybe I&amp;rsquo;ll come back. So far though I like xfce (I use it on my eeepc (which has numbers of 1:39, 2:05 on xubuntu 8.04&amp;hellip;.)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Its a Wiki-Wiki-World</title>
      <link>/its-a-wiki-wiki-world/</link>
      <pubDate>Sun, 16 Nov 2008 18:51:02 +0000</pubDate>
      <guid>/its-a-wiki-wiki-world/</guid>
      <description>&lt;p&gt;You may not know, but I used to work for Wikipedia! (&lt;a href=&#34;http://wikimediafoundation.org/w/index.php?title=Staff&amp;amp;direction=next&amp;amp;oldid=19464&#34;&gt;here if you don&amp;rsquo;t believe me&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;You also may not know that all Wikimedia Foundation projects (like Wikipedia) run off of a opensource piece of software called &lt;a href=&#34;http://www.mediawiki.org/wiki/MediaWiki&#34;&gt;Mediawiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The software is the bomb, and I&amp;rsquo;ve had my own for a number of years to keep track of my own project documentation (like a notebook.) But I&amp;rsquo;ve never made it public. Well&amp;hellip;.&lt;/p&gt;
&lt;p&gt;My good friend &lt;a href=&#34;http://www.timelordz.com/blog/&#34;&gt;Pete&lt;/a&gt; has &lt;a href=&#34;http://www.timelordz.com/wiki/&#34;&gt;his&lt;/a&gt; public, so I&amp;rsquo;ve decied to make mine public too, for the sake of competition of course :)&lt;/p&gt;
&lt;p&gt;Mine is more personal, for my own projects, his more more like a Linux/General knowledgebase.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://wiki.xkyle.com&#34;&gt;&lt;img src=&#34;../../uploads/screenshot-main-page-xkylecom-notebook-mozilla-firefox.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Click on the picture to go there.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>n2n - Peer to peer VPN?</title>
      <link>/n2n-peer-to-peer-vpn/</link>
      <pubDate>Sat, 15 Nov 2008 02:17:33 +0000</pubDate>
      <guid>/n2n-peer-to-peer-vpn/</guid>
      <description>&lt;p&gt;Most vpns&amp;hellip; in fact&amp;hellip; all of them, are based on a client/server model. This means that all vpn clients call home to one vpn server and connect. All traffic goes through that vpn server and then gets passed on to its original destination. But what if you could have the benefits of VPN, but be able to communicate directly to other VPN peers, so without the latency and bandwidth limitations?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/2.png&#34;&gt;&lt;img src=&#34;../../uploads/2.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That is what &lt;a href=&#34;http://www.ntop.org/n2n/&#34;&gt;n2n&lt;/a&gt; is. The supernodes are NOT servers. They merely function as a way to punch holes in firewalls. Once the firewalls are open, the edge servers (think of them as clients) can talk directly with other edge clients. Cool!&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve tried this, and so far the only draw back is the speed, it just doesn&amp;rsquo;t seem to be as fast as you would think it would be. I can&amp;rsquo;t find any other people complaining about it, but I&amp;rsquo;ll look into it. But so far this is the simplest vpn I&amp;rsquo;ve ever setup. Its a single command!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Ettercap&#39;s Author&#39;s Birthday!</title>
      <link>/ettercaps-authors-birthday/</link>
      <pubDate>Sat, 15 Nov 2008 02:04:41 +0000</pubDate>
      <guid>/ettercaps-authors-birthday/</guid>
      <description>&lt;p&gt;Today is the Birthday of AloR, the author of the amazing tool, ettercap.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/etter-terminal.png&#34;&gt;&lt;img src=&#34;../../uploads/etter-terminal.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can see that because it is his birthday, he asks that you email him. I happily obliged.&lt;/p&gt;
&lt;p&gt;Ettercap is an amazing tool. Not only does it have a console, curses, and graphical versions, it can be scripted, hacked, used with plugins, and the list goes on. Here is a screen shot of it in progress:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/ettercap.png&#34;&gt;&lt;img src=&#34;../../uploads/ettercap.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is the everyday use senario:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Find a network&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scan for all hosts on that network&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start a man-in-the-middle attack and pose as the gateway&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;all your traffic belongs to us!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;hellip;&amp;hellip;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Load wireshark and profit!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;But seriously, Ettercap has many tools and features to help you explore networks, for malicious or research purposes.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Operation LAN Party: Success </title>
      <link>/operation-lan-party-success/</link>
      <pubDate>Tue, 30 Sep 2008 03:11:20 +0000</pubDate>
      <guid>/operation-lan-party-success/</guid>
      <description>&lt;p&gt;On Saturday we celebrated a my belated birthday by having a LAN party at my work Sago Networks.&lt;/p&gt;
&lt;p&gt;Games we played:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.queasygames.com/gate88/&#34;&gt;Gate 88&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Halo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://openarena.ws/&#34;&gt;Open Arena&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.alientrap.org/nexuiz/&#34;&gt;Nexuiz&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/pict0390.jpg&#34;&gt;&lt;img src=&#34;../../uploads/pict0390-300x225.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>PAP Solutions Hack</title>
      <link>/pap-solutions-hack/</link>
      <pubDate>Mon, 29 Sep 2008 17:19:35 +0000</pubDate>
      <guid>/pap-solutions-hack/</guid>
      <description>&lt;p&gt;My girlfirend likes to do these puzzles called &lt;a href=&#34;http://www.conceptispuzzles.com/index.aspx?uri=puzzle/pic-a-pix&#34;&gt;Pic-A-Pix&lt;/a&gt; from &lt;a href=&#34;http://www.conceptispuzzles.com/&#34;&gt;ConceptisPuzzles&lt;/a&gt;.
They use a matrix of numbers to hint the puzzler to to filling in pixels to create pixel art. Sometimes there is color. Every week four new PAP&amp;rsquo;s are pushed out, and I&amp;rsquo;ve been told that the answers are somewhere on the website&amp;hellip;. but that would be cheating. :)&lt;/p&gt;
&lt;p&gt;So I wrote my own program to decode these and make images using html tables. I have it in my crontab.weekly and I have it set to email them to my girlfriend to annoy her.&lt;/p&gt;
&lt;p&gt;Here is the link:
EDIT: I no longer run this, but &lt;a href=&#34;https://dev.xkyle.com/listing.php?repname=Games+Magazine+-+Programs+to+solve+Games+Magazine+puzzles+%28gamesmagazine%29&amp;amp;path=%2FPick-A-Pix%2F#path_Pick-A-Pix_&#34;&gt;here is my source code&lt;/a&gt;.
&lt;a href=&#34;http://kyle.com/other/pap/output.html&#34;&gt;http://kyle.com/other/pap/output.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And the mixed reactions from Conceptis:
&lt;a href=&#34;http://www.conceptispuzzles.com/forum/fb.aspx?m=28503&#34;&gt;http://www.conceptispuzzles.com/forum/fb.aspx?m=28503&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/pap.jpg&#34;&gt;&lt;img src=&#34;../../uploads/pap.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>DNS Training At Sago</title>
      <link>/dns-training-at-sago/</link>
      <pubDate>Thu, 25 Sep 2008 02:14:57 +0000</pubDate>
      <guid>/dns-training-at-sago/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../../uploads/dns.jpg&#34;&gt;&lt;img src=&#34;../../uploads/dns.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This past Tuesday I hosted a DNS training seminar for all the employees at Sago. It went over great! The curriculum involved:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The difference between Caching and Authoritative DNS&lt;/li&gt;
&lt;li&gt;All the different types of DNS Records&lt;/li&gt;
&lt;li&gt;How to use dig and how to interpret it&lt;/li&gt;
&lt;li&gt;How to troubleshoot dns problems&lt;/li&gt;
&lt;li&gt;Secret DNS Tricks!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I recorded the &lt;a href=&#34;../../other/dns.mp3&#34;&gt;AUDIO&lt;/a&gt; (sorry the audio sucks) and the &lt;a href=&#34;../../other/dns-history.txt&#34;&gt;BASH history&lt;/a&gt; for those poor souls who want to listen to me drone on for an hour about dns&amp;hellip;. :)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Custom Arp Alerts II!</title>
      <link>/custom-arp-alerts-ii/</link>
      <pubDate>Thu, 21 Aug 2008 11:59:57 +0000</pubDate>
      <guid>/custom-arp-alerts-ii/</guid>
      <description>&lt;p&gt;So I&amp;rsquo;ve found a better way to do what I did in the previous post. Instead of running a separate script to parse the arp alert logs, I have arp alert itself send the alerts! The key is this line in the arpalert.conf&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;action on detect = &amp;quot;/etc/scripts/arp-alert&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Its so simple, it just runs that script sending the information about the alert as certain arguments. With this I have more control over the formatting of arpalert messages:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/screenshot2.png&#34;&gt;&lt;img src=&#34;../../uploads/screenshot2.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In order to do this, I had to write that script, and make it executable of course. Also I had to change the running user of arpalert to root, because the &amp;ldquo;arpalert&amp;rdquo; user didn&amp;rsquo;t have permission to notify my user &amp;ldquo;kyle&amp;rdquo;. This is a much more clean solution, allowing me to make different types of alerts look different, having different timeouts and such. If you want my /etc/scripts/arp-alert you can download what I have so far &lt;a href=&#34;../../other/arp-alert&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Custom Arp-Alerts</title>
      <link>/custom-arp-alerts/</link>
      <pubDate>Wed, 20 Aug 2008 23:17:05 +0000</pubDate>
      <guid>/custom-arp-alerts/</guid>
      <description>&lt;p&gt;So I was looking around, and I wanted some sort of tool to allow me to be more aware about what was happening in the lower &amp;ldquo;bowels&amp;rdquo; of the network that I&amp;rsquo;m on with my laptop. So what is it that I want&amp;hellip;&lt;/p&gt;
&lt;p&gt;What I really want is some sort of mac-address based buddy list. One that would show my a list of the mac addresses talking on my network, and allow me to alias them. That would be cool.&lt;/p&gt;
&lt;p&gt;I couldn&amp;rsquo;t find such program, but I found something kinda close, its called arpalert. If you are using ubuntu you can simply run &amp;ldquo;apt-get install arpalert&amp;rdquo; (I love ubuntu!)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;kyle@kyle-laptop:~$ apt-cache search arpalert
arpalert - Monitor ARP changes in ethernet networks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You should edit the config file to your liking, but the main thing is the log file in /var/log/arpalert.log. I have it logging every interesting arp thing, because I find them interesting! You need to read up on it if you want to fully understand arpalert: &lt;a href=&#34;http://www.arpalert.org/&#34;&gt;http://www.arpalert.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So that is the first part. The second part is the piece that notifies you of something suspicious. Who wants to tail a log file all the time? For this I use something called &amp;ldquo;notify-send&amp;rdquo;. Try running it. If you don&amp;rsquo;t have it and you are running Ubuntu it will tell you that its part of the &amp;quot;&lt;/p&gt;
&lt;p&gt;So I was looking around, and I wanted some sort of tool to allow me to be more aware about what was happening in the lower &amp;ldquo;bowels&amp;rdquo; of the network that I&amp;rsquo;m on with my laptop. So what is it that I want&amp;hellip;&lt;/p&gt;
&lt;p&gt;What I really want is some sort of mac-address based buddy list. One that would show my a list of the mac addresses talking on my network, and allow me to alias them. That would be cool.&lt;/p&gt;
&lt;p&gt;I couldn&amp;rsquo;t find such program, but I found something kinda close, its called arpalert. If you are using ubuntu you can simply run &amp;ldquo;apt-get install arpalert&amp;rdquo; (I love ubuntu!)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;kyle@kyle-laptop:~$ apt-cache search arpalert
arpalert - Monitor ARP changes in ethernet networks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You should edit the config file to your liking, but the main thing is the log file in /var/log/arpalert.log. I have it logging every interesting arp thing, because I find them interesting! You need to read up on it if you want to fully understand arpalert: &lt;a href=&#34;http://www.arpalert.org/&#34;&gt;http://www.arpalert.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/tailarps.png&#34;&gt;&lt;img src=&#34;../../uploads/tailarps.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So that is the first part. The second part is the piece that notifies you of something suspicious. Who wants to tail a log file all the time? For this I use something called &amp;ldquo;notify-send&amp;rdquo;. Try running it. If you don&amp;rsquo;t have it and you are running Ubuntu it will tell you that its part of the &amp;ldquo;libnotify-bin&amp;rdquo; package. So you will need to run:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ sudo apt-get install libnotify-bin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Try it! run &amp;ldquo;notify test&amp;rdquo;. A popup should show up! Simple! Now, we need a small program to put the pieces together and glue it. I want my popup when odd things happen. Here is the glue I wrote, modify at will:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tail -n 0  -F /var/log/arpalert.log | awk -W interactive &amp;lsquo;{print $8, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12}&amp;rsquo; |
while read heading message
do  notify-send -t 3000 &amp;ndash; &amp;ldquo;Arp Alert&amp;rdquo; &amp;ldquo;${heading} ${message}&amp;rdquo;
done&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don&amp;rsquo;t think I&amp;rsquo;m done with it yet. (I want to make it give different time outs for different types of messages, and I want it to change the heading to something dynamic instead of the Arp Alert, but yea) So put that in a .sh and run it! Nothing may pop up! Try putting something new on the network and seeing if something shows up in the log. Its pretty easy to troubleshoot and modify to your liking.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/screenshot1.png&#34;&gt;&lt;img src=&#34;../../uploads/screenshot1.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>DNS Cache Poisoning </title>
      <link>/dns-cache-poisoning/</link>
      <pubDate>Thu, 31 Jul 2008 12:00:10 +0000</pubDate>
      <guid>/dns-cache-poisoning/</guid>
      <description>&lt;p&gt;Recently a DNS expert found a flaw in the way that DNS servers talk to other DNS servers to get records that allows interested parties (hackers) to insert their own records. If you need a primer: the &lt;a href=&#34;http://en.wikipedia.org/wiki/DNS_cache_poisoning&#34;&gt;Wikipedia link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Well&amp;hellip; a DNS flaw is no fun without a tool to use it. So this guy &amp;ldquo;HD Moore&amp;rdquo; wrote a program (script) that takes advantage of this and makes it relatively easy for someone to use something called &lt;a href=&#34;http://www.metasploit.com/framework/&#34;&gt;Metasploit&lt;/a&gt; to tinker with it. Cool!&lt;/p&gt;
&lt;p&gt;Turns out that it works, and people are fixing their DNS servers so that this can&amp;rsquo;t happen. (I fixed mine as soon as the fix was out.) But not everyone can fix their own, often they are at the mercy of their ISP&amp;rsquo;s. (Have you ever called up your ISP&amp;rsquo;s help desk and told them they need to upgrade their DNS servers to protect them against cache poisoning? Heheheh.. right)&lt;/p&gt;
&lt;p&gt;So one day, Mr. Moore goes to google.com on his computer at work, and guess what, its not the real google.com&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.networkworld.com/news/2008/073008-dns-attack-writer-a-victim.html&#34;&gt;The news article&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Well played sir. Well played.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Failing Hard Drives</title>
      <link>/failing-hard-drives/</link>
      <pubDate>Wed, 26 Mar 2008 14:14:12 +0000</pubDate>
      <guid>/failing-hard-drives/</guid>
      <description>&lt;p&gt;So lots of people use computers, and lots of people have harddrives.&lt;/p&gt;
&lt;p&gt;At my work I deal with lots and lots of computers and lots and lots of drives. So during a week I see plenty of failing drives, just because of the statistics.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.techchee.com/wp-content/uploads/2007/11/double-boil-your-failed-hard-drive-to-recover-its-precious-data-271107.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;So now-a-days I run a &amp;ldquo;smart test&amp;rdquo; on the drive to see how it is. Unfortunately most drive testers and smart tests are crap. So I made my own and I want to share it with you&amp;hellip;.&lt;/p&gt;
&lt;p&gt;It runs in Linux of course, and all it needs is a program called smartctl. (If you don&amp;rsquo;t have it and you are running Ubuntu, just run &amp;ldquo;apt-get install smartmontools&amp;rdquo; )&lt;/p&gt;
&lt;p&gt;Here is how you can get it and run it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ wget a.xkyle.com/smarttest
$ bash smarttest&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thats it! Just give it about 2 minutes to run.  Here is an example output:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hours: 27519
SMART Errors: 0
Reallocated / Pending: 2 / 0
Read Speed: 41 MB/s&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;WARNING: This drive has over 26,280 (3 years) hours on it and should not be used as a Primary
WARNING: This drive has some reallocated sectors, this shouldn&amp;rsquo;t be used as a primary and requires judgment if it is to be used for a secondary&lt;/p&gt;
&lt;p&gt;Its  pretty self explainitory if you know about drives. If you want to know more about smart paramaters, check out the &lt;a href=&#34;http://en.wikipedia.org/wiki/Self-Monitoring,_Analysis,_and_Reporting_Technology&#34;&gt;wikipedia article.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Putting the Clock Together</title>
      <link>/putting-the-clock-together/</link>
      <pubDate>Fri, 14 Dec 2007 14:22:12 +0000</pubDate>
      <guid>/putting-the-clock-together/</guid>
      <description>&lt;p&gt;We have finally built enough pieces of the clock together to get some digits!
It basically comes down to a white wooden box, a piece of cardboard with the LEDs wired, running to a RJ45 jack. Then a stryofoam cutout painted black, with a white piece of paper and plexyglass on top for a face.&lt;/p&gt;
&lt;p&gt;Here is the template with wired LEDS:
&lt;a href=&#34;../../uploads/p1000194.JPG&#34;&gt;&lt;img src=&#34;../../uploads/p1000194.thumbnail.JPG&#34; alt=&#34;p1000194.JPG&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A multitude of completed digits (still missing the blank faceplate).
&lt;a href=&#34;../../uploads/p1000196.JPG&#34;&gt;&lt;img src=&#34;../../uploads/p1000196.thumbnail.JPG&#34; alt=&#34;p1000196.JPG&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Painting the boxes:
&lt;a href=&#34;../../uploads/p1000198.JPG&#34;&gt;&lt;img src=&#34;../../uploads/p1000198.thumbnail.JPG&#34; alt=&#34;p1000198.JPG&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an experiment with reflective tape: (didn&amp;rsquo;t make a difference)
&lt;a href=&#34;../../uploads/p1000200.JPG&#34;&gt;&lt;img src=&#34;../../uploads/p1000200.thumbnail.JPG&#34; alt=&#34;p1000200.JPG&#34;&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And yet even more boxes are coming:
&lt;a href=&#34;../../uploads/p1000204.JPG&#34;&gt;&lt;img src=&#34;../../uploads/p1000204.thumbnail.JPG&#34; alt=&#34;p1000204.JPG&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is the magic controller: (A little messy, not finished)
&lt;a href=&#34;../../uploads/p1000205.JPG&#34;&gt;&lt;img src=&#34;../../uploads/p1000205.thumbnail.JPG&#34; alt=&#34;p1000205.JPG&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And the outputs of the controller: (Just cat5 connectors, cheap!)
&lt;a href=&#34;../../uploads/p1000206.JPG&#34;&gt;&lt;img src=&#34;../../uploads/p1000206.thumbnail.JPG&#34; alt=&#34;p1000206.JPG&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Great American Teach In - Wikipedia</title>
      <link>/great-american-teach-in-wikipedia/</link>
      <pubDate>Thu, 15 Nov 2007 22:07:44 +0000</pubDate>
      <guid>/great-american-teach-in-wikipedia/</guid>
      <description>&lt;p&gt;This is a video that I made for some fourth graders in an attempt to explain what Wikipedia is, how it works, and why it is neat. We made a new article together, and they all went home with a piece of fiber optic to remind them of the event. This is the video I showed them for historical purposes:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.macromedia.com/go/getflashplayer&#34;&gt;Get the Flash Player&lt;/a&gt; to see this player.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Blogging = Human Salvation</title>
      <link>/blogging-human-salvation/</link>
      <pubDate>Tue, 09 Oct 2007 19:27:24 +0000</pubDate>
      <guid>/blogging-human-salvation/</guid>
      <description>&lt;p&gt;Now hear me out, I used to be a hater. It seems that the more people blog, the more the internet is loaded up with wasted bandwidth and ad space. The truth is that blogging has a very small marginal cost, and usually blogging occupies time that would not otherwise be spent doing &amp;ldquo;productive&amp;rdquo; things.&lt;/p&gt;
&lt;p&gt;But! What if all of humanity blogged, and then we could aggregate all blogs on the internet. Now, what if a mother of a special-needs child is having a hard time putting her child to sleep, so she blogs about it. Then the blogging software analyzes the blog and finds similar posts from other authors (Google plugin?) and she reads about the other experiences of other mothers. Can you see how the sum of human experiences, not just book knowledge (like Wikipedia) are tagged, sorted and searchable.&lt;/p&gt;
&lt;p&gt;That is what I think blogging is all about, not hits. I don&amp;rsquo;t care how many people read my blog. None for all I care. Its the sum of all blogs that adds to our collective experience repository called the internet which is important.&lt;/p&gt;
&lt;p&gt;Another way to think about it is like this: imagine a graph where number of reads is the Y axis and you lined up webpages on the X. Sort it and it would look something like this:
&lt;img src=&#34;http://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Long_tail.svg/250px-Long_tail.svg.png&#34; alt=&#34;long tail&#34;&gt;
(From the Wikipedia &lt;a href=&#34;http://en.wikipedia.org/wiki/The_Long_Tail&#34;&gt;Article&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;So most people read the most popular websites. My blog, your blog, your moms blog, they are all in the yellow. Guess what? The sum of the yellow is more than the sum of the green! (Sometimes) That is the true power of the internet, is the capability of supporting an infrastructure for the tail end. How? You guessed it: blogs, wikis, and other user generated content. (I hate to say, web 2.0? ::shivers::)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Clock Primer</title>
      <link>/clock-primer/</link>
      <pubDate>Wed, 02 May 2007 02:08:51 +0000</pubDate>
      <guid>/clock-primer/</guid>
      <description>&lt;p&gt;Here is the intro to the clock project:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dcam0114.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0114.thumbnail.JPG&#34; alt=&#34;Stencil&#34;&gt;&lt;/a&gt; We start with a template made at a sign shop, and the cover the edges with aluminum tape to protect them from the heat from the hot wire.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dcam0115.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0115.thumbnail.JPG&#34; alt=&#34;styro1&#34;&gt;&lt;/a&gt; I&amp;rsquo;ve pushed out holes with a strait wire and a blow torch to give my entry points for my hot wires. Its going to be a plunge and cut job.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dcam0117.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0117.thumbnail.JPG&#34; alt=&#34;laser&#34;&gt;&lt;/a&gt; The laserpointer helps guide the hot wire because it inevitably bends and makes crooked cuts. Following the point makes straiter cuts. The laser isn&amp;rsquo;t cutting the stryofoam for us&amp;hellip; Yet.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dcam0118a.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0118a.thumbnail.JPG&#34; alt=&#34;cut&#34;&gt;&lt;/a&gt; Only a CNC machine could have done a better job. A CNC machine&amp;hellip;. With a laser cutter!!!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dcam0119b.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0119b.thumbnail.JPG&#34; alt=&#34;r&#34;&gt;&lt;/a&gt; This clock is going to have a great R-Value !!!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dcam0112.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0112.thumbnail.JPG&#34; alt=&#34;tease&#34;&gt;&lt;/a&gt; God help us all.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Whiteboard Whiteboard Interactions</title>
      <link>/whiteboard-whiteboard-interactions/</link>
      <pubDate>Sat, 27 Jan 2007 21:12:26 +0000</pubDate>
      <guid>/whiteboard-whiteboard-interactions/</guid>
      <description>&lt;p&gt;Here are some of the messages that are passed back and forth between my roommate and I&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/100_0654.JPG&#34;&gt;&lt;img src=&#34;../../uploads/100_0654.thumbnail.JPG&#34; alt=&#34;A&#34;&gt;&lt;/a&gt;Sometimes we make up silly things&amp;hellip; late at night&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/100_0660.JPG&#34;&gt;&lt;img src=&#34;../../uploads/100_0660.thumbnail.JPG&#34; alt=&#34;Shaver&#34;&gt;&lt;/a&gt; Sometimes we borrow each others things&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/100_0663.JPG&#34;&gt;&lt;img src=&#34;../../uploads/100_0663.thumbnail.JPG&#34; alt=&#34;weld&#34;&gt;&lt;/a&gt; And we get the better of each other with our antics&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/100_0665.JPG&#34;&gt;&lt;img src=&#34;../../uploads/100_0665.thumbnail.JPG&#34; alt=&#34;piano&#34;&gt;&lt;/a&gt; Our true feelings for each other?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/100_0677.JPG&#34;&gt;&lt;img src=&#34;../../uploads/100_0677.thumbnail.JPG&#34; alt=&#34;todo&#34;&gt;&lt;/a&gt; To do list&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/100_0662.JPG&#34;&gt;&lt;img src=&#34;../../uploads/100_0662.thumbnail.JPG&#34; alt=&#34;mountain&#34;&gt;&lt;/a&gt;  Sometimes we DON&amp;rsquo;T let each other borrow things&amp;hellip;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Compact Flash Replacement</title>
      <link>/compact-flash-replacement/</link>
      <pubDate>Sat, 20 Jan 2007 16:38:32 +0000</pubDate>
      <guid>/compact-flash-replacement/</guid>
      <description>&lt;p&gt;My laptop is a Sharp MM20, which I knew I was going to spraypaint eventually, I just needed a reason to. After about a year of wear and scratches from abuse, it was time.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m replacing the harddrive in my laptop with a 4GB flash card.
It should be faster:&lt;/p&gt;
&lt;p&gt;/dev/sdb:
Timing cached reads:   3532 MB in  2.00 seconds = 1766.79 MB/sec
Timing buffered disk reads:   58 MB in  3.10 seconds =  18.69 MB/sec
root@kyle-desktop:~# hdparm -tT /dev/sda&lt;/p&gt;
&lt;p&gt;/dev/sda:
Timing cached reads:   3532 MB in  2.00 seconds = 1766.13 MB/sec
Timing buffered disk reads:   78 MB in  3.04 seconds =  25.67 MB/sec&lt;/p&gt;
&lt;p&gt;Pros: Faster seeks and sustained I/O. Lifetime Warranty.
Cons: Expensive. 25% Disk Space. Bad blocks over time.&lt;/p&gt;
&lt;p&gt;So lets do it! I started with instructions from &lt;a href=&#34;http://www.evilblobbie.com/mm20.php&#34;&gt;this guy.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;First step, disassembling the laptop:
&lt;a href=&#34;../../uploads/dcam0093.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0093.thumbnail.JPG&#34; alt=&#34;Opened up&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/dcam0100.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0100.thumbnail.JPG&#34; alt=&#34;Antenna&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/dcam0098.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0098.thumbnail.JPG&#34; alt=&#34;Drive&#34;&gt;&lt;/a&gt;
You can see that this is not a normal size laptop hard drive. This is a 1.8&amp;rdquo; drive. So I bought this card and a cheap laptop IDE to flash converter off of ebay. (Sorry I don&amp;rsquo;t have a picture.)&lt;/p&gt;
&lt;p&gt;We used containers with numbers and a legend to keep track of small screws and parts. When we were done, these were left over:
&lt;a href=&#34;../../uploads/dcam0106.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0106.thumbnail.JPG&#34; alt=&#34;Leftovers&#34;&gt;&lt;/a&gt;
(Don&amp;rsquo;t ask me whats in compartment 8, I really don&amp;rsquo;t know what it goes to. But there is the leftover drive and screws)&lt;/p&gt;
&lt;p&gt;Second step,  spray paint it! Oh, and don&amp;rsquo;t forget to put in the flash card when you put it back together.
&lt;a href=&#34;../../uploads/dcam0118.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0118.thumbnail.JPG&#34; alt=&#34;Closed1&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/dcam0108.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0108.thumbnail.JPG&#34; alt=&#34;Finished1&#34;&gt;&lt;/a&gt;
Can you spot the laptop?
&lt;a href=&#34;../../uploads/dcam0119.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0119.thumbnail.JPG&#34; alt=&#34;Woods1&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/dcam0120.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0120.thumbnail.JPG&#34; alt=&#34;Woods2&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Of course, with only a 4GB drive, I will be running my favorite operating system of course, &lt;a href=&#34;http://www.ubuntu.com&#34;&gt;Ubuntu&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/screenshot.png&#34;&gt;&lt;img src=&#34;../../uploads/screenshot.thumbnail.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And the obligatory screen shot!&lt;/p&gt;
&lt;p&gt;Want more? &lt;a href=&#34;../../other/laptopproject.zip&#34;&gt;Click here to download every picture we took.&lt;/a&gt;
Closing thoughts:
I&amp;rsquo;m extremely impressed. The camo-finish is beautiful and feels great thanks to the clear coat. Nothing broke, and everything went back together correctly thanks to good documentation and pictures for reference. If you have any questions about what I did, post a comment and I&amp;rsquo;ll come back and answer them.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Next Piece: Armband</title>
      <link>/next-piece-armband/</link>
      <pubDate>Wed, 10 Jan 2007 06:34:04 +0000</pubDate>
      <guid>/next-piece-armband/</guid>
      <description>&lt;p&gt;We were thinking it would be cool to have the LCD display be on the arm, instead of the side of the gun.&lt;/p&gt;
&lt;p&gt;So we have modified roller-blading wrist-guards for the purpose:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dcam0088.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0088.thumbnail.JPG&#34; alt=&#34;Armband Pieces&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/dcam0089.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0089.thumbnail.JPG&#34; alt=&#34;Completed Armband&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/dcam0091.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0091.thumbnail.JPG&#34; alt=&#34;Wearing the Armband&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Watch Karl &lt;a href=&#34;../../video/armband.mov&#34;&gt;Show It Off!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Karl&amp;rsquo;s Mom helped with the sewing. Next we&amp;rsquo;ll add buttons for mode and backlight. I think they will be very thin and unobtrusive.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Our First Real Gun</title>
      <link>/our-first-real-gun/</link>
      <pubDate>Sat, 06 Jan 2007 06:26:25 +0000</pubDate>
      <guid>/our-first-real-gun/</guid>
      <description>&lt;p&gt;Here it is, the big milestone: our first real gun!&lt;/p&gt;
&lt;p&gt;From this:
&lt;a href=&#34;../../uploads/dcam0069.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0069.thumbnail.JPG&#34; alt=&#34;The beginning of the first gun&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To &lt;a href=&#34;../../video/gun.mov&#34;&gt;this!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can see how we have gutted an air-soft gun, and inserted our led&amp;rsquo;s and switches to turn it into a lasertag gun. All of our guns will be interchangeable as they will all have the same Cat-5 Pinout. Eventually we will have an array of guns and we can change their properties in software. (Reload times, shots per clip, damage per shot, etc..)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Prototype #1</title>
      <link>/prototype-1/</link>
      <pubDate>Sun, 31 Dec 2006 15:33:53 +0000</pubDate>
      <guid>/prototype-1/</guid>
      <description>&lt;p&gt;Here are some pictures and some short video of our first prototype gun!&lt;/p&gt;
&lt;p&gt;A more or less finished backpack.&lt;a href=&#34;../../uploads/dcam0040.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0040.thumbnail.JPG&#34; alt=&#34;Finished Pack&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2x4 Gun and LCD wristband&lt;img src=&#34;../../uploads/dcam0039.JPG&#34; alt=&#34;Gun and LCD&#34;&gt;&lt;/p&gt;
&lt;p&gt;I love having good tools, and this $40 soldering iron is the best $40 I ever spent.&lt;a href=&#34;../../uploads/dcam0038.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0038.thumbnail.JPG&#34; alt=&#34;The New Soldering Iron&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nicd battery pack! With velcro! &lt;a href=&#34;../../uploads/dcam0037.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0037.thumbnail.JPG&#34; alt=&#34;battery pack&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And Kyle explains it all! Sort of&amp;hellip;&lt;a href=&#34;../../video/prototype.mov&#34;&gt;&lt;img src=&#34;../../uploads/screenshot0.thumbnail.png&#34; alt=&#34;Movie Thumb&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Lasertag Camo</title>
      <link>/lasertag-camo/</link>
      <pubDate>Sat, 18 Nov 2006 23:10:34 +0000</pubDate>
      <guid>/lasertag-camo/</guid>
      <description>&lt;p&gt;Karl and I have taken our backpacks and spraypainted them camo! And we have installed a few components for two test boxes. (Radio, Mainboard, and ISD)
&lt;a href=&#34;../../uploads/dcam0031.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0031.thumbnail.JPG&#34; alt=&#34;Spraypainted with components&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/dcam0037.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0037.thumbnail.JPG&#34; alt=&#34;hold it while it glues&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/dcam0050.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0050.thumbnail.JPG&#34; alt=&#34;handsome me&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/dcam0030.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0030.thumbnail.JPG&#34; alt=&#34;Seated radio&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/dcam0045.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0045.thumbnail.JPG&#34; alt=&#34;wire wraparound&#34;&gt;&lt;/a&gt;&lt;a href=&#34;../../uploads/dcam0044.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0044.thumbnail.JPG&#34; alt=&#34;solder the usb&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can see me wiring the usb port for the usb key thing. (It stores your personal stats)&lt;/p&gt;
&lt;p&gt;More to come as we prototype our first two boxes!
&lt;a href=&#34;../../uploads/dcam0049.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0049.thumbnail.JPG&#34; alt=&#34;me with the tester&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Ahoy! Holes!</title>
      <link>/ahoy-holes/</link>
      <pubDate>Mon, 25 Sep 2006 01:52:41 +0000</pubDate>
      <guid>/ahoy-holes/</guid>
      <description>&lt;p&gt;The next step in our Lasertag construction project is the preperation of the boxes for our components. We have decided to put all of the electronics in a backpack. But the backpack will need some I/O. We need a rj-45 for the gun, two for the arm-band, a usb for the key, and a hole for the power switch and power plug. How do we do it? We need square holes&amp;hellip;
Well, the best and nicest way I can think to do it is to use a little thing called a roto-zip bit. I bought 5 of them at Home Depot for a few dollars. Luckily Karl has a drill press:
&lt;a href=&#34;../../uploads/dcam0007.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0007.thumbnail.JPG&#34; alt=&#34;The Drill Press Rig&#34;&gt;&lt;/a&gt;
The pictures mostly speak for themselves. Basically we used a cardstock template:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dcam0003.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0003.thumbnail.JPG&#34; alt=&#34;Using Template&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then spraypainted the negative:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dcam0005.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0005.thumbnail.JPG&#34; alt=&#34;Spraypaint Negative&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And Routed!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dcam0008.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0008.thumbnail.JPG&#34; alt=&#34;Route it Out&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We will have to use a flat file to make some holes perfect:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dcam0013.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0013.thumbnail.JPG&#34; alt=&#34;We are going to have to file&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But the USB port worked great (It actually looks better in real life)!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../uploads/dcam0012.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0012.thumbnail.JPG&#34; alt=&#34;Usb fits nice&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I can&amp;rsquo;t think of a better way to do this in plastic. And the results are nice, with patience and hard work. We have done 10 boxes like this.&lt;/p&gt;
&lt;p&gt;All thanks to this one bit:
&lt;a href=&#34;../../uploads/dcam0019.JPG&#34;&gt;&lt;img src=&#34;../../uploads/dcam0019.thumbnail.JPG&#34; alt=&#34;The miracle tool&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Who needs a CNC machine when you have steady hands Karl? &lt;a href=&#34;../../video/routing.mov&#34;&gt;(Video) &lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Help Expose Scientology</title>
      <link>/help-expose-scientology/</link>
      <pubDate>Sat, 01 Jul 2006 17:56:59 +0000</pubDate>
      <guid>/help-expose-scientology/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://adventuresinlinux.tv/images/sean.jpg&#34; alt=&#34; &#34;&gt;One of my personally favorite websites is &lt;a href=&#34;http://www.yourethemannowdog.com&#34;&gt;YoureTheManNowDog.com&lt;/a&gt;. (You may have noticed the cameo in episode 1.) Founded in 2001, an uncountable number of spoofs have been made, and are stored at the sister site, ytmnd.com. There you can setup your own account and create your own YoureTheManNowDog&amp;rsquo;s! I love it.&lt;/p&gt;
&lt;p&gt;Also, being in Tampa, I live close to the &lt;a href=&#34;http://theunfunnytruth.ytmnd.com/&#34;&gt;Scientology &lt;/a&gt;headquarters in Clearwater. Recently a YoureTheManNowDog has been created that exposes some of the terrible things that the church of &lt;a href=&#34;http://theunfunnytruth.ytmnd.com/&#34;&gt;Scientology&lt;/a&gt; has done. They are a very dangerous cult using blackmail, scare tactics, and a strong legal team to achieve their ends.&lt;/p&gt;
&lt;p&gt;Many people don&amp;rsquo;t know the specifics about their beliefs, nor are they aware of the underhanded tactics they use to shut down those who oppose them. I encourage everyone to see this ytmnd, then read on for how to help. (Click on the image below to see it in a new window.)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://theunfunnytruth.ytmnd.com/&#34;&gt;&lt;img src=&#34;http://www.adventuresinlinux.tv/images/unfunnytruth.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
Seen it? Terrible isn&amp;rsquo;t it. But what can we do? Expose. How? &lt;a href=&#34;http://en.wikipedia.org/wiki/Google_bomb&#34;&gt;Google bomb&lt;/a&gt; . If you are not familiar with the term, here is the &lt;a href=&#34;http://en.wikipedia.org/wiki/Google_bomb&#34;&gt;Wikipedia article&lt;/a&gt; on it. Basically the procedure makes a certain page come to the top of search results for a certian term. In this case, the ytmnd will come up when someone searches for the word, &lt;a href=&#34;http://theunfunnytruth.ytmnd.com/&#34;&gt;Scientology&lt;/a&gt;. Then anyone looking for information will be shown the truth.&lt;/p&gt;
&lt;p&gt;You can help! If you have any web page, blog, forum, in your signature, mailing list, anything, create links! Anywhere you use the word, &lt;a href=&#34;http://theunfunnytruth.ytmnd.com/&#34;&gt;Scientology&lt;/a&gt;, link it to &lt;a href=&#34;http://theunfunnytruth.ytmnd.com/&#34;&gt;http://theunfunnytruth.ytmnd.com/&lt;/a&gt;. The more links in place, the more Google&amp;rsquo;s search algorithm will believe it is the webpage most relevant to the word, &lt;a href=&#34;http://theunfunnytruth.ytmnd.com/&#34;&gt;Scientology&lt;/a&gt;. That is it! Simple. A successful Google-bomb will bring this site to light, and put &lt;a href=&#34;http://theunfunnytruth.ytmnd.com/&#34;&gt;Scientology&lt;/a&gt; under even more scrutiny. Perhaps over time the word &lt;a href=&#34;http://theunfunnytruth.ytmnd.com/&#34;&gt;Scientology&lt;/a&gt; will be associated with its horrific deeds, and be put to an end.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Myspace Friend Maps</title>
      <link>/myspace-friend-maps/</link>
      <pubDate>Mon, 22 May 2006 21:54:02 +0000</pubDate>
      <guid>/myspace-friend-maps/</guid>
      <description>&lt;p&gt;Ok, I have a seceret: I am a &lt;a href=&#34;http://www.myspace.com&#34;&gt;Myspace&lt;/a&gt; sellout. Everyone around me was like ooh yea, check out my myspace! Or Ooo, your myspace is sooo cool. Or, Wow, your myspace cures cancer. Well, so I made &lt;a href=&#34;http://www.myspace.com/routerihardlyknowher&#34;&gt;one&lt;/a&gt;, and added friends. I soon realized that Myspace.com is interesting. (Although it sucks too. Ads everywhere, people&amp;rsquo;s pages are often littered with cpu sucking garbage and animated gifs and crappy css.)&lt;/p&gt;
&lt;p&gt;But the Myspace chain bullitens or picture comments are not what makes Myspace.com interesting. Its is the social network map that is what is interesting. But how can I see the big picture? And what does it look like? In my search on how to do this, I came across &lt;a href=&#34;http://www.washedashore.com/people/friendster/&#34;&gt;Ben Discoe&amp;rsquo;s website&lt;/a&gt; and read about his work with a similar website: &lt;a href=&#34;http://www.friendster.com/&#34;&gt;friendster&lt;/a&gt;. I decided on a similar approach.&lt;/p&gt;
&lt;p&gt;First, because I do not have direct access to Myspace.com&amp;rsquo;s database of friends, I would have to create my own local database, and then write a spider to crawl around and populate it. So I did. I wrote it in what I know best, are you ready people: bash scripting. You can look at it for yourself in the download below, its called myspace.robot. Basically it parses a myspace profile, grabs friends, pictures, music, interests, as much information that can be harvested, and then inserts it into the database. This robot is called by other scripts that say oh, pick a random profile. Or I have a robot caller that calls in a tree like fashion, starting at a given place and traversing so many levels (myspace.tree).&lt;/p&gt;
&lt;p&gt;Once I have the information (friends in particular). We can use this information to create a map. At first I used imagemagick to generate an image. It sucked.&lt;img src=&#34;../../uploads/2006/07/mosaic.thumbnail.png&#34; alt=&#34;Early Attempt&#34;&gt;&lt;/p&gt;
&lt;p&gt;It took me a while to find graphviz.&lt;a href=&#34;../../uploads/sample1.jpg&#34;&gt;&lt;img src=&#34;../../uploads/sample1.thumbnail.jpg&#34; alt=&#34;Friend map1&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Graphviz is the perfect tool for the job. I feed it the nodes, and weights between nodes. It calculated the best positions to put the nodes. It is very configurable, including different ploting algorithms, graph styles, and output formats. It take all of this and put it into a php-mysql interface for others to input their graph-making requests. My server on the backend takes the top one on the queue, grabs the appropriate profiles, creates the friend-map, then sends an email to let the user know that the map is ready!&lt;/p&gt;
&lt;p&gt;A simple map that includes you and your friends turns out to be pretty large. If you want to go any deeper than that you have to use svg. (bitmaps turn very large.) But how does the program know where to put each friend, realative to the other friends in the map? Answer: It uses the &amp;ldquo;howgoodofafriendareyou&amp;rdquo; metric. The more friends you have in common with another person, the better a friend you are.
I&amp;rsquo;ll have the link up in a while for the interface for others to make their own maps. You might be interested to see who myspace thinks their closest friend is.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>LaserTag!</title>
      <link>/lasertag/</link>
      <pubDate>Mon, 22 May 2006 21:39:16 +0000</pubDate>
      <guid>/lasertag/</guid>
      <description>&lt;p&gt;My friends and I are currently constructing our own lasertag guns using &lt;a href=&#34;http://www.lasertagparts.com&#34;&gt;this&lt;/a&gt; as a base.&lt;/p&gt;
&lt;p&gt;Here is our checklist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Construct electronic components using the above milestag components.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get and modify vests to hold components&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Melt aluminum and pour guns into molds! Rock on!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connect it all together and play!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We&amp;rsquo;ve go the electronics together. The vests are on their way via UPS, and my friend Karl and I have the furnace ready and we can melt aluminum! We still need to put sensors on the vests, pour the guns, and interface it all together. But man, what an adventure!&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>
